{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(kill:*)",
      "Bash(pgrep:*)",
      "Bash(pkill:*)",
      "Bash(timeout:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''生成测试用的7天有效JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''新的7天有效JWT Token:'', newToken);\n\")",
      "Bash(sqlite3:*)",
      "Bash(echo:*)",
      "Bash(find:*)",
      "Bash(source:*)",
      "Bash(JWT_TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2IiwiZW1haWwiOiJhZG1pbkB0cmFkZW1lLmNvbSIsIm1lbWJlcnNoaXBMZXZlbCI6InByb2Zlc3Npb25hbCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTcwNDk1MTQsImV4cCI6MTc1NzY1NDMxNCwiYXVkIjoidHJhZGVtZS1hcHAiLCJpc3MiOiJ0cmFkZW1lLXVzZXItc2VydmljZSJ9.a4t9vtj3_gtv-yOHFsRRq97oew8-KZqRM5izbKBnrAk\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''新的7天有效JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''新的7天有效JWT Token:'', newToken);\n\")",
      "Bash(npm run build:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''WebSocket超时修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''WebSocket超时修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''WebSocket流式调试强化测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 AI聊天页面WebSocket自动连接修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 AI聊天页面WebSocket自动连接修复测试用JWT Token:'', newToken);\n\")",
      "Bash(grep:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket超时修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI调试测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI错误修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI错误修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI密钥修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI密钥修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI密钥修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI密钥修复后功能验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 Claude API端点修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 Claude API端点修复验证用JWT Token:'', newToken);\n\")",
      "Bash(pip install:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket流式消息修复测试用JWT Token:'', newToken);\n\")",
      "Bash(netstat:*)",
      "Bash(curl:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI流式响应修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI流式响应修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI流式响应修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI流式响应修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket AI修复最终验证用JWT Token:'', newToken);\n\")",
      "WebFetch(domain:reactjs.org)",
      "Bash(chmod:*)",
      "Bash(npm install:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 诊断Claude账号服务问题用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(newToken);\n\")",
      "Bash(export:*)",
      "WebFetch(domain:43.167.252.120)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 K线数据测试用JWT Token:'', newToken);\n\")",
      "Bash(uvicorn:*)",
      "Bash(./start-dev.sh:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 测试交易页面API连接用JWT Token:'', newToken);\n\")",
      "Bash(touch:*)",
      "Bash(/dev/null)",
      "Bash(apt install:*)",
      "Bash(npm start)",
      "Bash(JWT_TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2IiwiZW1haWwiOiJhZG1pbkB0cmFkZW1lLmNvbSIsIm1lbWJlcnNoaXBMZXZlbCI6InByb2Zlc3Npb25hbCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTcxNjAwMzUsImV4cCI6MTc1NzI0NjQzNSwiYXVkIjoidHJhZGVtZS1hcHAiLCJpc3MiOiJ0cmFkZW1lLXVzZXItc2VydmljZSJ9.lSTgLy1U4Dm7EjubSJnrdJG8AAkCKKL18yurZrSbrgs\")",
      "Bash(JWT_TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2IiwiZW1haWwiOiJhZG1pbkB0cmFkZW1lLmNvbSIsIm1lbWJlcnNoaXBMZXZlbCI6InByb2Zlc3Npb25hbCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTcxNjAxNDEsImV4cCI6MTc1NzI0NjU0MSwiYXVkIjoidHJhZGVtZS1hcHAiLCJpc3MiOiJ0cmFkZW1lLXVzZXItc2VydmljZSJ9.f4uuZ583oxOe8Y9ynBl9ZbyxFTcgS5btuBRUczBglzw\")",
      "Bash(sed:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 AI服务清理后功能测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 Trading页面数据集成测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 价格数据修复测试用JWT Token:'', newToken);\n\")",
      "Bash(__NEW_LINE__ echo -e \"\\n2. 测试 BTC-USDT (dash格式):\")",
      "Bash(__NEW_LINE__ echo -e \"\\n2. 使用 dash 格式:\")",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(__NEW_LINE__ echo \"🎉 最终修复验证:\")",
      "Read(//var/log/nginx/**)",
      "Bash(nginx:*)",
      "Read(//etc/nginx/sites-available/**)",
      "Bash(systemctl:*)",
      "Bash(npx tsc:*)",
      "Bash(od:*)",
      "Bash(sudo systemctl status:*)",
      "Bash(sudo systemctl:*)",
      "Bash(sudo sed:*)",
      "Bash(sudo nginx:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 AI对话服务测试用JWT Token:'', newToken);\n\")",
      "Bash(sudo cp:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 完整AI对话流程测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 MACD策略测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 MACD策略修复测试用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\nconsole.log(''Fresh JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''测试完整回测功能JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''完整回测功能测试JWT Token:'', newToken);\n\")",
      "Bash(lsof:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''Fresh JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 AI策略生成提示词优化验证用JWT Token:'', newToken);\n\")",
      "Bash(npm run dev:*)",
      "Bash(node:*)",
      "Bash(vite build:*)",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 Claude客户端修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 Claude代理修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 WebSocket流式AI修复验证用JWT Token:'', newToken);\n\")",
      "Bash(JWT_SECRET=\"trademe_super_secret_jwt_key_for_development_only_32_chars\" node -e \"\nconst jwt = require(''jsonwebtoken'');\nconst newToken = jwt.sign(\n  {\n    userId: ''6'',\n    email: ''admin@trademe.com'',\n    membershipLevel: ''professional'',\n    type: ''access''\n  },\n  process.env.JWT_SECRET,\n  {\n    expiresIn: ''7d'',\n    audience: ''trademe-app'',\n    issuer: ''trademe-user-service''\n  }\n);\n\nconsole.log(''🔧 策略生成消息保存修复验证用JWT Token:'', newToken);\n\")",
      "Bash(npm run type-check:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/root",
      "/var/www/html",
      "/etc/nginx/sites-enabled"
    ]
  }
}