{"version":3,"file":"index-Bsh83YmY.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/goober/dist/goober.modern.js","../../node_modules/react-hot-toast/dist/index.mjs","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../node_modules/zustand/esm/middleware.mjs","../../node_modules/axios/lib/helpers/bind.js","../../node_modules/axios/lib/utils.js","../../node_modules/axios/lib/core/AxiosError.js","../../node_modules/axios/lib/helpers/null.js","../../node_modules/axios/lib/helpers/toFormData.js","../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../node_modules/axios/lib/helpers/buildURL.js","../../node_modules/axios/lib/core/InterceptorManager.js","../../node_modules/axios/lib/defaults/transitional.js","../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../../node_modules/axios/lib/platform/browser/classes/FormData.js","../../node_modules/axios/lib/platform/browser/classes/Blob.js","../../node_modules/axios/lib/platform/browser/index.js","../../node_modules/axios/lib/platform/common/utils.js","../../node_modules/axios/lib/platform/index.js","../../node_modules/axios/lib/helpers/toURLEncodedForm.js","../../node_modules/axios/lib/helpers/formDataToJSON.js","../../node_modules/axios/lib/defaults/index.js","../../node_modules/axios/lib/helpers/parseHeaders.js","../../node_modules/axios/lib/core/AxiosHeaders.js","../../node_modules/axios/lib/core/transformData.js","../../node_modules/axios/lib/cancel/isCancel.js","../../node_modules/axios/lib/cancel/CanceledError.js","../../node_modules/axios/lib/core/settle.js","../../node_modules/axios/lib/helpers/parseProtocol.js","../../node_modules/axios/lib/helpers/speedometer.js","../../node_modules/axios/lib/helpers/throttle.js","../../node_modules/axios/lib/helpers/progressEventReducer.js","../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../node_modules/axios/lib/helpers/cookies.js","../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../node_modules/axios/lib/helpers/combineURLs.js","../../node_modules/axios/lib/core/buildFullPath.js","../../node_modules/axios/lib/core/mergeConfig.js","../../node_modules/axios/lib/helpers/resolveConfig.js","../../node_modules/axios/lib/adapters/xhr.js","../../node_modules/axios/lib/helpers/composeSignals.js","../../node_modules/axios/lib/helpers/trackStream.js","../../node_modules/axios/lib/adapters/fetch.js","../../node_modules/axios/lib/adapters/adapters.js","../../node_modules/axios/lib/core/dispatchRequest.js","../../node_modules/axios/lib/env/data.js","../../node_modules/axios/lib/helpers/validator.js","../../node_modules/axios/lib/core/Axios.js","../../node_modules/axios/lib/cancel/CancelToken.js","../../node_modules/axios/lib/helpers/spread.js","../../node_modules/axios/lib/helpers/isAxiosError.js","../../node_modules/axios/lib/helpers/HttpStatusCode.js","../../node_modules/axios/lib/axios.js","../../node_modules/axios/index.js","../../src/utils/errorHandler.ts","../../src/services/api/client.ts","../../src/services/api/auth.ts","../../src/store/authStore.ts","../../src/store/themeStore.ts","../../node_modules/@react-oauth/google/dist/index.esm.js","../../src/store/languageStore.ts","../../src/components/charts/ProfitCurveChart.tsx","../../src/components/charts/AdvancedBacktestChart.tsx","../../src/pages/HomePage.tsx","../../node_modules/react-hook-form/dist/index.esm.mjs","../../node_modules/@hookform/resolvers/dist/resolvers.mjs","../../node_modules/@hookform/resolvers/zod/dist/zod.mjs","../../node_modules/zod/v3/helpers/util.js","../../node_modules/zod/v3/ZodError.js","../../node_modules/zod/v3/locales/en.js","../../node_modules/zod/v3/errors.js","../../node_modules/zod/v3/helpers/parseUtil.js","../../node_modules/zod/v3/helpers/errorUtil.js","../../node_modules/zod/v3/types.js","../../src/pages/LoginPageNew.tsx","../../src/components/common/LoadingSpinner.tsx","../../src/components/common/Button.tsx","../../src/pages/VerificationPage.tsx","../../src/services/api/market.ts","../../src/utils/websocketManager.ts","../../src/store/marketStore.ts","../../src/services/api/strategy.ts","../../src/store/strategyStore.ts","../../src/services/api/ai.ts","../../src/services/ai/websocketClient.ts","../../src/services/ai/websocketAI.ts","../../src/store/aiStore.ts","../../src/services/api/trading.ts","../../src/store/tradingStore.ts","../../src/services/api/backtest.ts","../../src/store/backtestStore.ts","../../src/store/index.ts","../../src/pages/OverviewPage.tsx","../../src/services/api/liveTrading.ts","../../src/pages/StrategiesPage.tsx","../../src/pages/StrategyLiveDetailsPage.tsx","../../src/pages/LiveStrategiesPage.tsx","../../src/components/common/ProtectedRoute.tsx","../../src/components/common/Input.tsx","../../src/utils/format.ts","../../src/pages/BacktestPage.tsx","../../src/pages/BacktestDetailsPage.tsx","../../src/components/ErrorBoundary.tsx","../../node_modules/@heroicons/react/24/outline/esm/ChevronDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ChevronUpIcon.js","../../src/components/ai/BacktestResultCard.tsx","../../src/utils/strategyAnalyzer.ts","../../src/pages/AIChatPage.tsx","../../src/utils/auth.ts","../../src/pages/APIManagementPage.tsx","../../src/pages/ProfilePage.tsx","../../src/pages/AdminDashboardPage.tsx","../../src/pages/UserManagementPage.tsx","../../src/pages/ClaudeManagementPage.tsx","../../src/pages/WalletManagementPage.tsx","../../src/pages/DataManagementPageReal.tsx","../../src/pages/NotFoundPage.tsx","../../src/components/layout/MainLayout.tsx","../../src/components/layout/AuthLayout.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|  +/g,n=/\\n+/g,o=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let n in e){let c=e[n];\"@\"==n[0]?\"i\"==n[1]?r=n+\" \"+c+\";\":l+=\"f\"==n[1]?o(c,n):n+\"{\"+o(c,\"k\"==n[1]?\"\":t)+\"}\":\"object\"==typeof c?l+=o(c,t?t.replace(/([^,])+/g,e=>n.replace(/([^,]*:\\S+\\([^)]*\\))|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):n):null!=c&&(n=/^--/.test(n)?n:n.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=o.p?o.p(n,c):n+\":\"+c+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},c={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},i=(e,t,r,i,p)=>{let u=s(e),d=c[u]||(c[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!c[d]){let t=u!==e?e:(e=>{let t,r,o=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?o.shift():t[3]?(r=t[3].replace(n,\" \").trim(),o.unshift(o[0][r]=o[0][r]||{})):o[0][t[1]]=t[2].replace(n,\" \").trim();return o[0]})(e);c[d]=o(p?{[\"@keyframes \"+d]:t}:t,r?\"\":\".\"+d)}let f=r&&c.g?c.g:null;return r&&(c.g=c[d]),((e,t,r,l)=>{l?t.data=t.data.replace(l,e):-1===t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(c[d],t,i,f),d},p=(e,t,r)=>e.reduce((e,l,a)=>{let n=t[a];if(n&&n.call){let e=n(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;n=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":o(e,\"\"):!1===e?\"\":e}return e+l+(null==n?\"\":n)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return i(l.unshift?l.raw?p(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let d,f,g,b=u.bind({g:1}),h=u.bind({k:1});function m(e,t,r,l){o.p=t,d=e,f=r,g=l}function j(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:f&&f()},c),r.o=/ *go\\d+/.test(s),c.className=u.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=e;return e[0]&&(i=c.as||e,delete c.as),g&&i[0]&&g(c),d(i,c)}return t?t(a):a}}export{u as css,r as extractCss,b as glob,h as keyframes,m as setup,j as styled};\n","\"use client\";\nvar Z=e=>typeof e==\"function\",h=(e,t)=>Z(e)?e(t):e;var W=(()=>{let e=0;return()=>(++e).toString()})(),E=(()=>{let e;return()=>{if(e===void 0&&typeof window<\"u\"){let t=matchMedia(\"(prefers-reduced-motion: reduce)\");e=!t||t.matches}return e}})();import{useEffect as ee,useState as te,useRef as oe}from\"react\";var re=20,k=\"default\";var H=(e,t)=>{let{toastLimit:o}=e.settings;switch(t.type){case 0:return{...e,toasts:[t.toast,...e.toasts].slice(0,o)};case 1:return{...e,toasts:e.toasts.map(r=>r.id===t.toast.id?{...r,...t.toast}:r)};case 2:let{toast:s}=t;return H(e,{type:e.toasts.find(r=>r.id===s.id)?1:0,toast:s});case 3:let{toastId:a}=t;return{...e,toasts:e.toasts.map(r=>r.id===a||a===void 0?{...r,dismissed:!0,visible:!1}:r)};case 4:return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(r=>r.id!==t.toastId)};case 5:return{...e,pausedAt:t.time};case 6:let i=t.time-(e.pausedAt||0);return{...e,pausedAt:void 0,toasts:e.toasts.map(r=>({...r,pauseDuration:r.pauseDuration+i}))}}},v=[],j={toasts:[],pausedAt:void 0,settings:{toastLimit:re}},f={},Y=(e,t=k)=>{f[t]=H(f[t]||j,e),v.forEach(([o,s])=>{o===t&&s(f[t])})},_=e=>Object.keys(f).forEach(t=>Y(e,t)),Q=e=>Object.keys(f).find(t=>f[t].toasts.some(o=>o.id===e)),S=(e=k)=>t=>{Y(t,e)},se={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},V=(e={},t=k)=>{let[o,s]=te(f[t]||j),a=oe(f[t]);ee(()=>(a.current!==f[t]&&s(f[t]),v.push([t,s]),()=>{let r=v.findIndex(([l])=>l===t);r>-1&&v.splice(r,1)}),[t]);let i=o.toasts.map(r=>{var l,g,T;return{...e,...e[r.type],...r,removeDelay:r.removeDelay||((l=e[r.type])==null?void 0:l.removeDelay)||(e==null?void 0:e.removeDelay),duration:r.duration||((g=e[r.type])==null?void 0:g.duration)||(e==null?void 0:e.duration)||se[r.type],style:{...e.style,...(T=e[r.type])==null?void 0:T.style,...r.style}}});return{...o,toasts:i}};var ie=(e,t=\"blank\",o)=>({createdAt:Date.now(),visible:!0,dismissed:!1,type:t,ariaProps:{role:\"status\",\"aria-live\":\"polite\"},message:e,pauseDuration:0,...o,id:(o==null?void 0:o.id)||W()}),P=e=>(t,o)=>{let s=ie(t,e,o);return S(s.toasterId||Q(s.id))({type:2,toast:s}),s.id},n=(e,t)=>P(\"blank\")(e,t);n.error=P(\"error\");n.success=P(\"success\");n.loading=P(\"loading\");n.custom=P(\"custom\");n.dismiss=(e,t)=>{let o={type:3,toastId:e};t?S(t)(o):_(o)};n.dismissAll=e=>n.dismiss(void 0,e);n.remove=(e,t)=>{let o={type:4,toastId:e};t?S(t)(o):_(o)};n.removeAll=e=>n.remove(void 0,e);n.promise=(e,t,o)=>{let s=n.loading(t.loading,{...o,...o==null?void 0:o.loading});return typeof e==\"function\"&&(e=e()),e.then(a=>{let i=t.success?h(t.success,a):void 0;return i?n.success(i,{id:s,...o,...o==null?void 0:o.success}):n.dismiss(s),a}).catch(a=>{let i=t.error?h(t.error,a):void 0;i?n.error(i,{id:s,...o,...o==null?void 0:o.error}):n.dismiss(s)}),e};import{useEffect as X,useCallback as A,useRef as ne}from\"react\";var ce=1e3,w=(e,t=\"default\")=>{let{toasts:o,pausedAt:s}=V(e,t),a=ne(new Map).current,i=A((c,m=ce)=>{if(a.has(c))return;let p=setTimeout(()=>{a.delete(c),r({type:4,toastId:c})},m);a.set(c,p)},[]);X(()=>{if(s)return;let c=Date.now(),m=o.map(p=>{if(p.duration===1/0)return;let R=(p.duration||0)+p.pauseDuration-(c-p.createdAt);if(R<0){p.visible&&n.dismiss(p.id);return}return setTimeout(()=>n.dismiss(p.id,t),R)});return()=>{m.forEach(p=>p&&clearTimeout(p))}},[o,s,t]);let r=A(S(t),[t]),l=A(()=>{r({type:5,time:Date.now()})},[r]),g=A((c,m)=>{r({type:1,toast:{id:c,height:m}})},[r]),T=A(()=>{s&&r({type:6,time:Date.now()})},[s,r]),d=A((c,m)=>{let{reverseOrder:p=!1,gutter:R=8,defaultPosition:z}=m||{},O=o.filter(u=>(u.position||z)===(c.position||z)&&u.height),K=O.findIndex(u=>u.id===c.id),B=O.filter((u,I)=>I<K&&u.visible).length;return O.filter(u=>u.visible).slice(...p?[B+1]:[0,B]).reduce((u,I)=>u+(I.height||0)+R,0)},[o]);return X(()=>{o.forEach(c=>{if(c.dismissed)i(c.id,c.removeDelay);else{let m=a.get(c.id);m&&(clearTimeout(m),a.delete(c.id))}})},[o,i]),{toasts:o,handlers:{updateHeight:g,startPause:l,endPause:T,calculateOffset:d}}};import*as y from\"react\";import{styled as J,keyframes as G}from\"goober\";import*as b from\"react\";import{styled as U,keyframes as xe}from\"goober\";import{styled as pe,keyframes as M}from\"goober\";var de=M`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}`,me=M`\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,le=M`\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}`,C=pe(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#ff4b4b\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${de} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ${me} 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ${e=>e.secondary||\"#fff\"};\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ${le} 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n`;import{styled as ue,keyframes as fe}from\"goober\";var Te=fe`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`,F=ue(\"div\")`\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ${e=>e.secondary||\"#e0e0e0\"};\n  border-right-color: ${e=>e.primary||\"#616161\"};\n  animation: ${Te} 1s linear infinite;\n`;import{styled as ye,keyframes as q}from\"goober\";var ge=q`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}`,he=q`\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}`,L=ye(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#61d345\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${ge} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ${he} 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${e=>e.secondary||\"#fff\"};\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n`;var be=U(\"div\")`\n  position: absolute;\n`,Se=U(\"div\")`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n`,Ae=xe`\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,Pe=U(\"div\")`\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ${Ae} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n`,$=({toast:e})=>{let{icon:t,type:o,iconTheme:s}=e;return t!==void 0?typeof t==\"string\"?b.createElement(Pe,null,t):t:o===\"blank\"?null:b.createElement(Se,null,b.createElement(F,{...s}),o!==\"loading\"&&b.createElement(be,null,o===\"error\"?b.createElement(C,{...s}):b.createElement(L,{...s})))};var Re=e=>`\n0% {transform: translate3d(0,${e*-200}%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n`,Ee=e=>`\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,${e*-150}%,-1px) scale(.6); opacity:0;}\n`,ve=\"0%{opacity:0;} 100%{opacity:1;}\",De=\"0%{opacity:1;} 100%{opacity:0;}\",Oe=J(\"div\")`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n`,Ie=J(\"div\")`\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n`,ke=(e,t)=>{let s=e.includes(\"top\")?1:-1,[a,i]=E()?[ve,De]:[Re(s),Ee(s)];return{animation:t?`${G(a)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${G(i)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},N=y.memo(({toast:e,position:t,style:o,children:s})=>{let a=e.height?ke(e.position||t||\"top-center\",e.visible):{opacity:0},i=y.createElement($,{toast:e}),r=y.createElement(Ie,{...e.ariaProps},h(e.message,e));return y.createElement(Oe,{className:e.className,style:{...a,...o,...e.style}},typeof s==\"function\"?s({icon:i,message:r}):y.createElement(y.Fragment,null,i,r))});import{css as _e,setup as Ve}from\"goober\";import*as x from\"react\";Ve(x.createElement);var we=({id:e,className:t,style:o,onHeightUpdate:s,children:a})=>{let i=x.useCallback(r=>{if(r){let l=()=>{let g=r.getBoundingClientRect().height;s(e,g)};l(),new MutationObserver(l).observe(r,{subtree:!0,childList:!0,characterData:!0})}},[e,s]);return x.createElement(\"div\",{ref:i,className:t,style:o},a)},Me=(e,t)=>{let o=e.includes(\"top\"),s=o?{top:0}:{bottom:0},a=e.includes(\"center\")?{justifyContent:\"center\"}:e.includes(\"right\")?{justifyContent:\"flex-end\"}:{};return{left:0,right:0,display:\"flex\",position:\"absolute\",transition:E()?void 0:\"all 230ms cubic-bezier(.21,1.02,.73,1)\",transform:`translateY(${t*(o?1:-1)}px)`,...s,...a}},Ce=_e`\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n`,D=16,Fe=({reverseOrder:e,position:t=\"top-center\",toastOptions:o,gutter:s,children:a,toasterId:i,containerStyle:r,containerClassName:l})=>{let{toasts:g,handlers:T}=w(o,i);return x.createElement(\"div\",{\"data-rht-toaster\":i||\"\",style:{position:\"fixed\",zIndex:9999,top:D,left:D,right:D,bottom:D,pointerEvents:\"none\",...r},className:l,onMouseEnter:T.startPause,onMouseLeave:T.endPause},g.map(d=>{let c=d.position||t,m=T.calculateOffset(d,{reverseOrder:e,gutter:s,defaultPosition:t}),p=Me(c,m);return x.createElement(we,{id:d.id,key:d.id,onHeightUpdate:T.updateHeight,className:d.visible?Ce:\"\",style:p},d.type===\"custom\"?h(d.message,d):a?a(d):x.createElement(N,{toast:d,position:c}))}))};var zt=n;export{L as CheckmarkIcon,C as ErrorIcon,F as LoaderIcon,N as ToastBar,$ as ToastIcon,Fe as Toaster,zt as default,h as resolveValue,n as toast,w as useToaster,V as useToasterStore};\n//# sourceMappingURL=index.mjs.map","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n  \n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.11.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","import toast from 'react-hot-toast'\nimport { AxiosError } from 'axios'\n\nexport enum ErrorType {\n  NETWORK = 'network',\n  AUTH = 'auth', \n  VALIDATION = 'validation',\n  SERVER = 'server',\n  WEBSOCKET = 'websocket',\n  API = 'api',\n  UNKNOWN = 'unknown'\n}\n\nexport interface AppError {\n  type: ErrorType\n  code?: string | number\n  message: string\n  details?: any\n  timestamp: number\n  source?: string\n}\n\nexport class ErrorHandler {\n  private static instance: ErrorHandler\n  private errorListeners: Array<(error: AppError) => void> = []\n\n  static getInstance(): ErrorHandler {\n    if (!ErrorHandler.instance) {\n      ErrorHandler.instance = new ErrorHandler()\n    }\n    return ErrorHandler.instance\n  }\n\n  /**\n   * 处理各种类型的错误\n   */\n  handle(error: any, source?: string, showToast: boolean = true): AppError {\n    const appError = this.parseError(error, source)\n    \n    // 记录错误日志\n    this.logError(appError)\n    \n    // 显示用户友好的错误消息\n    if (showToast) {\n      this.showErrorToast(appError)\n    }\n    \n    // 通知错误监听器\n    this.notifyListeners(appError)\n    \n    return appError\n  }\n\n  /**\n   * 解析不同类型的错误\n   */\n  private parseError(error: any, source?: string): AppError {\n    const timestamp = Date.now()\n    \n    // Axios HTTP错误\n    if (error?.isAxiosError || error?.response) {\n      return this.parseAxiosError(error, source, timestamp)\n    }\n    \n    // WebSocket错误\n    if (error?.type === 'websocket' || source === 'websocket') {\n      return {\n        type: ErrorType.WEBSOCKET,\n        message: this.getWebSocketErrorMessage(error),\n        details: error,\n        timestamp,\n        source\n      }\n    }\n    \n    // JavaScript原生错误\n    if (error instanceof Error) {\n      return {\n        type: ErrorType.UNKNOWN,\n        message: error.message,\n        details: {\n          name: error.name,\n          stack: error.stack\n        },\n        timestamp,\n        source\n      }\n    }\n    \n    // 字符串错误\n    if (typeof error === 'string') {\n      return {\n        type: ErrorType.UNKNOWN,\n        message: error,\n        timestamp,\n        source\n      }\n    }\n    \n    // 未知错误类型\n    return {\n      type: ErrorType.UNKNOWN,\n      message: '发生未知错误',\n      details: error,\n      timestamp,\n      source\n    }\n  }\n\n  /**\n   * 解析Axios错误\n   */\n  private parseAxiosError(error: AxiosError, source?: string, timestamp?: number): AppError {\n    const { response, request, message } = error\n\n    if (response) {\n      // 服务器响应错误\n      const status = response.status\n      const data = response.data as any\n\n      if (status === 401) {\n        return {\n          type: ErrorType.AUTH,\n          code: status,\n          message: data?.message || '认证失败，请重新登录',\n          details: data,\n          timestamp: timestamp || Date.now(),\n          source\n        }\n      }\n\n      if (status === 403) {\n        return {\n          type: ErrorType.AUTH,\n          code: status,\n          message: data?.message || '权限不足',\n          details: data,\n          timestamp: timestamp || Date.now(),\n          source\n        }\n      }\n\n      if (status === 422 || status === 400) {\n        return {\n          type: ErrorType.VALIDATION,\n          code: status,\n          message: data?.message || '请求参数错误',\n          details: data,\n          timestamp: timestamp || Date.now(),\n          source\n        }\n      }\n\n      if (status === 429) {\n        return {\n          type: ErrorType.API,\n          code: status,\n          message: data?.message || '请求过于频繁，请稍后再试',\n          details: data,\n          timestamp: timestamp || Date.now(),\n          source\n        }\n      }\n\n      if (status >= 500) {\n        return {\n          type: ErrorType.SERVER,\n          code: status,\n          message: data?.message || '服务器内部错误，请稍后再试',\n          details: data,\n          timestamp: timestamp || Date.now(),\n          source\n        }\n      }\n\n      return {\n        type: ErrorType.API,\n        code: status,\n        message: data?.message || `请求失败 (${status})`,\n        details: data,\n        timestamp: timestamp || Date.now(),\n        source\n      }\n    }\n\n    if (request) {\n      // 网络错误\n      return {\n        type: ErrorType.NETWORK,\n        message: '网络连接失败，请检查网络设置',\n        details: { message, request },\n        timestamp: timestamp || Date.now(),\n        source\n      }\n    }\n\n    // 请求配置错误\n    return {\n      type: ErrorType.UNKNOWN,\n      message: message || '请求配置错误',\n      details: error,\n      timestamp: timestamp || Date.now(),\n      source\n    }\n  }\n\n  /**\n   * 获取WebSocket错误消息\n   */\n  private getWebSocketErrorMessage(error: any): string {\n    if (error?.code) {\n      switch (error.code) {\n        case 1006:\n          return '连接异常关闭，正在尝试重连...'\n        case 1000:\n          return '连接正常关闭'\n        case 1001:\n          return '服务器端点离线'\n        case 1002:\n          return '协议错误'\n        case 1003:\n          return '不支持的数据类型'\n        case 1005:\n          return '未收到关闭状态码'\n        case 1011:\n          return '服务器遇到意外情况'\n        default:\n          return `WebSocket连接错误 (${error.code})`\n      }\n    }\n    \n    return error?.message || 'WebSocket连接失败'\n  }\n\n  /**\n   * 显示错误提示\n   */\n  private showErrorToast(error: AppError): void {\n    const { type, message } = error\n\n    switch (type) {\n      case ErrorType.AUTH:\n        toast.error(message, { \n          id: 'auth-error',\n          duration: 5000,\n          icon: '🔒'\n        })\n        break\n        \n      case ErrorType.NETWORK:\n        toast.error(message, {\n          id: 'network-error',\n          duration: 6000,\n          icon: '🌐'\n        })\n        break\n        \n      case ErrorType.VALIDATION:\n        toast.error(message, {\n          id: 'validation-error',\n          duration: 4000,\n          icon: '⚠️'\n        })\n        break\n        \n      case ErrorType.WEBSOCKET:\n        toast.error(message, {\n          id: 'websocket-error',\n          duration: 3000,\n          icon: '🔌'\n        })\n        break\n        \n      case ErrorType.SERVER:\n        toast.error(message, {\n          id: 'server-error',\n          duration: 5000,\n          icon: '🔥'\n        })\n        break\n        \n      default:\n        toast.error(message, {\n          duration: 4000,\n          icon: '❌'\n        })\n    }\n  }\n\n  /**\n   * 记录错误日志\n   */\n  private logError(error: AppError): void {\n    const logLevel = this.getLogLevel(error.type)\n    const logMessage = `[${error.type.toUpperCase()}] ${error.message}`\n    \n    if (import.meta.env.MODE === 'development') {\n      // 开发环境详细日志\n      console.group(`🔥 Error: ${logMessage}`)\n      console.error('Details:', error)\n      console.error('Timestamp:', new Date(error.timestamp).toISOString())\n      if (error.source) console.error('Source:', error.source)\n      console.groupEnd()\n    } else {\n      // 生产环境简化日志\n      console.error(logMessage, {\n        type: error.type,\n        code: error.code,\n        source: error.source,\n        timestamp: error.timestamp\n      })\n    }\n\n    // TODO: 发送错误到日志服务\n    // this.sendToLoggingService(error)\n  }\n\n  /**\n   * 获取日志级别\n   */\n  private getLogLevel(errorType: ErrorType): 'error' | 'warn' | 'info' {\n    switch (errorType) {\n      case ErrorType.AUTH:\n      case ErrorType.SERVER:\n        return 'error'\n      case ErrorType.NETWORK:\n      case ErrorType.WEBSOCKET:\n        return 'warn'\n      default:\n        return 'info'\n    }\n  }\n\n  /**\n   * 添加错误监听器\n   */\n  addErrorListener(listener: (error: AppError) => void): void {\n    this.errorListeners.push(listener)\n  }\n\n  /**\n   * 移除错误监听器\n   */\n  removeErrorListener(listener: (error: AppError) => void): void {\n    this.errorListeners = this.errorListeners.filter(l => l !== listener)\n  }\n\n  /**\n   * 通知所有监听器\n   */\n  private notifyListeners(error: AppError): void {\n    this.errorListeners.forEach(listener => {\n      try {\n        listener(error)\n      } catch (err) {\n        console.error('Error in error listener:', err)\n      }\n    })\n  }\n\n  /**\n   * 创建可重试的错误处理器\n   */\n  createRetryableHandler(\n    maxRetries: number = 3,\n    retryDelay: number = 1000\n  ) {\n    return async (\n      operation: () => Promise<any>,\n      context?: string\n    ): Promise<any> => {\n      let lastError: any\n      \n      for (let attempt = 1; attempt <= maxRetries; attempt++) {\n        try {\n          return await operation()\n        } catch (error) {\n          lastError = error\n          const appError = this.parseError(error, context)\n          \n          // 某些错误不应该重试\n          if (appError.type === ErrorType.AUTH || \n              appError.type === ErrorType.VALIDATION) {\n            throw error\n          }\n          \n          if (attempt === maxRetries) {\n            this.handle(error, context)\n            throw error\n          }\n          \n          // 等待后重试\n          await new Promise(resolve => \n            setTimeout(resolve, retryDelay * Math.pow(2, attempt - 1))\n          )\n        }\n      }\n      \n      throw lastError\n    }\n  }\n}\n\n// 全局错误处理器实例\nexport const errorHandler = ErrorHandler.getInstance()\n\n// 便捷的错误处理函数\nexport const handleError = (error: any, source?: string, showToast: boolean = true): AppError => {\n  return errorHandler.handle(error, source, showToast)\n}\n\n// 创建重试处理器\nexport const createRetryHandler = (maxRetries?: number, retryDelay?: number) => {\n  return errorHandler.createRetryableHandler(maxRetries, retryDelay)\n}","import axios, { AxiosInstance, AxiosResponse, InternalAxiosRequestConfig } from 'axios'\nimport { handleError } from '@/utils/errorHandler'\n\n// 创建axios实例\nconst createApiClient = (baseURL: string, serviceName = 'api'): AxiosInstance => {\n  const client = axios.create({\n    baseURL,\n    timeout: 60000, // 增加超时时间到60秒，适应AI响应时间\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n\n  // 请求拦截器 - 添加认证token\n  client.interceptors.request.use(\n    (config: InternalAxiosRequestConfig) => {\n      // 从localStorage获取token\n      const authData = localStorage.getItem('auth-storage')\n      if (authData) {\n        try {\n          const parsedData = JSON.parse(authData)\n          // 兼容两种数据格式：直接存储token或嵌套在state中\n          const token = parsedData.state?.token || parsedData.token\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`\n            console.log(`🔑 [${serviceName}] Added token to request:`, token.substring(0, 20) + '...')\n          } else {\n            console.warn(`⚠️ [${serviceName}] No token found in auth data`)\n          }\n        } catch (error) {\n          console.error(`❌ [${serviceName}] Failed to parse auth data:`, error)\n        }\n      } else {\n        console.warn(`⚠️ [${serviceName}] No auth data in localStorage`)\n      }\n      return config\n    },\n    (error) => {\n      return Promise.reject(error)\n    }\n  )\n\n  // 响应拦截器 - 处理错误和token刷新\n  client.interceptors.response.use(\n    (response: AxiosResponse) => {\n      return response\n    },\n    async (error) => {\n      const originalRequest = error.config\n\n      // 401错误处理 - token过期\n      if (error.response?.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true\n\n        // 只有用户服务才尝试刷新token，交易服务直接清除认证状态\n        if (serviceName === 'user') {\n          try {\n            // 尝试刷新token\n            const authData = localStorage.getItem('auth-storage')\n            if (authData) {\n              const parsedData = JSON.parse(authData)\n              // 兼容两种数据格式：直接存储token或嵌套在state中\n              const currentToken = parsedData.state?.token || parsedData.token\n              if (currentToken) {\n                // 调用refresh token API\n                const refreshResponse = await client.post('/auth/refresh', {\n                  token: currentToken\n                })\n                \n                const newToken = refreshResponse.data.token\n                \n                // 更新localStorage中的token（保持原有格式）\n                if (parsedData.state) {\n                  // 如果原来是嵌套格式，保持嵌套\n                  const updatedState = { ...parsedData.state, token: newToken }\n                  localStorage.setItem('auth-storage', JSON.stringify({ state: updatedState }))\n                } else {\n                  // 如果原来是平级格式，保持平级\n                  const updatedData = { ...parsedData, token: newToken }\n                  localStorage.setItem('auth-storage', JSON.stringify(updatedData))\n                }\n                \n                // 重新设置请求头\n                originalRequest.headers.Authorization = `Bearer ${newToken}`\n                \n                // 重试原请求\n                return client(originalRequest)\n              }\n            }\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError)\n          }\n        }\n        \n        // 交易服务401错误或用户服务刷新失败，清除认证状态\n        console.warn(`${serviceName} service returned 401, clearing auth state`)\n        localStorage.removeItem('auth-storage')\n        window.location.href = '/login'\n        return Promise.reject(error)\n      }\n\n      // 使用统一错误处理机制\n      const appError = handleError(error, 'api-client', false)\n      \n      // 返回处理后的错误对象，让上层可以获取更多信息\n      return Promise.reject(appError)\n    }\n  )\n\n  return client\n}\n\n// 创建不同的API客户端实例\n// 根据环境变量决定使用哪个API地址\nconst apiBaseUrl = import.meta.env.VITE_API_BASE_URL || '/api/v1'\nconst tradingApiUrl = import.meta.env.VITE_TRADING_API_URL || 'http://localhost:8001/api/v1'\n\nexport const userServiceClient = createApiClient(apiBaseUrl, 'user')\nexport const tradingServiceClient = createApiClient(tradingApiUrl, 'trading')\n\n// 通用API响应处理\nexport const handleApiResponse = <T>(response: AxiosResponse<T>): T => {\n  return response.data\n}\n\n// 通用API错误处理\nexport const handleApiError = (error: any): never => {\n  // 如果已经是处理过的AppError，直接使用其消息\n  if (error?.type && error?.message) {\n    throw new Error(error.message)\n  }\n  \n  // 否则进行标准错误解析\n  const appError = handleError(error, 'api-error', true)\n  throw new Error(appError.message)\n}","import { userServiceClient, handleApiResponse, handleApiError } from './client'\nimport type { \n  User, \n  LoginCredentials, \n  RegisterData, \n  LoginResponse \n} from '@/types/auth'\n\nexport const authApi = {\n  // 用户登录\n  async login(credentials: LoginCredentials): Promise<LoginResponse> {\n    try {\n      const response = await userServiceClient.post('/auth/login', credentials)\n      const data = handleApiResponse(response)\n      // 将后端的access_token字段映射为前端期望的token字段\n      return {\n        user: data.data.user,\n        token: data.data.access_token,\n        refresh_token: data.data.refresh_token\n      }\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 用户注册\n  async register(data: RegisterData): Promise<LoginResponse> {\n    try {\n      const response = await userServiceClient.post('/auth/register', data)\n      const responseData = handleApiResponse(response)\n      // 注册成功后通常需要验证邮箱，返回用户信息但不自动登录\n      return {\n        user: responseData.data.user || null,\n        token: responseData.data.access_token || null,\n        refresh_token: responseData.data.refresh_token || null\n      }\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // Google OAuth登录\n  async loginWithGoogle(googleToken: string): Promise<LoginResponse> {\n    try {\n      const response = await userServiceClient.post('/auth/google', { \n        google_token: googleToken \n      })\n      const data = handleApiResponse(response)\n      return {\n        user: data.data.user,\n        token: data.data.access_token,\n        refresh_token: data.data.refresh_token\n      }\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 忘记密码\n  async forgotPassword(email: string): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/forgot-password', { email })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取用户信息\n  async getProfile(): Promise<User> {\n    try {\n      const response = await userServiceClient.get('/auth/profile')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 更新用户信息\n  async updateProfile(data: Partial<User>): Promise<User> {\n    try {\n      const response = await userServiceClient.put('/auth/profile', data)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 刷新token\n  async refreshToken(): Promise<{ token: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/refresh')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 发送验证邮件\n  async sendVerificationEmail(): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/send-verification')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 验证邮箱\n  async verifyEmail(token: string): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/verify-email', { token })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 发送密码重置邮件\n  async sendPasswordReset(email: string): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/password-reset', { email })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 重置密码\n  async resetPassword(token: string, password: string): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/password-reset/confirm', {\n        token,\n        password\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 修改密码\n  async changePassword(currentPassword: string, newPassword: string): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/change-password', {\n        current_password: currentPassword,\n        new_password: newPassword\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 退出登录\n  async logout(): Promise<{ message: string }> {\n    try {\n      const response = await userServiceClient.post('/auth/logout')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  }\n}","import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\nimport toast from 'react-hot-toast'\nimport { authApi } from '../services/api/auth'\nimport type { User, LoginCredentials, RegisterData } from '../types/auth'\n\ninterface AuthState {\n  // 状态\n  user: User | null\n  token: string | null\n  isAuthenticated: boolean\n  isLoading: boolean\n  error: string | null\n  \n  // 操作方法\n  login: (credentials: LoginCredentials) => Promise<{success: boolean, message?: string}>\n  register: (data: RegisterData) => Promise<{success: boolean, message?: string}>\n  loginWithGoogle: (credential: string) => Promise<{success: boolean, message?: string}>\n  logout: () => void\n  checkAuth: () => Promise<void>\n  updateProfile: (data: Partial<User>) => Promise<boolean>\n  refreshToken: () => Promise<boolean>\n  clearError: () => void\n  forgotPassword: (email: string) => Promise<boolean>\n  resetPassword: (token: string, newPassword: string) => Promise<boolean>\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      // 初始状态\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n      error: null,\n\n      // 登录\n      login: async (credentials: LoginCredentials) => {\n        set({ isLoading: true, error: null })\n        try {\n          const response = await authApi.login(credentials)\n          \n          set({\n            user: response.user,\n            token: response.token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null\n          })\n          \n          return { success: true }\n        } catch (error: any) {\n          const message = error.response?.data?.message || error.message || '登录失败'\n          let detailedMessage = message\n          \n          // 解析详细错误信息\n          if (message.includes('not found') || message.includes('不存在')) {\n            detailedMessage = '用户不存在'\n          } else if (message.includes('password') || message.includes('密码')) {\n            detailedMessage = '密码错误'\n          }\n          \n          set({ \n            isLoading: false,\n            error: detailedMessage\n          })\n          return { success: false, message: detailedMessage }\n        }\n      },\n\n      // 注册\n      register: async (data: RegisterData) => {\n        set({ isLoading: true, error: null })\n        try {\n          const response = await authApi.register(data)\n          \n          set({\n            user: response.user,\n            token: response.token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null\n          })\n          \n          return { success: true }\n        } catch (error: any) {\n          const message = error.response?.data?.message || '注册失败'\n          set({ \n            isLoading: false,\n            error: message\n          })\n          return { success: false, message }\n        }\n      },\n\n      // Google登录\n      loginWithGoogle: async (credential: string) => {\n        set({ isLoading: true, error: null })\n        try {\n          const response = await authApi.loginWithGoogle(credential)\n          \n          set({\n            user: response.user,\n            token: response.token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null\n          })\n          \n          return { success: true }\n        } catch (error: any) {\n          const message = error.response?.data?.message || 'Google登录失败'\n          set({ \n            isLoading: false,\n            error: message\n          })\n          return { success: false, message }\n        }\n      },\n\n      // 忘记密码\n      forgotPassword: async (email: string) => {\n        try {\n          await authApi.forgotPassword(email)\n          return true\n        } catch (error) {\n          return false\n        }\n      },\n\n      // 重置密码\n      resetPassword: async (token: string, newPassword: string) => {\n        try {\n          await authApi.resetPassword(token, newPassword)\n          return true\n        } catch (error) {\n          return false\n        }\n      },\n\n      // 登出\n      logout: () => {\n        set({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          isLoading: false,\n          error: null\n        })\n        toast.success('已退出登录')\n      },\n\n      // 检查认证状态\n      checkAuth: async () => {\n        const { token, isAuthenticated, user } = get()\n        \n        // 如果没有token，直接返回\n        if (!token) return\n        \n        // 如果已经认证且有用户信息，避免重复验证\n        if (isAuthenticated && user) return\n\n        set({ isLoading: true, error: null })\n        try {\n          const userProfile = await authApi.getProfile()\n          set({\n            user: userProfile,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null\n          })\n        } catch (error) {\n          // Token无效，清除认证状态\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            isLoading: false,\n            error: 'Token已失效，请重新登录'\n          })\n        }\n      },\n\n      // 更新个人资料\n      updateProfile: async (data: Partial<User>) => {\n        try {\n          const updatedUser = await authApi.updateProfile(data)\n          set(state => ({\n            user: { ...state.user!, ...updatedUser },\n            error: null\n          }))\n          toast.success('个人资料更新成功')\n          return true\n        } catch (error: any) {\n          const message = error.response?.data?.message || '更新失败'\n          set({ error: message })\n          toast.error(message)\n          return false\n        }\n      },\n\n      // 刷新token\n      refreshToken: async () => {\n        try {\n          const response = await authApi.refreshToken()\n          set({ token: response.token, error: null })\n          return true\n        } catch (error) {\n          // 刷新失败，清除认证状态\n          get().logout()\n          return false\n        }\n      },\n\n      // 清空错误\n      clearError: () => {\n        set({ error: null })\n      },\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({\n        token: state.token,\n        user: state.user,\n        isAuthenticated: state.isAuthenticated,\n      }),\n    }\n  )\n)","import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface ThemeState {\n  theme: 'light' | 'dark'\n  toggleTheme: () => void\n  setTheme: (theme: 'light' | 'dark') => void\n}\n\nexport const useThemeStore = create<ThemeState>()(\n  persist(\n    (set) => ({\n      theme: 'light',\n      \n      toggleTheme: () => set((state) => ({\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      })),\n      \n      setTheme: (theme) => set({ theme })\n    }),\n    {\n      name: 'theme-storage',\n      getStorage: () => localStorage\n    }\n  )\n)","'use client'\nimport React, { useState, useRef, useEffect, createContext, useMemo, useContext, useCallback } from 'react';\n\nfunction useLoadGsiScript(options = {}) {\r\n    const { nonce, onScriptLoadSuccess, onScriptLoadError } = options;\r\n    const [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = useState(false);\r\n    const onScriptLoadSuccessRef = useRef(onScriptLoadSuccess);\r\n    onScriptLoadSuccessRef.current = onScriptLoadSuccess;\r\n    const onScriptLoadErrorRef = useRef(onScriptLoadError);\r\n    onScriptLoadErrorRef.current = onScriptLoadError;\r\n    useEffect(() => {\r\n        const scriptTag = document.createElement('script');\r\n        scriptTag.src = 'https://accounts.google.com/gsi/client';\r\n        scriptTag.async = true;\r\n        scriptTag.defer = true;\r\n        scriptTag.nonce = nonce;\r\n        scriptTag.onload = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(true);\r\n            (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadSuccessRef);\r\n        };\r\n        scriptTag.onerror = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(false);\r\n            (_a = onScriptLoadErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadErrorRef);\r\n        };\r\n        document.body.appendChild(scriptTag);\r\n        return () => {\r\n            document.body.removeChild(scriptTag);\r\n        };\r\n    }, [nonce]);\r\n    return scriptLoadedSuccessfully;\r\n}\n\nconst GoogleOAuthContext = createContext(null);\r\nfunction GoogleOAuthProvider({ clientId, nonce, onScriptLoadSuccess, onScriptLoadError, children, }) {\r\n    const scriptLoadedSuccessfully = useLoadGsiScript({\r\n        nonce,\r\n        onScriptLoadSuccess,\r\n        onScriptLoadError,\r\n    });\r\n    const contextValue = useMemo(() => ({\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n    }), [clientId, scriptLoadedSuccessfully]);\r\n    return (React.createElement(GoogleOAuthContext.Provider, { value: contextValue }, children));\r\n}\r\nfunction useGoogleOAuth() {\r\n    const context = useContext(GoogleOAuthContext);\r\n    if (!context) {\r\n        throw new Error('Google OAuth components must be used within GoogleOAuthProvider');\r\n    }\r\n    return context;\r\n}\n\nfunction extractClientId(credentialResponse) {\r\n    var _a;\r\n    const clientId = (_a = credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.clientId) !== null && _a !== void 0 ? _a : credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.client_id;\r\n    return clientId;\r\n}\n\nconst containerHeightMap = { large: 40, medium: 32, small: 20 };\r\nfunction GoogleLogin({ onSuccess, onError, useOneTap, promptMomentNotification, type = 'standard', theme = 'outline', size = 'large', text, shape, logo_alignment, width, locale, click_listener, containerProps, ...props }) {\r\n    const btnContainerRef = useRef(null);\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                const { credential, select_by } = credentialResponse;\r\n                onSuccessRef.current({\r\n                    credential,\r\n                    clientId: extractClientId(credentialResponse),\r\n                    select_by,\r\n                });\r\n            },\r\n            ...props,\r\n        });\r\n        (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.renderButton(btnContainerRef.current, {\r\n            type,\r\n            theme,\r\n            size,\r\n            text,\r\n            shape,\r\n            logo_alignment,\r\n            width,\r\n            locale,\r\n            click_listener,\r\n        });\r\n        if (useOneTap)\r\n            (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a, _b, _c;\r\n            if (useOneTap)\r\n                (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        useOneTap,\r\n        type,\r\n        theme,\r\n        size,\r\n        text,\r\n        shape,\r\n        logo_alignment,\r\n        width,\r\n        locale,\r\n    ]);\r\n    return (React.createElement(\"div\", { ...containerProps, ref: btnContainerRef, style: { height: containerHeightMap[size], ...containerProps === null || containerProps === void 0 ? void 0 : containerProps.style } }));\r\n}\n\nfunction googleLogout() {\r\n    var _a, _b, _c;\r\n    (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.disableAutoSelect();\r\n}\n\n/* eslint-disable import/export */\r\nfunction useGoogleLogin({ flow = 'implicit', scope = '', onSuccess, onError, onNonOAuthError, overrideScope, state, ...props }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const clientRef = useRef();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const onNonOAuthErrorRef = useRef(onNonOAuthError);\r\n    onNonOAuthErrorRef.current = onNonOAuthError;\r\n    useEffect(() => {\r\n        var _a, _b;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        const clientMethod = flow === 'implicit' ? 'initTokenClient' : 'initCodeClient';\r\n        const client = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2[clientMethod]({\r\n            client_id: clientId,\r\n            scope: overrideScope ? scope : `openid profile email ${scope}`,\r\n            callback: (response) => {\r\n                var _a, _b;\r\n                if (response.error)\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef, response);\r\n                (_b = onSuccessRef.current) === null || _b === void 0 ? void 0 : _b.call(onSuccessRef, response);\r\n            },\r\n            error_callback: (nonOAuthError) => {\r\n                var _a;\r\n                (_a = onNonOAuthErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onNonOAuthErrorRef, nonOAuthError);\r\n            },\r\n            state,\r\n            ...props,\r\n        });\r\n        clientRef.current = client;\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [clientId, scriptLoadedSuccessfully, flow, scope, state]);\r\n    const loginImplicitFlow = useCallback((overrideConfig) => { var _a; return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestAccessToken(overrideConfig); }, []);\r\n    const loginAuthCodeFlow = useCallback(() => { var _a; return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestCode(); }, []);\r\n    return flow === 'implicit' ? loginImplicitFlow : loginAuthCodeFlow;\r\n}\n\nfunction useGoogleOneTapLogin({ onSuccess, onError, promptMomentNotification, cancel_on_tap_outside, prompt_parent_id, state_cookie_domain, hosted_domain, use_fedcm_for_prompt = false, use_fedcm_for_button = false, disabled, auto_select, }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        if (disabled) {\r\n            (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n            return;\r\n        }\r\n        (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                const { credential, select_by } = credentialResponse;\r\n                onSuccessRef.current({\r\n                    credential,\r\n                    clientId: extractClientId(credentialResponse),\r\n                    select_by,\r\n                });\r\n            },\r\n            hosted_domain,\r\n            cancel_on_tap_outside,\r\n            prompt_parent_id,\r\n            state_cookie_domain,\r\n            use_fedcm_for_prompt,\r\n            use_fedcm_for_button,\r\n            auto_select,\r\n        });\r\n        (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a, _b, _c;\r\n            (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n        };\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        cancel_on_tap_outside,\r\n        prompt_parent_id,\r\n        state_cookie_domain,\r\n        hosted_domain,\r\n        use_fedcm_for_prompt,\r\n        use_fedcm_for_button,\r\n        disabled,\r\n        auto_select,\r\n    ]);\r\n}\n\n/**\r\n * Checks if the user granted all the specified scope or scopes\r\n * @returns True if all the scopes are granted\r\n */\r\nfunction hasGrantedAllScopesGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    var _a, _b, _c;\r\n    if (!(window === null || window === void 0 ? void 0 : window.google))\r\n        return false;\r\n    return (((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAllScopes(tokenResponse, firstScope, ...restScopes)) || false);\r\n}\n\n/**\r\n * Checks if the user granted any of the specified scope or scopes.\r\n * @returns True if any of the scopes are granted\r\n */\r\nfunction hasGrantedAnyScopeGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    var _a, _b, _c;\r\n    if (!(window === null || window === void 0 ? void 0 : window.google))\r\n        return false;\r\n    return (((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAnyScope(tokenResponse, firstScope, ...restScopes)) || false);\r\n}\n\nexport { GoogleLogin, GoogleOAuthProvider, googleLogout, hasGrantedAllScopesGoogle, hasGrantedAnyScopeGoogle, useGoogleLogin, useGoogleOAuth, useGoogleOneTapLogin };\n","import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\n// 翻译文本\nconst translations = {\n  zh: {\n    // 登录页面\n    welcomeTitle: '欢迎来到Trademe',\n    welcomeSubtitle: '专业的数字货币策略交易平台',\n    activeUsers: '活跃用户',\n    tradingVolume: '交易量',\n    uptime: '系统稳定性',\n    platformDescription: '基于人工智能的量化交易平台，支持多交易所、自动化策略和智能风控',\n    createAccount: '创建账户',\n    accountLogin: '账户登录',\n    registerSubtitle: '开始您的智能交易之旅',\n    loginSubtitle: '欢迎回来，请登录您的账户',\n    orContinueWith: '或者使用其他方式',\n    username: '用户名',\n    enterUsername: '请输入用户名',\n    email: '邮箱地址',\n    enterEmail: '请输入邮箱地址',\n    password: '密码',\n    enterPassword: '请输入密码',\n    confirmPassword: '确认密码',\n    enterPasswordAgain: '请再次输入密码',\n    forgotPassword: '忘记密码',\n    enterEmailForReset: '输入邮箱以重置密码',\n    sendReset: '发送重置链接',\n    processing: '处理中...',\n    login: '登录',\n    haveAccount: '已有账户？',\n    noAccount: '还没有账户？',\n    loginNow: '立即登录',\n    registerNow: '立即注册',\n    byRegisteringAgree: '注册即表示您同意我们的',\n    termsOfService: '服务条款',\n    and: '和',\n    privacyPolicy: '隐私政策',\n    \n    // 错误消息\n    userNotFound: '用户不存在，请检查邮箱地址',\n    wrongPassword: '密码错误，请重试或重置密码',\n    loginFailed: '登录失败，请重试',\n    loginSuccess: '登录成功',\n    registerSuccess: '注册成功',\n    authError: '认证错误，请重试',\n    googleLoginSuccess: 'Google登录成功',\n    googleLoginFailed: 'Google登录失败',\n    googleLoginError: 'Google登录出错',\n    passwordResetSent: '密码重置链接已发送到您的邮箱',\n    passwordResetFailed: '发送重置链接失败',\n    passwordResetError: '重置密码时出错',\n    wantToRegister: '该用户不存在，是否要注册新账户？',\n    \n    // 其他页面通用\n    dashboard: '仪表板',\n    strategies: '策略管理',\n    trading: '实盘交易',\n    backtest: '回测分析',\n    aiAssistant: 'AI助手',\n    market: '市场数据',\n    portfolio: '投资组合',\n    settings: '设置',\n    logout: '退出登录',\n    profile: '个人资料',\n    notifications: '通知',\n    help: '帮助中心',\n    about: '关于我们',\n    contact: '联系我们',\n    language_setting: '语言',\n    theme_setting: '主题',\n    lightMode: '浅色模式',\n    darkMode: '深色模式',\n    \n    // 页面特定翻译\n    chartTrading: '图表交易',\n    liveTrading: '实盘交易',\n    tradingNotes: '交易心得',\n    apiManagement: 'API管理',\n    accountCenter: '账户中心',\n    membershipManagement: '会员管理',\n    personalSettings: '个人设置',\n    \n    // 概览页面\n    tradingOverview: '交易概览',\n    welcomeBack: '欢迎回来',\n    checkTradingDataAndQuickActions: '查看您的交易数据和快速操作',\n    realTimeConnected: '实时连接',\n    connectionLost: '连接断开',\n    totalStrategies: '策略总数',\n    running: '运行中',\n    totalProfit: '总收益',\n    winRate: '胜率',\n    quickActions: '快捷操作',\n    strategiesManagement: '策略管理',\n    viewAndManageStrategies: '查看和管理您的交易策略',\n    startAutomatedTrading: '开始实盘自动化交易',\n    strategyBacktest: '策略回测',\n    testStrategyPerformance: '测试策略历史表现',\n    getIntelligentTradingAdvice: '获取智能交易建议',\n    recentStrategies: '最近策略',\n    viewAll: '查看全部',\n    loadingStrategies: '加载策略中...',\n    viewDetails: '查看详情',\n    noStrategies: '暂无策略',\n    createFirstStrategy: '开始创建您的第一个交易策略',\n    createStrategy: '创建策略',\n    upgradeToCreate: '升级后创建',\n    createStrategyRequiresPremium: '创建策略需要升级到高级版本',\n    stopped: '已停止',\n    tradingPair: '交易对',\n    timeframe: '周期',\n    \n    // 策略页面\n    monitorRunningStrategies: '监控运行中的实盘交易，查看收益和交易详情',\n    totalLiveStrategies: '总实盘数',\n    runningLive: '运行中',\n    stoppedLive: '已停止',\n    pausedLive: '已暂停',\n    searchStrategies: '搜索策略...',\n    allStatus: '全部',\n    paused: '已暂停',\n    strategyName: '策略名称',\n    status: '状态',\n    profitLoss: '盈亏',\n    lastUpdate: '最近更新',\n    actions: '操作',\n    start: '启动',\n    stop: '停止',\n    pause: '暂停',\n    delete: '删除',\n    confirmDelete: '确定要删除策略',\n    strategyDeleted: '策略已删除',\n    strategyStarted: '已启动',\n    strategyStopped: '已停止',\n    strategyPaused: '已暂停',\n    startStrategyRequiresPremium: '启动策略需要高级版本',\n    loadingStrategiesError: '加载实盘失败',\n    strategiesLoaded: '个实盘',\n    noStrategiesMessage: '暂无策略数据',\n    createFirstStrategyMessage: '创建您的第一个交易策略开始实盘交易',\n    selected: '已选中',\n    currentFilter: '当前筛选',\n    clearFilter: '清除筛选',\n    \n    // AI聊天页面\n    aiChatWelcome: '您好！我是Trademe AI交易助手。我可以帮您：\\n\\n• 📈 分析市场趋势和技术指标\\n• 🤖 生成量化交易策略代码\\n• 💡 提供交易建议和风险评估\\n• 📊 解读回测结果和优化建议\\n\\n请告诉我您需要什么帮助？',\n    aiChatRequiresPremium: 'AI对话功能需要升级到高级版本',\n    aiResponseError: 'AI响应出错，请重试',\n    sendMessage: '发送',\n    typeMessage: '输入您的问题...',\n    aiTyping: 'AI正在思考...',\n    newChat: '新对话',\n    \n    // 回测页面\n    verifyTradingStrategy: '验证您的交易策略，优化投资决策',\n    totalBacktests: '总回测数',\n    completedSuccessfully: '成功完成',\n    executionFailed: '执行失败',\n    createBacktest: '创建回测',\n    backtestHistory: '回测历史',\n    backtestConfig: '回测配置',\n    selectStrategy: '选择策略',\n    strategyRequired: '请选择策略',\n    confirmDeleteBacktest: '确定要删除这个回测吗？',\n    getStrategiesError: '获取策略列表失败',\n    completed: '已完成',\n    failed: '已失败',\n    unknown: '未知',\n    \n    // 通用状态文本\n    selectOption: '请选择...',\n    required: '必填项',\n    optional: '可选项',\n    \n    // 交易心得页面\n    shareTradeThoughts: '分享交易心得，学习交流经验',\n    totalNotes: '心得总数',\n    publicNotes: '公开心得',\n    privateNotes: '私密心得',\n    drafts: '草稿',\n    myNotes: '我的心得',\n    publicDiscussion: '公开讨论',\n    createNote: '创建心得',\n    writeTitle: '写下标题',\n    shareTradeStory: '分享您的交易故事、心得体会',\n    selectCategory: '选择分类',\n    technicalAnalysis: '技术分析',\n    fundamentalAnalysis: '基本面分析', \n    strategyDiscussion: '策略探讨',\n    errorReview: '错误复盘',\n    marketView: '市场观点',\n    tradingPairOptional: '交易对（可选）',\n    entryPrice: '入场价格',\n    exitPrice: '出场价格',\n    stopLoss: '止损价格',\n    takeProfit: '止盈价格',\n    positionSize: '仓位大小',\n    tags: '标签',\n    addTag: '添加标签',\n    publicPost: '公开发布',\n    saveDraft: '保存草稿',\n    publishing: '发布中...',\n    saving: '保存中...',\n    searchNotes: '搜索心得...',\n    allCategories: '全部分类',\n    sortBy: '排序方式',\n    newest: '最新',\n    oldest: '最早',\n    mostLiked: '最受欢迎',\n    noNotesMessage: '还没有心得分享',\n    createFirstNote: '写下您的第一篇交易心得',\n    \n    // API管理页面\n    manageExchangeConnections: '管理交易所连接，配置API密钥',\n    totalAPIs: 'API总数',\n    activeAPIs: '活跃API',\n    testConnection: '测试连接',\n    addNewAPI: '添加新API',\n    apiKeyManagement: 'API密钥管理',\n    exchangeName: '交易所名称',\n    apiKey: 'API密钥',\n    secretKey: '密钥Secret',\n    passphrase: '密码短语',\n    permissions: '权限',\n    connectionStatus: '连接状态',\n    connected: '已连接',\n    disconnected: '未连接',\n    editAPI: '编辑API',\n    deleteAPI: '删除API',\n    confirmDeleteAPI: '确定要删除这个API配置吗？',\n    \n    // 账户中心页面  \n    manageAccountAndSettings: '管理账户信息和系统设置',\n    accountInfo: '账户信息',\n    membershipInfo: '会员信息',\n    securitySettings: '安全设置',\n    systemSettings: '系统设置',\n    basicInfo: '基本信息',\n    avatar: '头像',\n    changePassword: '修改密码',\n    twoFactorAuth: '双重验证',\n    currentPlan: '当前套餐',\n    validUntil: '有效期至',\n    upgrade: '升级',\n    renewMembership: '续费会员',\n    usageStatistics: '使用统计',\n    changeAvatar: '更换头像',\n    uploadImage: '上传图片',\n    currentPassword: '当前密码',\n    newPassword: '新密码',\n    confirmNewPassword: '确认新密码',\n    saveChanges: '保存更改',\n    cancel: '取消',\n    \n    // 会员计费相关\n    basicUser: '初级用户',\n    premiumUser: '高级用户',\n    professionalUser: '专业用户',\n    monthlyFee: '每月',\n    apiKeyBinding: '个API密钥',\n    dailyAIQuota: '每日AI助手额度',\n    tickBacktestMonthly: '每月Tick级数据回测',\n    tradingNotesStorage: '交易心得记录存储',\n    indicatorsStrategies: '个指标/策略',\n    liveInstances: '个实盘'\n  },\n  \n  en: {\n    // Login page\n    welcomeTitle: 'Welcome to Trademe',\n    welcomeSubtitle: 'Professional Cryptocurrency Strategy Trading Platform',\n    activeUsers: 'Active Users',\n    tradingVolume: 'Trading Volume',\n    uptime: 'System Uptime',\n    platformDescription: 'AI-powered quantitative trading platform with multi-exchange support, automated strategies, and intelligent risk control',\n    createAccount: 'Create Account',\n    accountLogin: 'Account Login',\n    registerSubtitle: 'Start your intelligent trading journey',\n    loginSubtitle: 'Welcome back, please login to your account',\n    orContinueWith: 'Or continue with',\n    username: 'Username',\n    enterUsername: 'Enter username',\n    email: 'Email Address',\n    enterEmail: 'Enter email address',\n    password: 'Password',\n    enterPassword: 'Enter password',\n    confirmPassword: 'Confirm Password',\n    enterPasswordAgain: 'Enter password again',\n    forgotPassword: 'Forgot Password',\n    enterEmailForReset: 'Enter email to reset password',\n    sendReset: 'Send Reset Link',\n    processing: 'Processing...',\n    login: 'Login',\n    haveAccount: 'Already have an account?',\n    noAccount: \"Don't have an account?\",\n    loginNow: 'Login Now',\n    registerNow: 'Register Now',\n    byRegisteringAgree: 'By registering, you agree to our ',\n    termsOfService: 'Terms of Service',\n    and: ' and ',\n    privacyPolicy: 'Privacy Policy',\n    \n    // Error messages\n    userNotFound: 'User not found, please check email address',\n    wrongPassword: 'Wrong password, please try again or reset password',\n    loginFailed: 'Login failed, please try again',\n    loginSuccess: 'Login successful',\n    registerSuccess: 'Registration successful',\n    authError: 'Authentication error, please try again',\n    googleLoginSuccess: 'Google login successful',\n    googleLoginFailed: 'Google login failed',\n    googleLoginError: 'Google login error',\n    passwordResetSent: 'Password reset link has been sent to your email',\n    passwordResetFailed: 'Failed to send reset link',\n    passwordResetError: 'Error resetting password',\n    wantToRegister: 'User does not exist, would you like to register a new account?',\n    \n    // Common for other pages\n    dashboard: 'Dashboard',\n    strategies: 'Strategies',\n    trading: 'Live Trading',\n    backtest: 'Backtest',\n    aiAssistant: 'AI Assistant',\n    market: 'Market Data',\n    portfolio: 'Portfolio',\n    settings: 'Settings',\n    logout: 'Logout',\n    profile: 'Profile',\n    notifications: 'Notifications',\n    help: 'Help Center',\n    about: 'About Us',\n    contact: 'Contact Us',\n    language_setting: 'Language',\n    theme_setting: 'Theme',\n    lightMode: 'Light Mode',\n    darkMode: 'Dark Mode',\n    \n    // 页面特定翻译\n    chartTrading: 'Chart Trading',\n    liveTrading: 'Live Trading',\n    tradingNotes: 'Trading Notes',\n    apiManagement: 'API Management',\n    accountCenter: 'Account Center',\n    membershipManagement: 'Membership Management',\n    personalSettings: 'Personal Settings',\n    \n    // 概览页面\n    tradingOverview: 'Trading Overview',\n    welcomeBack: 'Welcome back',\n    checkTradingDataAndQuickActions: 'View your trading data and quick actions',\n    realTimeConnected: 'Real-time Connected',\n    connectionLost: 'Connection Lost',\n    totalStrategies: 'Total Strategies',\n    running: 'Running',\n    totalProfit: 'Total Profit',\n    winRate: 'Win Rate',\n    quickActions: 'Quick Actions',\n    strategiesManagement: 'Strategies Management',\n    viewAndManageStrategies: 'View and manage your trading strategies',\n    startAutomatedTrading: 'Start automated live trading',\n    strategyBacktest: 'Strategy Backtest',\n    testStrategyPerformance: 'Test strategy historical performance',\n    getIntelligentTradingAdvice: 'Get intelligent trading advice',\n    recentStrategies: 'Recent Strategies',\n    viewAll: 'View All',\n    loadingStrategies: 'Loading strategies...',\n    viewDetails: 'View Details',\n    noStrategies: 'No Strategies',\n    createFirstStrategy: 'Start creating your first trading strategy',\n    createStrategy: 'Create Strategy',\n    upgradeToCreate: 'Upgrade to Create',\n    createStrategyRequiresPremium: 'Creating strategies requires premium upgrade',\n    stopped: 'Stopped',\n    tradingPair: 'Trading Pair',\n    timeframe: 'Timeframe',\n    \n    // Strategy page\n    monitorRunningStrategies: 'Monitor running live strategies, view profits and trading details',\n    totalLiveStrategies: 'Total Live Strategies',\n    runningLive: 'Running',\n    stoppedLive: 'Stopped',\n    pausedLive: 'Paused',\n    searchStrategies: 'Search strategies...',\n    allStatus: 'All',\n    paused: 'Paused',\n    strategyName: 'Strategy Name',\n    status: 'Status',\n    profitLoss: 'P&L',\n    lastUpdate: 'Last Update',\n    actions: 'Actions',\n    start: 'Start',\n    stop: 'Stop',\n    pause: 'Pause',\n    delete: 'Delete',\n    confirmDelete: 'Are you sure you want to delete strategy',\n    strategyDeleted: 'Strategy deleted',\n    strategyStarted: 'started',\n    strategyStopped: 'stopped',\n    strategyPaused: 'paused',\n    startStrategyRequiresPremium: 'Starting strategies requires premium version',\n    loadingStrategiesError: 'Failed to load live strategies',\n    strategiesLoaded: 'live strategies loaded',\n    noStrategiesMessage: 'No strategy data available',\n    createFirstStrategyMessage: 'Create your first trading strategy to start live trading',\n    selected: 'Selected',\n    currentFilter: 'Current filter',\n    clearFilter: 'Clear filter',\n    \n    // AI Chat page\n    aiChatWelcome: 'Hello! I am Trademe AI trading assistant. I can help you:\\n\\n• 📈 Analyze market trends and technical indicators\\n• 🤖 Generate quantitative trading strategy code\\n• 💡 Provide trading advice and risk assessment\\n• 📊 Interpret backtest results and optimization suggestions\\n\\nWhat can I help you with?',\n    aiChatRequiresPremium: 'AI chat feature requires premium version upgrade',\n    aiResponseError: 'AI response error, please try again',\n    sendMessage: 'Send',\n    typeMessage: 'Type your question...',\n    aiTyping: 'AI is thinking...',\n    newChat: 'New Chat',\n    \n    // Backtest page\n    verifyTradingStrategy: 'Verify your trading strategies and optimize investment decisions',\n    totalBacktests: 'Total Backtests',\n    completedSuccessfully: 'Completed Successfully',\n    executionFailed: 'Execution Failed',\n    createBacktest: 'Create Backtest',\n    backtestHistory: 'Backtest History',\n    backtestConfig: 'Backtest Configuration',\n    selectStrategy: 'Select Strategy',\n    strategyRequired: 'Please select a strategy',\n    confirmDeleteBacktest: 'Are you sure you want to delete this backtest?',\n    getStrategiesError: 'Failed to get strategy list',\n    completed: 'Completed',\n    failed: 'Failed',\n    unknown: 'Unknown',\n    \n    // Common status text\n    selectOption: 'Please select...',\n    required: 'Required',\n    optional: 'Optional',\n    \n    // Trading Notes page\n    shareTradeThoughts: 'Share trading insights and learn from experiences',\n    totalNotes: 'Total Notes',\n    publicNotes: 'Public Notes',\n    privateNotes: 'Private Notes',\n    drafts: 'Drafts',\n    myNotes: 'My Notes',\n    publicDiscussion: 'Public Discussion',\n    createNote: 'Create Note',\n    writeTitle: 'Write title',\n    shareTradeStory: 'Share your trading story and insights',\n    selectCategory: 'Select Category',\n    technicalAnalysis: 'Technical Analysis',\n    fundamentalAnalysis: 'Fundamental Analysis',\n    strategyDiscussion: 'Strategy Discussion',\n    errorReview: 'Error Review',\n    marketView: 'Market View',\n    tradingPairOptional: 'Trading Pair (Optional)',\n    entryPrice: 'Entry Price',\n    exitPrice: 'Exit Price',\n    stopLoss: 'Stop Loss Price',\n    takeProfit: 'Take Profit Price',\n    positionSize: 'Position Size',\n    tags: 'Tags',\n    addTag: 'Add Tag',\n    publicPost: 'Publish Publicly',\n    saveDraft: 'Save Draft',\n    publishing: 'Publishing...',\n    saving: 'Saving...',\n    searchNotes: 'Search notes...',\n    allCategories: 'All Categories',\n    sortBy: 'Sort By',\n    newest: 'Newest',\n    oldest: 'Oldest',\n    mostLiked: 'Most Liked',\n    noNotesMessage: 'No notes shared yet',\n    createFirstNote: 'Write your first trading note',\n    \n    // API Management page\n    manageExchangeConnections: 'Manage exchange connections and configure API keys',\n    totalAPIs: 'Total APIs',\n    activeAPIs: 'Active APIs',\n    testConnection: 'Test Connection',\n    addNewAPI: 'Add New API',\n    apiKeyManagement: 'API Key Management',\n    exchangeName: 'Exchange Name',\n    apiKey: 'API Key',\n    secretKey: 'Secret Key',\n    passphrase: 'Passphrase',\n    permissions: 'Permissions',\n    connectionStatus: 'Connection Status',\n    connected: 'Connected',\n    disconnected: 'Disconnected',\n    editAPI: 'Edit API',\n    deleteAPI: 'Delete API',\n    confirmDeleteAPI: 'Are you sure you want to delete this API configuration?',\n    \n    // Account Center page\n    manageAccountAndSettings: 'Manage account information and system settings',\n    accountInfo: 'Account Information',\n    membershipInfo: 'Membership Information',\n    securitySettings: 'Security Settings',\n    systemSettings: 'System Settings',\n    basicInfo: 'Basic Information',\n    avatar: 'Avatar',\n    changePassword: 'Change Password',\n    twoFactorAuth: 'Two-Factor Authentication',\n    currentPlan: 'Current Plan',\n    validUntil: 'Valid Until',\n    upgrade: 'Upgrade',\n    renewMembership: 'Renew Membership',\n    usageStatistics: 'Usage Statistics',\n    changeAvatar: 'Change Avatar',\n    uploadImage: 'Upload Image',\n    currentPassword: 'Current Password',\n    newPassword: 'New Password',\n    confirmNewPassword: 'Confirm New Password',\n    saveChanges: 'Save Changes',\n    cancel: 'Cancel',\n    \n    // Membership billing related\n    basicUser: 'Basic User',\n    premiumUser: 'Premium User',\n    professionalUser: 'Professional User',\n    monthlyFee: 'per month',\n    apiKeyBinding: 'API keys',\n    dailyAIQuota: 'daily AI assistant quota',\n    tickBacktestMonthly: 'monthly tick-level backtests',\n    tradingNotesStorage: 'trading notes storage',\n    indicatorsStrategies: 'indicators/strategies',\n    liveInstances: 'live instances'\n  }\n}\n\ninterface LanguageState {\n  language: 'zh' | 'en'\n  setLanguage: (lang: 'zh' | 'en') => void\n  t: (key: string) => string\n}\n\nexport const useLanguageStore = create<LanguageState>()(\n  persist(\n    (set, get) => ({\n      language: 'zh',\n      \n      setLanguage: (lang) => set({ language: lang }),\n      \n      t: (key: string) => {\n        const lang = get().language\n        return (translations[lang] as any)[key] || key\n      }\n    }),\n    {\n      name: 'language-storage',\n      getStorage: () => localStorage\n    }\n  )\n)","import React, { useRef, useEffect } from 'react'\nimport * as echarts from 'echarts'\n\ninterface DataPoint {\n  timestamp: string\n  value: number\n  benchmark?: number\n}\n\ninterface ProfitCurveChartProps {\n  data: DataPoint[]\n  title?: string\n  width?: string | number\n  height?: string | number\n  className?: string\n  showBenchmark?: boolean\n  benchmarkName?: string\n  loading?: boolean\n}\n\nconst ProfitCurveChart: React.FC<ProfitCurveChartProps> = ({\n  data = [],\n  title = '收益率曲线',\n  width = '100%',\n  height = 300,\n  className = '',\n  showBenchmark = false,\n  benchmarkName = '基准',\n  loading = false\n}) => {\n  const chartRef = useRef<HTMLDivElement>(null)\n  const chartInstance = useRef<echarts.ECharts | null>(null)\n\n  // 初始化图表\n  useEffect(() => {\n    if (!chartRef.current) return\n\n    chartInstance.current = echarts.init(chartRef.current)\n    \n    return () => {\n      chartInstance.current?.dispose()\n    }\n  }, [])\n\n  // 更新图表数据\n  useEffect(() => {\n    if (!chartInstance.current || loading) return\n\n    if (data.length === 0) {\n      chartInstance.current.clear()\n      return\n    }\n\n    const times = data.map(item => new Date(item.timestamp).toLocaleDateString())\n    const values = data.map(item => item.value)\n    const benchmarkValues = showBenchmark ? data.map(item => item.benchmark || 0) : []\n\n    // 计算累计收益率\n    const cumulativeReturns = []\n    const cumulativeBenchmark = []\n    let base = 100 // 初始值100%\n    let benchmarkBase = 100\n\n    for (let i = 0; i < values.length; i++) {\n      if (i === 0) {\n        cumulativeReturns.push(base)\n        if (showBenchmark) cumulativeBenchmark.push(benchmarkBase)\n      } else {\n        base = base * (1 + values[i] / 100)\n        cumulativeReturns.push(base)\n        \n        if (showBenchmark && benchmarkValues[i] !== undefined) {\n          benchmarkBase = benchmarkBase * (1 + benchmarkValues[i] / 100)\n          cumulativeBenchmark.push(benchmarkBase)\n        }\n      }\n    }\n\n    const series: any[] = [\n      {\n        name: '策略收益',\n        type: 'line',\n        data: cumulativeReturns,\n        smooth: true,\n        symbol: 'none',\n        lineStyle: {\n          color: '#1a3d7c',\n          width: 2\n        },\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            { offset: 0, color: 'rgba(26, 61, 124, 0.3)' },\n            { offset: 1, color: 'rgba(26, 61, 124, 0.05)' }\n          ])\n        }\n      }\n    ]\n\n    // 添加基准线\n    if (showBenchmark && cumulativeBenchmark.length > 0) {\n      series.push({\n        name: benchmarkName,\n        type: 'line',\n        data: cumulativeBenchmark,\n        smooth: true,\n        symbol: 'none',\n        lineStyle: {\n          color: '#94a3b8',\n          width: 1,\n          type: 'dashed'\n        }\n      })\n    }\n\n    const option = {\n      title: {\n        text: title,\n        left: 0,\n        textStyle: {\n          color: '#1a3d7c',\n          fontSize: 16,\n          fontWeight: 'bold'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        backgroundColor: 'rgba(255, 255, 255, 0.95)',\n        borderColor: '#e5e7eb',\n        borderWidth: 1,\n        textStyle: { color: '#374151' },\n        formatter: function(params: any) {\n          if (!params || params.length === 0) return ''\n          \n          const dataIndex = params[0].dataIndex\n          const originalReturn = values[dataIndex]\n          const cumulativeReturn = ((cumulativeReturns[dataIndex] - 100)).toFixed(2)\n          \n          let content = `\n            <div style=\"padding: 8px;\">\n              <div style=\"margin-bottom: 4px; font-weight: bold;\">${params[0].name}</div>\n              <div style=\"color: #1a3d7c;\">\n                当日收益: ${originalReturn > 0 ? '+' : ''}${originalReturn.toFixed(2)}%\n              </div>\n              <div style=\"color: #1a3d7c;\">\n                累计收益: ${parseFloat(cumulativeReturn) > 0 ? '+' : ''}${cumulativeReturn}%\n              </div>\n          `\n          \n          if (showBenchmark && params.length > 1) {\n            const benchmarkCumulative = ((cumulativeBenchmark[dataIndex] - 100)).toFixed(2)\n            content += `\n              <div style=\"color: #94a3b8;\">\n                ${benchmarkName}累计: ${parseFloat(benchmarkCumulative) > 0 ? '+' : ''}${benchmarkCumulative}%\n              </div>\n            `\n          }\n          \n          content += '</div>'\n          return content\n        }\n      },\n      legend: {\n        data: showBenchmark ? ['策略收益', benchmarkName] : ['策略收益'],\n        top: 35,\n        right: 0,\n        textStyle: { color: '#666' }\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '8%',\n        top: showBenchmark ? '20%' : '15%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: times,\n        boundaryGap: false,\n        axisLine: {\n          lineStyle: { color: '#e5e7eb' }\n        },\n        axisTick: { show: false },\n        axisLabel: {\n          color: '#6b7280',\n          fontSize: 11\n        },\n        splitLine: { show: false }\n      },\n      yAxis: {\n        type: 'value',\n        axisLine: {\n          lineStyle: { color: '#e5e7eb' }\n        },\n        axisTick: { show: false },\n        axisLabel: {\n          color: '#6b7280',\n          fontSize: 11,\n          formatter: '{value}%'\n        },\n        splitLine: {\n          lineStyle: { \n            color: '#f3f4f6',\n            type: 'dashed'\n          }\n        }\n      },\n      series\n    }\n\n    chartInstance.current.setOption(option, true)\n  }, [data, title, showBenchmark, benchmarkName, loading])\n\n  // 响应式调整\n  useEffect(() => {\n    const handleResize = () => {\n      chartInstance.current?.resize()\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return (\n    <div className={`relative ${className}`}>\n      <div \n        ref={chartRef} \n        style={{ width, height }}\n        className=\"bg-white\"\n      />\n      \n      {loading && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-75\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n            <div className=\"text-gray-500 text-sm\">加载中...</div>\n          </div>\n        </div>\n      )}\n      \n      {!loading && data.length === 0 && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <svg className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n            <p className=\"text-gray-500\">暂无数据</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfitCurveChart","import React, { useRef, useEffect } from 'react'\nimport * as echarts from 'echarts'\n\ninterface AdvancedMetrics {\n  // 基础指标\n  total_return: number\n  annual_return: number\n  max_drawdown: number\n  sharpe_ratio: number\n  sortino_ratio: number\n  calmar_ratio: number\n  \n  // 风险指标\n  volatility: number\n  var_95: number\n  cvar_95: number\n  \n  // 交易指标\n  win_rate: number\n  profit_factor: number\n  total_trades: number\n  avg_win: number\n  avg_loss: number\n  max_consecutive_wins: number\n  max_consecutive_losses: number\n  \n  // 时间指标\n  avg_trade_duration: number\n  max_trade_duration: number\n}\n\ninterface MonthlyReturn {\n  year: number\n  month: number\n  return: number\n}\n\ninterface EquityPoint {\n  timestamp: string\n  equity: number\n  drawdown: number\n  rolling_max: number\n}\n\ninterface AdvancedBacktestChartProps {\n  metrics: AdvancedMetrics\n  equityCurve: EquityPoint[]\n  monthlyReturns: MonthlyReturn[]\n  className?: string\n}\n\nconst AdvancedBacktestChart: React.FC<AdvancedBacktestChartProps> = ({\n  metrics,\n  equityCurve = [],\n  monthlyReturns = [],\n  className = ''\n}) => {\n  const equityChartRef = useRef<HTMLDivElement>(null)\n  const heatmapChartRef = useRef<HTMLDivElement>(null)\n  const metricsChartRef = useRef<HTMLDivElement>(null)\n  const equityChart = useRef<echarts.ECharts | null>(null)\n  const heatmapChart = useRef<echarts.ECharts | null>(null)\n  const metricsChart = useRef<echarts.ECharts | null>(null)\n\n  // 初始化图表\n  useEffect(() => {\n    if (equityChartRef.current) {\n      equityChart.current = echarts.init(equityChartRef.current)\n    }\n    if (heatmapChartRef.current) {\n      heatmapChart.current = echarts.init(heatmapChartRef.current)\n    }\n    if (metricsChartRef.current) {\n      metricsChart.current = echarts.init(metricsChartRef.current)\n    }\n\n    return () => {\n      equityChart.current?.dispose()\n      heatmapChart.current?.dispose()\n      metricsChart.current?.dispose()\n    }\n  }, [])\n\n  // 权益曲线和回撤图表\n  useEffect(() => {\n    if (!equityChart.current || equityCurve.length === 0) return\n\n    const times = equityCurve.map(point => new Date(point.timestamp).toLocaleDateString())\n    const equity = equityCurve.map(point => point.equity)\n    const drawdown = equityCurve.map(point => -Math.abs(point.drawdown))\n    const rollingMax = equityCurve.map(point => point.rolling_max)\n\n    const option = {\n      title: {\n        text: '权益曲线与回撤分析',\n        left: 0,\n        textStyle: { fontSize: 16, fontWeight: 'bold', color: '#1f2937' }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: { type: 'cross' },\n        formatter: (params: any) => {\n          const timeIndex = params[0].dataIndex\n          return `\n            <div style=\"padding: 8px;\">\n              <div style=\"font-weight: bold; margin-bottom: 4px;\">${times[timeIndex]}</div>\n              <div style=\"color: #1e40af;\">权益: $${equity[timeIndex].toLocaleString()}</div>\n              <div style=\"color: #dc2626;\">回撤: ${drawdown[timeIndex].toFixed(2)}%</div>\n              <div style=\"color: #059669;\">历史最高: $${rollingMax[timeIndex].toLocaleString()}</div>\n            </div>\n          `\n        }\n      },\n      legend: {\n        data: ['权益曲线', '历史最高', '回撤'],\n        top: 25\n      },\n      grid: [\n        { left: '8%', right: '8%', top: '15%', height: '50%' },\n        { left: '8%', right: '8%', top: '70%', height: '20%' }\n      ],\n      xAxis: [\n        {\n          type: 'category',\n          data: times,\n          axisLine: { lineStyle: { color: '#e5e7eb' } },\n          axisTick: { show: false },\n          axisLabel: { color: '#6b7280', interval: 'auto' }\n        },\n        {\n          type: 'category',\n          data: times,\n          gridIndex: 1,\n          axisLine: { lineStyle: { color: '#e5e7eb' } },\n          axisTick: { show: false },\n          axisLabel: { show: false }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          position: 'right',\n          axisLine: { lineStyle: { color: '#e5e7eb' } },\n          axisTick: { show: false },\n          axisLabel: { \n            color: '#6b7280',\n            formatter: (value: number) => '$' + value.toLocaleString()\n          },\n          splitLine: { lineStyle: { color: '#f3f4f6', type: 'dashed' } }\n        },\n        {\n          type: 'value',\n          gridIndex: 1,\n          position: 'right',\n          axisLine: { lineStyle: { color: '#e5e7eb' } },\n          axisTick: { show: false },\n          axisLabel: { \n            color: '#6b7280',\n            formatter: '{value}%'\n          },\n          max: 0,\n          min: Math.min(...drawdown) * 1.1\n        }\n      ],\n      series: [\n        {\n          name: '权益曲线',\n          type: 'line',\n          data: equity,\n          smooth: true,\n          symbol: 'none',\n          lineStyle: { color: '#1e40af', width: 2 },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              { offset: 0, color: 'rgba(30, 64, 175, 0.3)' },\n              { offset: 1, color: 'rgba(30, 64, 175, 0.05)' }\n            ])\n          }\n        },\n        {\n          name: '历史最高',\n          type: 'line',\n          data: rollingMax,\n          smooth: true,\n          symbol: 'none',\n          lineStyle: { color: '#059669', width: 1, type: 'dashed' }\n        },\n        {\n          name: '回撤',\n          type: 'line',\n          data: drawdown,\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          smooth: true,\n          symbol: 'none',\n          lineStyle: { color: '#dc2626', width: 1 },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              { offset: 0, color: 'rgba(220, 38, 38, 0.2)' },\n              { offset: 1, color: 'rgba(220, 38, 38, 0.05)' }\n            ])\n          }\n        }\n      ],\n      dataZoom: [\n        {\n          type: 'inside',\n          xAxisIndex: [0, 1],\n          start: 0,\n          end: 100\n        }\n      ]\n    }\n\n    equityChart.current.setOption(option, true)\n  }, [equityCurve])\n\n  // 月度收益热力图\n  useEffect(() => {\n    if (!heatmapChart.current || monthlyReturns.length === 0) return\n\n    const years = [...new Set(monthlyReturns.map(item => item.year))].sort()\n    const months = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n    \n    const data = monthlyReturns.map(item => [\n      item.month - 1, // x轴：月份（0-11）\n      years.indexOf(item.year), // y轴：年份索引\n      item.return // 值：收益率\n    ])\n\n    const option = {\n      title: {\n        text: '月度收益热力图',\n        left: 0,\n        textStyle: { fontSize: 16, fontWeight: 'bold', color: '#1f2937' }\n      },\n      tooltip: {\n        position: 'top',\n        formatter: (params: any) => {\n          const [month, yearIndex, returnValue] = params.data\n          const year = years[yearIndex]\n          const monthName = months[month]\n          const color = returnValue >= 0 ? '#059669' : '#dc2626'\n          return `\n            <div style=\"padding: 8px;\">\n              <div style=\"font-weight: bold; margin-bottom: 4px;\">${year}年${monthName}</div>\n              <div style=\"color: ${color};\">收益率: ${returnValue.toFixed(2)}%</div>\n            </div>\n          `\n        }\n      },\n      grid: {\n        height: '60%',\n        top: '15%',\n        left: '10%',\n        right: '10%'\n      },\n      xAxis: {\n        type: 'category',\n        data: months,\n        splitArea: { show: false },\n        axisLine: { lineStyle: { color: '#e5e7eb' } },\n        axisTick: { show: false },\n        axisLabel: { color: '#6b7280' }\n      },\n      yAxis: {\n        type: 'category',\n        data: years.map(year => year.toString()),\n        splitArea: { show: false },\n        axisLine: { lineStyle: { color: '#e5e7eb' } },\n        axisTick: { show: false },\n        axisLabel: { color: '#6b7280' }\n      },\n      visualMap: {\n        min: Math.min(...monthlyReturns.map(item => item.return)),\n        max: Math.max(...monthlyReturns.map(item => item.return)),\n        calculable: true,\n        orient: 'horizontal',\n        left: 'center',\n        bottom: '5%',\n        inRange: {\n          color: ['#dc2626', '#ffffff', '#059669']\n        },\n        text: ['高收益', '低收益'],\n        textStyle: { color: '#6b7280' }\n      },\n      series: [{\n        name: '月度收益',\n        type: 'heatmap',\n        data: data,\n        label: {\n          show: true,\n          formatter: (params: any) => params.data[2].toFixed(1) + '%',\n          color: '#1f2937',\n          fontSize: 10\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    }\n\n    heatmapChart.current.setOption(option, true)\n  }, [monthlyReturns])\n\n  // 性能指标雷达图\n  useEffect(() => {\n    if (!metricsChart.current) return\n\n    const option = {\n      title: {\n        text: '策略性能雷达图',\n        left: 0,\n        textStyle: { fontSize: 16, fontWeight: 'bold', color: '#1f2937' }\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: (params: any) => {\n          const { name, value } = params\n          return `<div style=\"padding: 8px;\"><b>${name}</b><br/>评分: ${value}</div>`\n        }\n      },\n      radar: {\n        radius: '70%',\n        center: ['50%', '55%'],\n        indicator: [\n          { name: '收益能力', max: 100 },\n          { name: '风险控制', max: 100 },\n          { name: '稳定性', max: 100 },\n          { name: '交易效率', max: 100 },\n          { name: '回撤控制', max: 100 },\n          { name: '风险收益比', max: 100 }\n        ],\n        axisName: {\n          color: '#6b7280',\n          fontSize: 12\n        },\n        splitArea: {\n          areaStyle: {\n            color: ['rgba(59, 130, 246, 0.05)', 'rgba(59, 130, 246, 0.1)']\n          }\n        },\n        axisLine: {\n          lineStyle: { color: '#e5e7eb' }\n        },\n        splitLine: {\n          lineStyle: { color: '#e5e7eb' }\n        }\n      },\n      series: [{\n        name: '策略性能',\n        type: 'radar',\n        data: [{\n          value: [\n            Math.min(Math.max((metrics.annual_return + 50) * 2, 0), 100), // 收益能力\n            Math.min(Math.max(100 - metrics.volatility * 2, 0), 100), // 风险控制\n            Math.min(Math.max(metrics.sharpe_ratio * 30, 0), 100), // 稳定性\n            Math.min(Math.max(metrics.win_rate, 0), 100), // 交易效率\n            Math.min(Math.max(100 - Math.abs(metrics.max_drawdown) * 2, 0), 100), // 回撤控制\n            Math.min(Math.max(metrics.profit_factor * 20, 0), 100) // 风险收益比\n          ],\n          name: '当前策略',\n          areaStyle: {\n            color: new echarts.graphic.RadialGradient(0.5, 0.5, 1, [\n              { offset: 0, color: 'rgba(59, 130, 246, 0.3)' },\n              { offset: 1, color: 'rgba(59, 130, 246, 0.1)' }\n            ])\n          },\n          lineStyle: {\n            color: '#3b82f6',\n            width: 2\n          },\n          symbol: 'circle',\n          symbolSize: 6\n        }]\n      }]\n    }\n\n    metricsChart.current.setOption(option, true)\n  }, [metrics])\n\n  // 响应式调整\n  useEffect(() => {\n    const handleResize = () => {\n      equityChart.current?.resize()\n      heatmapChart.current?.resize()\n      metricsChart.current?.resize()\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* 核心指标卡片 */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 text-center\">\n          <div className={`text-2xl font-bold ${metrics.total_return >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n            {metrics.total_return >= 0 ? '+' : ''}{metrics.total_return.toFixed(2)}%\n          </div>\n          <div className=\"text-sm text-gray-500\">总收益率</div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {metrics.max_drawdown.toFixed(2)}%\n          </div>\n          <div className=\"text-sm text-gray-500\">最大回撤</div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 text-center\">\n          <div className={`text-2xl font-bold ${metrics.sharpe_ratio >= 1 ? 'text-green-600' : 'text-orange-600'}`}>\n            {metrics.sharpe_ratio.toFixed(2)}\n          </div>\n          <div className=\"text-sm text-gray-500\">夏普比率</div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {metrics.win_rate.toFixed(1)}%\n          </div>\n          <div className=\"text-sm text-gray-500\">胜率</div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 text-center\">\n          <div className=\"text-2xl font-bold text-purple-600\">\n            {metrics.sortino_ratio.toFixed(2)}\n          </div>\n          <div className=\"text-sm text-gray-500\">索提诺比率</div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 text-center\">\n          <div className=\"text-2xl font-bold text-indigo-600\">\n            {metrics.calmar_ratio.toFixed(2)}\n          </div>\n          <div className=\"text-sm text-gray-500\">卡尔玛比率</div>\n        </div>\n      </div>\n\n      {/* 图表区域 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* 权益曲线图 */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n          <div ref={equityChartRef} style={{ width: '100%', height: '400px' }} />\n        </div>\n\n        {/* 性能雷达图 */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n          <div ref={metricsChartRef} style={{ width: '100%', height: '400px' }} />\n        </div>\n      </div>\n\n      {/* 月度收益热力图 */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n        <div ref={heatmapChartRef} style={{ width: '100%', height: '300px' }} />\n      </div>\n\n      {/* 详细统计表格 */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">详细统计</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-3\">收益指标</h4>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">年化收益率:</span>\n                <span className={metrics.annual_return >= 0 ? 'text-green-600' : 'text-red-600'}>\n                  {metrics.annual_return.toFixed(2)}%\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">总交易次数:</span>\n                <span className=\"text-gray-900\">{metrics.total_trades}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">盈亏比:</span>\n                <span className=\"text-gray-900\">{metrics.profit_factor.toFixed(2)}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-3\">风险指标</h4>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">波动率:</span>\n                <span className=\"text-gray-900\">{metrics.volatility.toFixed(2)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">VaR (95%):</span>\n                <span className=\"text-red-600\">{metrics.var_95.toFixed(2)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">CVaR (95%):</span>\n                <span className=\"text-red-600\">{metrics.cvar_95.toFixed(2)}%</span>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-3\">交易指标</h4>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">平均盈利:</span>\n                <span className=\"text-green-600\">{metrics.avg_win.toFixed(2)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">平均亏损:</span>\n                <span className=\"text-red-600\">{metrics.avg_loss.toFixed(2)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">最大连胜:</span>\n                <span className=\"text-green-600\">{metrics.max_consecutive_wins}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AdvancedBacktestChart\n\n// 导出类型定义\nexport type { AdvancedMetrics, MonthlyReturn }","import React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useAuthStore } from '../store/authStore'\nimport { useThemeStore } from '../store/themeStore'\nimport { useLanguageStore } from '../store/languageStore'\nimport { Card, Button } from '../components/common'\nimport { ProfitCurveChart } from '../components/charts'\nimport { dashboardApi, DashboardStats, ProfitCurveData } from '../services/api/dashboard'\nimport toast from 'react-hot-toast'\n\nconst HomePage: React.FC = () => {\n  const navigate = useNavigate()\n  const { isAuthenticated, user } = useAuthStore()\n  const { theme } = useThemeStore()\n  const { t } = useLanguageStore()\n  \n  // 仪表板数据状态\n  const [dashboardStats, setDashboardStats] = useState<DashboardStats | null>(null)\n  const [profitCurveData, setProfitCurveData] = useState<ProfitCurveData[]>([])\n  const [isLoadingStats, setIsLoadingStats] = useState(false)\n  const [isLoadingProfitCurve, setIsLoadingProfitCurve] = useState(false)\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'7' | '30' | '90'>('90')\n\n  // 如果用户已登录，重定向到AI助手页面\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/ai-chat', { replace: true })\n    }\n  }, [isAuthenticated, navigate])\n\n  // 移除仪表板数据加载，直接重定向到AI助手\n  // useEffect 已在上面处理重定向逻辑\n\n  // 移除仪表板数据加载函数\n\n  // 移除收益曲线数据加载函数\n\n  const generateDefaultData = (days: number): ProfitCurveData[] => {\n    const data: ProfitCurveData[] = []\n    const now = new Date()\n    \n    for (let i = days; i >= 0; i -= Math.max(1, Math.floor(days / 10))) {\n      const date = new Date(now)\n      date.setDate(date.getDate() - i)\n      \n      const progress = 1 - (i / days)\n      const value = progress * 12.3 + (Math.random() - 0.5) * 2\n      \n      data.push({\n        timestamp: date.toISOString().split('T')[0],\n        value: Math.round(value * 100) / 100\n      })\n    }\n    \n    return data\n  }\n\n  // 主题现在在 App.tsx 中全局处理\n\n  if (!isAuthenticated) {\n    // 未登录用户看到的欢迎页面\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors\">\n        <div className=\"max-w-4xl mx-auto text-center px-4\">\n          <div className=\"mb-8\">\n            <div className=\"w-16 h-16 mx-auto bg-brand-500 rounded-full flex items-center justify-center mb-4\">\n              <span className=\"text-white font-bold text-xl\">T</span>\n            </div>\n            <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4 transition-colors\">\n              欢迎使用 <span className=\"text-brand-500\">Trademe</span>\n            </h1>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 mb-8 transition-colors\">\n              专业的数字货币策略交易平台，集成AI智能分析\n            </p>\n          </div>\n\n          {/* 核心功能展示 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-12\">\n            {/* AI策略回测 */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8 border border-gray-200 dark:border-gray-700 transition-colors\">\n              <div className=\"w-16 h-16 mx-auto bg-gradient-to-r from-blue-500 to-cyan-500 rounded-2xl flex items-center justify-center mb-6\">\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-2xl font-bold mb-4 text-gray-900 dark:text-white text-center\">AI策略回测</h3>\n              <p className=\"text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\n                使用Claude 4先进AI技术，将您的交易想法智能转化为专业策略代码。平台提供tick级别的高精度历史数据回测，\n                确保策略验证的准确性。回测完成后，可一键部署至实盘交易，实现从想法到盈利的完整闭环。\n              </p>\n              <div className=\"space-y-2 mb-6\">\n                <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-300\">\n                  <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                  </svg>\n                  Claude 4智能策略生成\n                </div>\n                <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-300\">\n                  <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                  </svg>\n                  Tick级别高精度回测\n                </div>\n                <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-300\">\n                  <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                  </svg>\n                  一键转实盘运行\n                </div>\n              </div>\n              <Link to=\"/ai-backtest-intro\" className=\"block\">\n                <button className=\"w-full py-3 px-6 bg-gradient-to-r from-blue-500 to-cyan-500 text-white font-medium rounded-lg hover:from-blue-600 hover:to-cyan-600 transition-all transform hover:scale-105\">\n                  了解详情\n                </button>\n              </Link>\n            </div>\n\n            {/* AI智能分析 */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8 border border-gray-200 dark:border-gray-700 transition-colors\">\n              <div className=\"w-16 h-16 mx-auto bg-gradient-to-r from-green-500 to-emerald-500 rounded-2xl flex items-center justify-center mb-6\">\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-2xl font-bold mb-4 text-gray-900 dark:text-white text-center\">AI智能分析</h3>\n              <p className=\"text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\n                通过深度记录和分析您的策略开单情况及手动交易行为，AI助手能够学习您的交易逻辑和风格偏好。\n                与AI进行深度对话，共同构建个性化的智能交易系统，让AI成为您24小时不间断的专业交易顾问。\n              </p>\n              <div className=\"space-y-2 mb-6\">\n                <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-300\">\n                  <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                  </svg>\n                  智能交易行为分析\n                </div>\n                <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-300\">\n                  <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                  </svg>\n                  个性化交易逻辑学习\n                </div>\n                <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-300\">\n                  <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                  </svg>\n                  24/7智能交易助手\n                </div>\n              </div>\n              <Link to=\"/ai-analysis-intro\" className=\"block\">\n                <button className=\"w-full py-3 px-6 bg-gradient-to-r from-green-500 to-emerald-500 text-white font-medium rounded-lg hover:from-green-600 hover:to-emerald-600 transition-all transform hover:scale-105\">\n                  了解详情\n                </button>\n              </Link>\n            </div>\n          </div>\n\n          {/* 其他特性 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700 text-center transition-colors\">\n              <div className=\"w-12 h-12 mx-auto bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">多交易所支持</h3>\n              <p className=\"text-gray-600 dark:text-gray-300 text-sm\">支持币安、OKX等主流交易所API，统一管理多个账户</p>\n            </div>\n\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700 text-center transition-colors\">\n              <div className=\"w-12 h-12 mx-auto bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">安全可靠</h3>\n              <p className=\"text-gray-600 dark:text-gray-300 text-sm\">银行级别的安全加密，API密钥本地加密存储</p>\n            </div>\n\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700 text-center transition-colors\">\n              <div className=\"w-12 h-12 mx-auto bg-indigo-100 dark:bg-indigo-900 rounded-lg flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-indigo-600 dark:text-indigo-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">实时监控</h3>\n              <p className=\"text-gray-600 dark:text-gray-300 text-sm\">实时监控策略表现，智能风控保护您的资金安全</p>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-8\">\n            <Link to=\"/login\" className=\"w-full sm:w-auto\">\n              <button className=\"w-full sm:w-auto px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 shadow-lg\">\n                免费开始使用\n              </button>\n            </Link>\n            <Link to=\"/pricing\" className=\"w-full sm:w-auto\">\n              <button className=\"w-full sm:w-auto px-8 py-4 bg-transparent border-2 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 font-semibold rounded-xl hover:border-blue-500 dark:hover:border-blue-400 transition-colors\">\n                查看会员方案\n              </button>\n            </Link>\n          </div>\n\n          {/* AI策略回测详细介绍 */}\n          <div className=\"mt-20 mb-16\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">AI策略回测 - 让想法变成盈利</h2>\n              <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n                使用Claude 4先进AI技术，将您的交易想法智能转化为专业策略代码\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div className=\"space-y-6\">\n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-blue-600 dark:text-blue-400 font-bold\">1</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">描述您的策略想法</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      用自然语言描述您的交易策略思路，比如\"当RSI超卖且价格触及支撑位时买入\"。\n                      Claude 4能够理解复杂的交易逻辑和技术指标组合。\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-green-600 dark:text-green-400 font-bold\">2</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">AI智能策略生成</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      AI自动将您的想法转换为专业的Python交易策略代码，包含完整的开仓、平仓、止损止盈逻辑，\n                      支持多种技术指标和风控机制。\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-purple-600 dark:text-purple-400 font-bold\">3</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">Tick级别精确回测</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      使用真实的tick级别历史数据进行回测，精确模拟每一笔交易的执行过程，\n                      包含滑点、手续费等真实交易成本，确保回测结果的可靠性。\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-orange-600 dark:text-orange-400 font-bold\">4</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">一键转实盘运行</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      回测验证策略有效性后，一键部署到实盘交易环境。\n                      平台自动处理API连接、订单执行、风险控制等技术细节，让您专注于策略优化。\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl p-8 text-white\">\n                <h3 className=\"text-2xl font-bold mb-6\">策略回测报告示例</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span>总收益率</span>\n                    <span className=\"font-bold text-green-300\">+156.8%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>夏普比率</span>\n                    <span className=\"font-bold\">2.34</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>最大回撤</span>\n                    <span className=\"font-bold text-red-300\">-8.5%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>胜率</span>\n                    <span className=\"font-bold\">68.2%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>盈亏比</span>\n                    <span className=\"font-bold\">2.1:1</span>\n                  </div>\n                </div>\n                <div className=\"mt-6 p-4 bg-white/10 rounded-lg\">\n                  <p className=\"text-sm\">\n                    \"该策略在过去12个月的回测中表现优异，具有较低的风险和稳定的收益。建议配置20%的资金进行实盘交易。\"\n                  </p>\n                  <p className=\"text-xs mt-2 opacity-80\">— AI策略分析师</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* AI智能分析详细介绍 */}\n          <div className=\"mt-20 mb-16\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">AI智能分析 - 您的24/7交易顾问</h2>\n              <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n                通过深度学习您的交易行为，构建个性化的智能交易系统\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div className=\"bg-gradient-to-r from-green-500 to-teal-600 rounded-2xl p-8 text-white\">\n                <h3 className=\"text-2xl font-bold mb-6\">AI学习您的交易模式</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"p-4 bg-white/10 rounded-lg\">\n                    <h4 className=\"font-semibold mb-2\">交易心得记录</h4>\n                    <p className=\"text-sm opacity-90\">\n                      \"今天在BTCUSDT 45000附近看到双底形态，结合RSI超卖信号，\n                      决定建立多头仓位。设置止损在44500，目标位46500。\"\n                    </p>\n                  </div>\n                  <div className=\"p-4 bg-white/10 rounded-lg\">\n                    <h4 className=\"font-semibold mb-2\">AI分析反馈</h4>\n                    <p className=\"text-sm opacity-90\">\n                      \"您偏好在技术形态确认后进场，风险控制意识较强。\n                      建议在类似条件下可以适当加大仓位，历史胜率达72%。\"\n                    </p>\n                  </div>\n                  <div className=\"p-4 bg-white/10 rounded-lg\">\n                    <h4 className=\"font-semibold mb-2\">交易建议</h4>\n                    <p className=\"text-sm opacity-90\">\n                      \"当前ETHUSDT出现类似的双底+RSI超卖组合，\n                      基于您的交易风格，建议关注入场机会。\"\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-green-600 dark:text-green-400 font-bold\">1</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">记录交易心得</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      详细记录每次交易的思路、进场逻辑、情绪状态等。\n                      平台支持文字、图片、语音等多种形式，让记录更加便捷真实。\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-blue-600 dark:text-blue-400 font-bold\">2</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">AI深度学习</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      AI分析您的交易记录，识别成功和失败的交易模式，\n                      学习您的风险偏好、时间习惯、技术分析方法等个性化特征。\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-purple-600 dark:text-purple-400 font-bold\">3</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">智能对话分析</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      与AI进行深度对话，讨论市场观点、交易策略、风险控制等。\n                      AI会根据您的历史表现和当前市况，提供个性化的交易建议。\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"w-10 h-10 bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center mr-4 flex-shrink-0\">\n                    <span className=\"text-orange-600 dark:text-orange-400 font-bold\">4</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">构建专属交易系统</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      基于学习结果，AI帮助构建符合您交易风格的智能系统，\n                      包括自动监控、风险提醒、交易机会推送等功能。\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 会员方案 */}\n          <div className=\"mt-20 mb-16\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">会员方案</h2>\n              <p className=\"text-xl text-gray-600 dark:text-gray-300\">\n                选择适合您的专业交易方案，开启AI助力的量化交易之旅\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              {/* 免费用户 */}\n              <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 border border-gray-200 dark:border-gray-700 transition-colors\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">免费用户</h3>\n                  <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">$0<span className=\"text-lg text-gray-500 dark:text-gray-400\">/月</span></div>\n                  <p className=\"text-gray-600 dark:text-gray-300 mt-2\">体验基础功能</p>\n                </div>\n                \n                <ul className=\"space-y-2 mb-8 text-sm\">\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    绑定 1 个API密钥\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    $10 AI对话额度 (总额)\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    无限次K线级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    1KB 交易心得存储\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    1个策略/1个指标\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    1个实盘交易\n                  </li>\n                </ul>\n                \n                <button className=\"w-full py-3 px-6 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-colors\">\n                  免费开始\n                </button>\n              </div>\n\n              {/* 初级会员 */}\n              <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 border border-gray-200 dark:border-gray-700 transition-colors\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">初级会员</h3>\n                  <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">$19<span className=\"text-lg text-gray-500 dark:text-gray-400\">/月</span></div>\n                  <p className=\"text-gray-600 dark:text-gray-300 mt-2\">个人交易者首选</p>\n                </div>\n                \n                <ul className=\"space-y-2 mb-8 text-sm\">\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    绑定 1 个API密钥\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    每日 $100 AI助手额度\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    每日 5次 Tick级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    无限次K线级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    1MB 交易心得存储\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    2个策略/2个指标\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    2个实盘交易\n                  </li>\n                </ul>\n                \n                <button className=\"w-full py-3 px-6 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\">\n                  选择初级会员\n                </button>\n              </div>\n\n              {/* 高级会员 */}\n              <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 border-2 border-blue-500 relative transition-colors\">\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-medium\">推荐</span>\n                </div>\n                \n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">高级会员</h3>\n                  <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">$99<span className=\"text-lg text-gray-500 dark:text-gray-400\">/月</span></div>\n                  <p className=\"text-gray-600 dark:text-gray-300 mt-2\">专业交易团队</p>\n                </div>\n                \n                <ul className=\"space-y-2 mb-8 text-sm\">\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    绑定 5 个API密钥\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    每日 $100 AI助手额度\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    每月 30次 Tick级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    无限次K线级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    20MB 交易心得存储\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    10个策略/10个指标\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    10个实盘交易\n                  </li>\n                </ul>\n                \n                <button className=\"w-full py-3 px-6 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\">\n                  选择高级会员\n                </button>\n              </div>\n\n              {/* 专业会员 */}\n              <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 border border-gray-200 dark:border-gray-700 transition-colors\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">专业会员</h3>\n                  <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">$199<span className=\"text-lg text-gray-500 dark:text-gray-400\">/月</span></div>\n                  <p className=\"text-gray-600 dark:text-gray-300 mt-2\">机构投资者</p>\n                </div>\n                \n                <ul className=\"space-y-2 mb-8 text-sm\">\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    绑定 10 个API密钥\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    每日 $200 AI对话额度\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    每月 100次 Tick级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    无限次K线级回测\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    50MB 交易心得存储\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    20个策略/20个指标\n                  </li>\n                  <li className=\"flex items-center text-gray-600 dark:text-gray-300\">\n                    <svg className=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\n                    </svg>\n                    20个实盘交易\n                  </li>\n                </ul>\n                \n                <button className=\"w-full py-3 px-6 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\">\n                  选择专业会员\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"text-center mt-8\">\n              <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n                💡 AI额度已优化至最佳性价比 • 所有方案包含无限K线回测 • 免费用户可体验完整功能\n              </p>\n              <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 inline-block\">\n                <p className=\"text-blue-600 dark:text-blue-400 text-sm font-medium\">\n                  🎯 推荐：先使用免费账户体验，再根据需要升级付费方案\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* 联系方式 */}\n          <div className=\"text-center\">\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">遇到问题？联系我们的专业团队</p>\n            <a \n              href=\"https://t.me/+K2JBhvnMW2AwNGZl\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-lg transition-colors\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 0C5.374 0 0 5.373 0 12s5.374 12 12 12 12-5.373 12-12S18.626 0 12 0zm5.568 8.16l-1.61 7.59c-.12.54-.44.67-.9.42l-2.47-1.82-1.19 1.14c-.13.13-.24.24-.5.24l.18-2.51 4.62-4.18c.2-.18-.04-.28-.32-.1L10.42 13l-2.42-.76c-.53-.16-.54-.53.11-.78l9.46-3.64c.44-.16.82.1.68.78z\"/>\n              </svg>\n              加入 Telegram 群聊\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // 已登录用户看到的仪表板 - 采用原型布局\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors\">\n      {/* 页面容器 */}\n      <div className=\"w-full max-w-6xl min-h-screen bg-white dark:bg-gray-800 rounded-xl shadow-xl border border-gray-200 dark:border-gray-700 mx-auto transition-colors\">\n        {/* 头部导航 */}\n        <header className=\"py-4 px-8 flex justify-between items-center border-b border-gray-200 dark:border-gray-700 transition-colors\">\n          <div className=\"flex items-center\">\n            <svg\n              className=\"w-7 h-7 mr-3 text-blue-600 dark:text-blue-400\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\"/>\n              <path d=\"M8 12h8M12 8v8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n            </svg>\n            <h1 className=\"text-xl font-bold text-blue-600 dark:text-blue-400 transition-colors\">\n              Trademe\n            </h1>\n          </div>\n          \n          <nav className=\"flex gap-2\">\n            <div className=\"px-4 py-2 rounded-lg text-white font-medium bg-blue-600 dark:bg-blue-600 transition-colors\">\n              首页\n            </div>\n            <Link to=\"/strategies\" className=\"px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n              策略交易\n            </Link>\n            <Link to=\"/trading\" className=\"px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n              图表交易\n            </Link>\n            <Link to=\"/trading-notes\" className=\"px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n              交易心得\n            </Link>\n            <Link to=\"/api-keys\" className=\"px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n              API管理\n            </Link>\n            <Link to=\"/profile\" className=\"px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n              账户中心\n            </Link>\n          </nav>\n          \n          <div className=\"flex items-center\">\n            <div className=\"w-9 h-9 rounded-full bg-gray-200 overflow-hidden\">\n              <div className=\"w-full h-full bg-gradient-to-r from-blue-400 to-blue-600 flex items-center justify-center text-white font-semibold\">\n                {user?.username?.charAt(0).toUpperCase()}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* 主要内容 */}\n        <main className=\"p-8\">\n          {/* 统计卡片 */}\n          <section className=\"grid grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-6 flex items-center transition-colors\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4 bg-blue-100 dark:bg-blue-900\">\n                <svg className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1721 9z\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">APIKEY数量</h3>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {isLoadingStats ? (\n                    <span className=\"animate-pulse bg-gray-200 dark:bg-gray-600 rounded h-8 w-16 inline-block\"></span>\n                  ) : (\n                    <>\n                      {dashboardStats?.api_keys.current || 0}\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        /{dashboardStats?.api_keys.limit || 10}\n                      </span>\n                    </>\n                  )}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-6 flex items-center transition-colors\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4 bg-green-100 dark:bg-green-900\">\n                <svg className=\"w-6 h-6 text-green-600 dark:text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">实盘策略数</h3>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {isLoadingStats ? (\n                    <span className=\"animate-pulse bg-gray-200 dark:bg-gray-600 rounded h-8 w-12 inline-block\"></span>\n                  ) : (\n                    dashboardStats?.live_strategies.current || 0\n                  )}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-6 flex items-center transition-colors\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4 bg-yellow-100 dark:bg-yellow-900\">\n                <svg className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">本月收益率</h3>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {isLoadingStats ? (\n                    <span className=\"animate-pulse bg-gray-200 dark:bg-gray-600 rounded h-8 w-20 inline-block\"></span>\n                  ) : (\n                    <span className={`px-2 py-1 rounded-md ${\n                      (dashboardStats?.monthly_return || 0) >= 0 \n                        ? 'bg-green-100 dark:bg-green-900 text-green-600 dark:text-green-400' \n                        : 'bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-400'\n                    }`}>\n                      {(dashboardStats?.monthly_return || 0) >= 0 ? '+' : ''}{(dashboardStats?.monthly_return || 0).toFixed(1)}%\n                    </span>\n                  )}\n                </p>\n              </div>\n            </div>\n          </section>\n\n          {/* 收益率曲线 - 全宽显示 */}\n          <section className=\"mb-8\">\n            <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-6 transition-colors\">\n              <div className=\"flex justify-between items-start mb-6\">\n                <h2 className=\"text-xl font-bold text-blue-600 dark:text-blue-400\">当前收益率曲线</h2>\n                <div className=\"flex gap-2\">\n                  <button \n                    onClick={() => setSelectedTimeframe('7')}\n                    className={`px-3 py-1 rounded-lg text-sm transition-colors ${\n                      selectedTimeframe === '7' \n                        ? 'bg-blue-600 text-white hover:bg-blue-700' \n                        : 'bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-500'\n                    }`}\n                  >\n                    近7天\n                  </button>\n                  <button \n                    onClick={() => setSelectedTimeframe('30')}\n                    className={`px-3 py-1 rounded-lg text-sm transition-colors ${\n                      selectedTimeframe === '30' \n                        ? 'bg-blue-600 text-white hover:bg-blue-700' \n                        : 'bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-500'\n                    }`}\n                  >\n                    本月\n                  </button>\n                  <button \n                    onClick={() => setSelectedTimeframe('90')}\n                    className={`px-3 py-1 rounded-lg text-sm transition-colors ${\n                      selectedTimeframe === '90' \n                        ? 'bg-blue-600 text-white hover:bg-blue-700' \n                        : 'bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-500'\n                    }`}\n                  >\n                    近3月\n                  </button>\n                </div>\n              </div>\n              {isLoadingProfitCurve ? (\n                <div className=\"flex items-center justify-center h-64\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                  <span className=\"ml-2 text-gray-500 dark:text-gray-400\">加载收益数据...</span>\n                </div>\n              ) : (\n                <ProfitCurveChart \n                  data={profitCurveData}\n                  title=\"\"\n                  height={250}\n                  className=\"mt-2\"\n                />\n              )}\n            </div>\n          </section>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    const isFileListInstance = typeof FileList !== 'undefined' ? data instanceof FileList : false;\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || isFileListInstance)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : Object.create(Object.getPrototypeOf(data));\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar isUndefined = (val) => val === undefined;\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = (isKey(path) ? [path] : stringToPath(path)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n            return;\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\nHookFormContext.displayName = 'HookFormContext';\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        validatingFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    useIsomorphicLayoutEffect(() => control._subscribe({\n        name,\n        formState: _localProxyFormState.current,\n        exact,\n        callback: (formState) => {\n            !disabled &&\n                updateFormState({\n                    ...control._formState,\n                    ...formState,\n                });\n        },\n    }), [name, disabled, exact]);\n    React.useEffect(() => {\n        _localProxyFormState.current.isValid && control._setValid(true);\n    }, [control]);\n    return React.useMemo(() => getProxyFormState(formState, control, _localProxyFormState.current, false), [formState, control]);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName),\n            get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2, _internal_visited = new WeakSet()) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    if (_internal_visited.has(object1) || _internal_visited.has(object2)) {\n        return true;\n    }\n    _internal_visited.add(object1);\n    _internal_visited.add(object2);\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2, _internal_visited)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, compute, } = props || {};\n    const _defaultValue = React.useRef(defaultValue);\n    const _compute = React.useRef(compute);\n    const _computeFormValues = React.useRef(undefined);\n    _compute.current = compute;\n    const defaultValueMemo = React.useMemo(() => control._getWatch(name, _defaultValue.current), [control, name]);\n    const [value, updateValue] = React.useState(_compute.current ? _compute.current(defaultValueMemo) : defaultValueMemo);\n    useIsomorphicLayoutEffect(() => control._subscribe({\n        name,\n        formState: {\n            values: true,\n        },\n        exact,\n        callback: (formState) => {\n            if (!disabled) {\n                const formValues = generateWatchOutput(name, control._names, formState.values || control._formValues, false, _defaultValue.current);\n                if (_compute.current) {\n                    const computedFormValues = _compute.current(formValues);\n                    if (!deepEqual(computedFormValues, _computeFormValues.current)) {\n                        updateValue(computedFormValues);\n                        _computeFormValues.current = computedFormValues;\n                    }\n                }\n                else {\n                    updateValue(formValues);\n                }\n            }\n        },\n    }), [control, disabled, name, exact]);\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister, defaultValue, } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const defaultValueMemo = React.useMemo(() => get(control._formValues, name, get(control._defaultValues, name, defaultValue)), [control, name, defaultValue]);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: defaultValueMemo,\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n        exact: true,\n    });\n    const _props = React.useRef(props);\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }));\n    _props.current = props;\n    const fieldState = React.useMemo(() => Object.defineProperties({}, {\n        invalid: {\n            enumerable: true,\n            get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n            enumerable: true,\n            get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n            enumerable: true,\n            get: () => !!get(formState.touchedFields, name),\n        },\n        isValidating: {\n            enumerable: true,\n            get: () => !!get(formState.validatingFields, name),\n        },\n        error: {\n            enumerable: true,\n            get: () => get(formState.errors, name),\n        },\n    }), [formState, name]);\n    const onChange = React.useCallback((event) => _registerProps.current.onChange({\n        target: {\n            value: getEventValue(event),\n            name: name,\n        },\n        type: EVENTS.CHANGE,\n    }), [name]);\n    const onBlur = React.useCallback(() => _registerProps.current.onBlur({\n        target: {\n            value: get(control._formValues, name),\n            name: name,\n        },\n        type: EVENTS.BLUR,\n    }), [name, control._formValues]);\n    const ref = React.useCallback((elm) => {\n        const field = get(control._fields, name);\n        if (field && elm) {\n            field._f.ref = {\n                focus: () => elm.focus && elm.focus(),\n                select: () => elm.select && elm.select(),\n                setCustomValidity: (message) => elm.setCustomValidity(message),\n                reportValidity: () => elm.reportValidity(),\n            };\n        }\n    }, [control._fields, name]);\n    const field = React.useMemo(() => ({\n        name,\n        value,\n        ...(isBoolean(disabled) || formState.disabled\n            ? { disabled: formState.disabled || disabled }\n            : {}),\n        onChange,\n        onBlur,\n        ref,\n    }), [name, disabled, formState.disabled, onChange, onBlur, ref, value]);\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        control.register(name, {\n            ..._props.current.rules,\n            ...(isBoolean(_props.current.disabled)\n                ? { disabled: _props.current.disabled }\n                : {}),\n        });\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field && field._f) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        !isArrayField && control.register(name);\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        control._setDisabledField({\n            disabled,\n            name,\n        });\n    }, [disabled, name, control]);\n    return React.useMemo(() => ({\n        field,\n        formState,\n        fieldState,\n    }), [field, formState, fieldState]);\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst flatten = (obj) => {\n    const output = {};\n    for (const key of Object.keys(obj)) {\n        if (isObjectType(obj[key]) && obj[key] !== null) {\n            const nested = flatten(obj[key]);\n            for (const nestedKey of Object.keys(nested)) {\n                output[`${key}.${nestedKey}`] = nested[nestedKey];\n            }\n        }\n        else {\n            output[key] = obj[key];\n        }\n    }\n    return output;\n};\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            const flattenFormValues = flatten(control._formValues);\n            for (const key in flattenFormValues) {\n                formData.append(key, flattenFormValues[key]);\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(String(action), {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType && encType !== 'multipart/form-data'\n                                ? { 'Content-Type': encType }\n                                : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\nvar hasPromiseValidation = (fieldReference) => !!fieldReference &&\n    !!fieldReference.validate &&\n    !!((isFunction(fieldReference.validate) &&\n        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n        (isObject(fieldReference.validate) &&\n            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    return true;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    return true;\n                }\n                else {\n                    if (iterateFieldsByAction(currentField, action)) {\n                        break;\n                    }\n                }\n            }\n            else if (isObject(currentField)) {\n                if (iterateFieldsByAction(currentField, action)) {\n                    break;\n                }\n            }\n        }\n    }\n    return;\n};\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        if (foundError && foundError.root && foundError.root.type) {\n            return {\n                name: `${fieldName}.root`,\n                error: foundError.root,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isMessage = (value) => isString(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, disabledFieldNames, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabledFieldNames.has(name)) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isReady: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        validatingFields: {},\n        errors: _options.errors || {},\n        disabled: _options.disabled || false,\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        disabled: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        validatingFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _proxySubscribeFormState = {\n        ..._proxyFormState,\n    };\n    const _subjects = {\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _setValid = async (shouldUpdateValid) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValid ||\n                _proxySubscribeFormState.isValid ||\n                shouldUpdateValid)) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _runSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (names, isValidating) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValidating ||\n                _proxyFormState.validatingFields ||\n                _proxySubscribeFormState.isValidating ||\n                _proxySubscribeFormState.validatingFields)) {\n            (names || Array.from(_names.mount)).forEach((name) => {\n                if (name) {\n                    isValidating\n                        ? set(_formState.validatingFields, name, isValidating)\n                        : unset(_formState.validatingFields, name);\n                }\n            });\n            _subjects.state.next({\n                validatingFields: _formState.validatingFields,\n                isValidating: !isEmptyObject(_formState.validatingFields),\n            });\n        }\n    };\n    const _setFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method && !_options.disabled) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if ((_proxyFormState.touchedFields ||\n                _proxySubscribeFormState.touchedFields) &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields || _proxySubscribeFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _setValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!_options.disabled) {\n            if (!isBlurEvent || shouldDirty) {\n                if (_proxyFormState.isDirty || _proxySubscribeFormState.isDirty) {\n                    isPreviousDirty = _formState.isDirty;\n                    _formState.isDirty = output.isDirty = _getDirty();\n                    shouldUpdateField = isPreviousDirty !== output.isDirty;\n                }\n                const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n                isPreviousDirty = !!get(_formState.dirtyFields, name);\n                isCurrentFieldPristine\n                    ? unset(_formState.dirtyFields, name)\n                    : set(_formState.dirtyFields, name, true);\n                output.dirtyFields = _formState.dirtyFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        ((_proxyFormState.dirtyFields ||\n                            _proxySubscribeFormState.dirtyFields) &&\n                            isPreviousDirty !== !isCurrentFieldPristine);\n            }\n            if (isBlurEvent) {\n                const isPreviousFieldTouched = get(_formState.touchedFields, name);\n                if (!isPreviousFieldTouched) {\n                    set(_formState.touchedFields, name, isBlurEvent);\n                    output.touchedFields = _formState.touchedFields;\n                    shouldUpdateField =\n                        shouldUpdateField ||\n                            ((_proxyFormState.touchedFields ||\n                                _proxySubscribeFormState.touchedFields) &&\n                                isPreviousFieldTouched !== isBlurEvent);\n                }\n            }\n            shouldUpdateField && shouldRender && _subjects.state.next(output);\n        }\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = (_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (_options.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(_options.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n    };\n    const _runSchema = async (name) => {\n        _updateIsValidating(name, true);\n        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n        _updateIsValidating(name);\n        return result;\n    };\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _runSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name], true);\n                    }\n                    const fieldError = await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name]);\n                    }\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                !isEmptyObject(fieldValue) &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => !_options.disabled &&\n        (name && data && set(_formValues, name, data),\n            !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, _options.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.forEach((checkboxRef) => {\n                            if (!checkboxRef.defaultChecked || !checkboxRef.disabled) {\n                                if (Array.isArray(fieldValue)) {\n                                    checkboxRef.checked = !!fieldValue.find((data) => data === checkboxRef.value);\n                                }\n                                else {\n                                    checkboxRef.checked =\n                                        fieldValue === checkboxRef.value || !!fieldValue;\n                                }\n                            }\n                        });\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.state.next({\n                            name,\n                            values: cloneObject(_formValues),\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            if (!value.hasOwnProperty(fieldKey)) {\n                return;\n            }\n            const fieldValue = value[fieldKey];\n            const fieldName = name + '.' + fieldKey;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                isObject(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: cloneObject(_formValues),\n            });\n            if ((_proxyFormState.isDirty ||\n                _proxyFormState.dirtyFields ||\n                _proxySubscribeFormState.isDirty ||\n                _proxySubscribeFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState, name });\n        _subjects.state.next({\n            name: _state.mount ? name : undefined,\n            values: cloneObject(_formValues),\n        });\n    };\n    const onChange = async (event) => {\n        _state.mount = true;\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n                    deepEqual(fieldValue, get(_formValues, name, fieldValue));\n        };\n        const validationModeBeforeSubmit = getValidationModes(_options.mode);\n        const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = target.type\n                ? getFieldValue(field._f)\n                : getEventValue(event);\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                if (!target || !target.readOnly) {\n                    field._f.onBlur && field._f.onBlur(event);\n                    delayErrorCallback && delayErrorCallback(0);\n                }\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.state.next({\n                    name,\n                    type: event.type,\n                    values: cloneObject(_formValues),\n                });\n            if (shouldSkipValidation) {\n                if (_proxyFormState.isValid || _proxySubscribeFormState.isValid) {\n                    if (_options.mode === 'onBlur') {\n                        if (isBlurEvent) {\n                            _setValid();\n                        }\n                    }\n                    else if (!isBlurEvent) {\n                        _setValid();\n                    }\n                }\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            if (_options.resolver) {\n                const { errors } = await _runSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                _updateIsValidating([name], true);\n                error = (await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsValidating([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid ||\n                        _proxySubscribeFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _setValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                ((_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n                    isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ...(_state.mount ? _formValues : _defaultValues),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        error: get((formState || _formState).errors, name),\n        isValidating: !!get(_formState.validatingFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        const currentError = get(_formState.errors, name) || {};\n        // Don't override existing error messages elsewhere in the object tree.\n        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n        set(_formState.errors, name, {\n            ...restOfErrorTree,\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.state.subscribe({\n            next: (payload) => 'values' in payload &&\n                name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const _subscribe = (props) => _subjects.state.subscribe({\n        next: (formState) => {\n            if (shouldSubscribeByName(props.name, formState.name, props.exact) &&\n                shouldRenderFormState(formState, props.formState || _proxyFormState, _setFormState, props.reRenderRoot)) {\n                props.callback({\n                    values: { ..._formValues },\n                    ..._formState,\n                    ...formState,\n                    defaultValues: _defaultValues,\n                });\n            }\n        },\n    }).unsubscribe;\n    const subscribe = (props) => {\n        _state.mount = true;\n        _proxySubscribeFormState = {\n            ..._proxySubscribeFormState,\n            ...props.formState,\n        };\n        return _subscribe({\n            ...props,\n            formState: _proxySubscribeFormState,\n        });\n    };\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !options.keepIsValidating &&\n                unset(_formState.validatingFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.state.next({\n            values: cloneObject(_formValues),\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _setValid();\n    };\n    const _setDisabledField = ({ disabled, name, }) => {\n        if ((isBoolean(disabled) && _state.mount) ||\n            !!disabled ||\n            _names.disabled.has(name)) {\n            disabled ? _names.disabled.add(name) : _names.disabled.delete(name);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(_options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _setDisabledField({\n                disabled: isBoolean(options.disabled)\n                    ? options.disabled\n                    : _options.disabled,\n                name,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined\n                ? { disabled: options.disabled || _options.disabled }\n                : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                const currentField = get(_fields, name);\n                if (currentField) {\n                    ref.disabled = currentField._f.disabled || disabled;\n                    if (Array.isArray(currentField._f.refs)) {\n                        currentField._f.refs.forEach((inputRef) => {\n                            inputRef.disabled = currentField._f.disabled || disabled;\n                        });\n                    }\n                }\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        let onValidError = undefined;\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist &&\n                e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _runSchema();\n            _formState.errors = errors;\n            fieldValues = cloneObject(values);\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        if (_names.disabled.size) {\n            for (const name of _names.disabled) {\n                unset(fieldValues, name);\n            }\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            try {\n                await onValid(fieldValues, e);\n            }\n            catch (error) {\n                onValidError = error;\n            }\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n        if (onValidError) {\n            throw onValidError;\n        }\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, cloneObject(get(_defaultValues, name)));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, cloneObject(options.defaultValue));\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _setValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const isEmptyResetValues = isEmptyObject(formValues);\n        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues) {\n                const fieldsToCheck = new Set([\n                    ..._names.mount,\n                    ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n                ]);\n                for (const fieldName of Array.from(fieldsToCheck)) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (keepStateOptions.keepFieldsRef) {\n                    for (const fieldName of _names.mount) {\n                        setValue(fieldName, get(values, fieldName));\n                    }\n                }\n                else {\n                    _fields = {};\n                }\n            }\n            _formValues = _options.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.state.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            disabled: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        _state.mount =\n            !_proxyFormState.isValid ||\n                !!keepStateOptions.keepIsValid ||\n                !!keepStateOptions.keepDirtyValues;\n        _state.watch = !!_options.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: isEmptyResetValues\n                ? false\n                : keepStateOptions.keepDirty\n                    ? _formState.isDirty\n                    : !!(keepStateOptions.keepDefaultValues &&\n                        !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: isEmptyResetValues\n                ? {}\n                : keepStateOptions.keepDirtyValues\n                    ? keepStateOptions.keepDefaultValues && _formValues\n                        ? getDirtyFields(_defaultValues, _formValues)\n                        : _formState.dirtyFields\n                    : keepStateOptions.keepDefaultValues && formValues\n                        ? getDirtyFields(_defaultValues, formValues)\n                        : keepStateOptions.keepDirty\n                            ? _formState.dirtyFields\n                            : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n            defaultValues: _defaultValues,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect &&\n                    isFunction(fieldRef.select) &&\n                    fieldRef.select();\n            }\n        }\n    };\n    const _setFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    const methods = {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _subscribe,\n            _runSchema,\n            _focusError,\n            _getWatch,\n            _getDirty,\n            _setValid,\n            _setFieldArray,\n            _setDisabledField,\n            _setErrors,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _removeUnmounted,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        subscribe,\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n    return {\n        ...methods,\n        formControl: methods,\n    };\n}\n\nvar generateId = () => {\n    if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        return crypto.randomUUID();\n    }\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, rules, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _actioned = React.useRef(false);\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    React.useMemo(() => rules &&\n        control.register(name, rules), [control, rules, name]);\n    useIsomorphicLayoutEffect(() => control._subjects.array.subscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === name || !fieldArrayName) {\n                const fieldValues = get(values, name);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n    }).unsubscribe, [control, name]);\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._setFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        !Array.isArray(get(control._fields, name)) &&\n            set(control._fields, name, undefined);\n        control._setFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._setFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._setFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted) &&\n            !getValidationModes(control._options.reValidateMode).isOnSubmit) {\n            if (control._options.resolver) {\n                control._runSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field &&\n                    field._f &&\n                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&\n                        getValidationModes(control._options.mode).isOnSubmit)) {\n                    validateField(field, control._names.disabled, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.state.next({\n            name,\n            values: cloneObject(control._formValues),\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._setValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._setFieldArray(name);\n        return () => {\n            const updateMounted = (name, value) => {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    field._f.mount = value;\n                }\n            };\n            control._options.shouldUnregister || shouldUnregister\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend, [updateValues, name, control]),\n        append: React.useCallback(append, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef(undefined);\n    const _values = React.useRef(undefined);\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        validatingFields: {},\n        errors: props.errors || {},\n        disabled: props.disabled || false,\n        isReady: false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        if (props.formControl) {\n            _formControl.current = {\n                ...props.formControl,\n                formState,\n            };\n            if (props.defaultValues && !isFunction(props.defaultValues)) {\n                props.formControl.reset(props.defaultValues, props.resetOptions);\n            }\n        }\n        else {\n            const { formControl, ...rest } = createFormControl(props);\n            _formControl.current = {\n                ...rest,\n                formState,\n            };\n        }\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useIsomorphicLayoutEffect(() => {\n        const sub = control._subscribe({\n            formState: control._proxyFormState,\n            callback: () => updateFormState({ ...control._formState }),\n            reRenderRoot: true,\n        });\n        updateFormState((data) => ({\n            ...data,\n            isReady: true,\n        }));\n        control._formState.isReady = true;\n        return sub;\n    }, [control]);\n    React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React.useEffect(() => {\n        if (props.mode) {\n            control._options.mode = props.mode;\n        }\n        if (props.reValidateMode) {\n            control._options.reValidateMode = props.reValidateMode;\n        }\n    }, [control, props.mode, props.reValidateMode]);\n    React.useEffect(() => {\n        if (props.errors) {\n            control._setErrors(props.errors);\n            control._focusError();\n        }\n    }, [control, props.errors]);\n    React.useEffect(() => {\n        props.shouldUnregister &&\n            control._subjects.state.next({\n                values: control._getWatch(),\n            });\n    }, [control, props.shouldUnregister]);\n    React.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, {\n                keepFieldsRef: true,\n                ...control._options.resetOptions,\n            });\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [control, props.values]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._setValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, createFormControl, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import{get as t,set as e}from\"react-hook-form\";const s=(e,s,o)=>{if(e&&\"reportValidity\"in e){const r=t(o,s);e.setCustomValidity(r&&r.message||\"\"),e.reportValidity()}},o=(t,e)=>{for(const o in e.fields){const r=e.fields[o];r&&r.ref&&\"reportValidity\"in r.ref?s(r.ref,o,t):r.refs&&r.refs.forEach(e=>s(e,o,t))}},r=(s,r)=>{r.shouldUseNativeValidation&&o(s,r);const f={};for(const o in s){const n=t(r.fields,o),a=Object.assign(s[o]||{},{ref:n&&n.ref});if(i(r.names||Object.keys(s),o)){const s=Object.assign({},t(f,o));e(s,\"root\",a),e(f,o,s)}else e(f,o,a)}return f},i=(t,e)=>t.some(t=>t.startsWith(e+\".\"));export{r as toNestErrors,o as validateFieldsNatively};\n//# sourceMappingURL=resolvers.mjs.map\n","import{validateFieldsNatively as r,toNestErrors as e}from\"@hookform/resolvers\";import{appendErrors as o}from\"react-hook-form\";var n=function(r,e){for(var n={};r.length;){var t=r[0],s=t.code,i=t.message,a=t.path.join(\".\");if(!n[a])if(\"unionErrors\"in t){var u=t.unionErrors[0].errors[0];n[a]={message:u.message,type:u.code}}else n[a]={message:i,type:s};if(\"unionErrors\"in t&&t.unionErrors.forEach(function(e){return e.errors.forEach(function(e){return r.push(e)})}),e){var c=n[a].types,f=c&&c[t.code];n[a]=o(a,e,n,s,f?[].concat(f,t.message):t.message)}r.shift()}return n},t=function(o,t,s){return void 0===s&&(s={}),function(i,a,u){try{return Promise.resolve(function(e,n){try{var a=Promise.resolve(o[\"sync\"===s.mode?\"parse\":\"parseAsync\"](i,t)).then(function(e){return u.shouldUseNativeValidation&&r({},u),{errors:{},values:s.raw?i:e}})}catch(r){return n(r)}return a&&a.then?a.then(void 0,n):a}(0,function(r){if(function(r){return Array.isArray(null==r?void 0:r.errors)}(r))return{values:{},errors:e(n(r.errors,!u.shouldUseNativeValidation&&\"all\"===u.criteriaMode),u)};throw r}))}catch(r){return Promise.reject(r)}}};export{t as zodResolver};\n//# sourceMappingURL=zod.module.js.map\n","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\nimport toast from 'react-hot-toast'\nimport { useAuthStore } from '../store/authStore'\nimport { useThemeStore } from '../store/themeStore'\nimport { useLanguageStore } from '../store/languageStore'\nimport { GoogleLogin } from '@react-oauth/google'\n\n// 表单验证模式\nconst loginSchema = z.object({\n  email: z.string().email('请输入有效的邮箱地址'),\n  password: z.string().min(6, '密码至少6位字符'),\n  username: z.string().min(2, '用户名至少2位字符').optional(),\n  confirmPassword: z.string().optional()\n}).refine((data) => {\n  if (data.confirmPassword !== undefined) {\n    return data.password === data.confirmPassword\n  }\n  return true\n}, {\n  message: '两次输入的密码不一致',\n  path: ['confirmPassword']\n})\n\ntype LoginFormData = z.infer<typeof loginSchema>\n\nconst LoginPageNew: React.FC = () => {\n  const [isRegisterMode, setIsRegisterMode] = useState(true) // 默认注册模式，符合原型图\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { login, register: registerUser, isLoading } = useAuthStore()\n  const { theme, toggleTheme } = useThemeStore()\n  const { language, setLanguage, t } = useLanguageStore()\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema)\n  })\n\n  const from = (location.state as any)?.from?.pathname || '/'\n\n  // 主题现在在 App.tsx 中全局处理\n\n  // Google 登录处理函数\n  const handleGoogleSuccess = async (credentialResponse: any) => {\n    try {\n      const result = await useAuthStore.getState().loginWithGoogle(credentialResponse.credential)\n      if (result.success) {\n        toast.success('Google登录成功！')\n        navigate(from, { replace: true })\n      } else {\n        toast.error(result.message || 'Google登录失败')\n      }\n    } catch (error) {\n      console.error('Google login error:', error)\n      toast.error('Google登录出错，请重试')\n    }\n  }\n\n  const handleGoogleError = () => {\n    console.error('Google登录失败')\n    toast.error('Google登录失败，请重试')\n  }\n\n  const onSubmit = async (data: LoginFormData) => {\n    try {\n      let success = false\n      \n      if (isRegisterMode) {\n        const result = await registerUser({\n          username: data.username || data.email.split('@')[0],\n          email: data.email,\n          password: data.password,\n          confirmPassword: data.confirmPassword || data.password\n        })\n        success = result.success\n        if (!success) {\n          toast.error(result.message || '注册失败')\n          return\n        }\n      } else {\n        const result = await login({\n          email: data.email,\n          password: data.password\n        })\n        success = result.success\n        if (!success) {\n          toast.error(result.message || '登录失败')\n          return\n        }\n      }\n\n      if (success) {\n        toast.success(isRegisterMode ? '注册成功！' : '登录成功！')\n        navigate(from, { replace: true })\n      }\n    } catch (error) {\n      console.error('Authentication error:', error)\n      toast.error('操作失败，请重试')\n    }\n  }\n\n  const toggleMode = () => {\n    setIsRegisterMode(!isRegisterMode)\n    reset()\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-8 flex items-center justify-center transition-colors\">\n      {/* 主容器，完全按原型图设计 */}\n      <div className=\"w-full max-w-5xl min-h-[800px] bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 relative transition-colors\">\n        {/* 语言和主题切换按钮 */}\n        <div className=\"absolute top-4 right-8 flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <button \n              onClick={() => setLanguage('zh')}\n              className={`px-2 py-1 text-sm rounded-md transition-colors ${\n                language === 'zh' \n                  ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200' \n                  : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-400'\n              }`}\n            >\n              中\n            </button>\n            <button \n              onClick={() => setLanguage('en')}\n              className={`px-2 py-1 text-sm rounded-md transition-colors ${\n                language === 'en' \n                  ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200' \n                  : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-400'\n              }`}\n            >\n              EN\n            </button>\n          </div>\n          <div className=\"border-l border-gray-300 dark:border-gray-600 h-6\"></div>\n          <button \n            onClick={toggleTheme} \n            className=\"p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-400 transition-colors\"\n          >\n            {theme === 'light' ? (\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"/>\n              </svg>\n            ) : (\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <circle cx=\"12\" cy=\"12\" r=\"5\"/>\n                <path d=\"M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4\"/>\n              </svg>\n            )}\n          </button>\n        </div>\n\n        {/* 顶部Logo */}\n        <header className=\"py-6 px-8 flex justify-center border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center\">\n            <svg viewBox=\"0 0 24 24\" className=\"w-9 h-9 mr-3 text-blue-600 dark:text-blue-400\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n              <path d=\"M7 12h10M12 7v10\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\"/>\n            </svg>\n            <h1 className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">Trademe</h1>\n          </div>\n        </header>\n\n        {/* 主要内容区域 */}\n        <main className=\"flex flex-col items-center justify-center py-16\">\n          <div className=\"w-full max-w-md mx-auto\">\n            {/* 页面标题 */}\n            <h2 className=\"text-center text-2xl font-bold mb-8 text-gray-800 dark:text-white\">\n              {t('accountLogin')}\n            </h2>\n\n            {/* Google 登录按钮 */}\n            <div className=\"mb-6\">\n              <GoogleLogin\n                onSuccess={handleGoogleSuccess}\n                onError={handleGoogleError}\n                useOneTap={false}\n                theme={theme === 'dark' ? 'filled_black' : 'outline'}\n                size=\"large\"\n                width=\"100%\"\n                text={isRegisterMode ? 'signup_with' : 'signin_with'}\n                shape=\"rectangular\"\n              />\n            </div>\n\n            {/* 分隔线 */}\n            <div className=\"relative flex justify-center mb-6\">\n              <hr className=\"w-full border-gray-300 dark:border-gray-600\" />\n              <span className=\"absolute px-4 bg-white dark:bg-gray-800 -top-3 text-gray-500 dark:text-gray-400\">\n                {isRegisterMode ? t('orContinueWith') : t('orContinueWith')}\n              </span>\n            </div>\n\n            {/* 表单 */}\n            <form onSubmit={handleSubmit(onSubmit)}>\n              {isRegisterMode && (\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">{t('username')}</label>\n                  <input\n                    type=\"text\"\n                    placeholder={t('enterUsername')}\n                    {...register('username')}\n                    className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 dark:bg-gray-700 dark:text-white transition-colors\"\n                  />\n                  {errors.username && (\n                    <p className=\"text-red-500 dark:text-red-400 text-sm mt-1\">{errors.username.message}</p>\n                  )}\n                </div>\n              )}\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">{t('email')}</label>\n                <input\n                  type=\"email\"\n                  placeholder={t('enterEmail')}\n                  {...register('email')}\n                  className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 dark:bg-gray-700 dark:text-white transition-colors\"\n                />\n                {errors.email && (\n                  <p className=\"text-red-500 dark:text-red-400 text-sm mt-1\">{errors.email.message}</p>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">{t('password')}</label>\n                <input\n                  type=\"password\"\n                  placeholder={t('enterPassword')}\n                  {...register('password')}\n                  className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 dark:bg-gray-700 dark:text-white transition-colors\"\n                />\n                {errors.password && (\n                  <p className=\"text-red-500 dark:text-red-400 text-sm mt-1\">{errors.password.message}</p>\n                )}\n              </div>\n\n              {isRegisterMode && (\n                <div className=\"mb-6\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">{t('confirmPassword')}</label>\n                  <input\n                    type=\"password\"\n                    placeholder={t('enterPasswordAgain')}\n                    {...register('confirmPassword')}\n                    className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 dark:bg-gray-700 dark:text-white transition-colors\"\n                  />\n                  {errors.confirmPassword && (\n                    <p className=\"text-red-500 dark:text-red-400 text-sm mt-1\">{errors.confirmPassword.message}</p>\n                  )}\n                </div>\n              )}\n\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full py-3 mb-6 text-white font-medium rounded-lg transition-colors disabled:opacity-50 bg-blue-600 hover:bg-blue-700 dark:bg-blue-600 dark:hover:bg-blue-700\"\n              >\n                {isLoading ? t('processing') : (isRegisterMode ? t('createAccount') : t('login'))}\n              </button>\n            </form>\n\n            {/* 底部链接 */}\n            <div className=\"text-center mb-4\">\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {isRegisterMode ? t('haveAccount') : t('noAccount')}\n                <button\n                  type=\"button\"\n                  onClick={toggleMode}\n                  className=\"text-blue-600 dark:text-blue-400 hover:underline ml-1\"\n                >\n                  {isRegisterMode ? t('loginNow') : t('registerNow')}\n                </button>\n              </p>\n            </div>\n\n            {/* 服务条款 */}\n            {isRegisterMode && (\n              <div className=\"text-center text-xs text-gray-500 dark:text-gray-400\">\n                <p>\n                  {t('byRegisteringAgree')}\n                  <a href=\"/terms\" className=\"text-blue-600 dark:text-blue-400 hover:underline\">{t('termsOfService')}</a>\n                  {t('and')}\n                  <a href=\"/privacy\" className=\"text-blue-600 dark:text-blue-400 hover:underline\">{t('privacyPolicy')}</a>\n                </p>\n              </div>\n            )}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPageNew","import React from 'react'\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg'\n  color?: 'primary' | 'secondary' | 'white'\n  className?: string\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md', \n  color = 'primary',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8', \n    lg: 'w-12 h-12'\n  }\n  \n  const colorClasses = {\n    primary: 'text-brand-500',\n    secondary: 'text-gray-500',\n    white: 'text-white'\n  }\n\n  return (\n    <div className={`inline-block ${className}`}>\n      <svg \n        className={`animate-spin ${sizeClasses[size]} ${colorClasses[color]}`}\n        xmlns=\"http://www.w3.org/2000/svg\" \n        fill=\"none\" \n        viewBox=\"0 0 24 24\"\n      >\n        <circle \n          className=\"opacity-25\" \n          cx=\"12\" \n          cy=\"12\" \n          r=\"10\" \n          stroke=\"currentColor\" \n          strokeWidth=\"4\"\n        />\n        <path \n          className=\"opacity-75\" \n          fill=\"currentColor\" \n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default LoadingSpinner","import React, { ButtonHTMLAttributes, ReactNode } from 'react'\nimport LoadingSpinner from './LoadingSpinner'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger'\n  size?: 'sm' | 'md' | 'lg'\n  loading?: boolean\n  children: ReactNode\n  className?: string\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  children,\n  className = '',\n  disabled,\n  ...props\n}) => {\n  const baseClasses = 'btn'\n  \n  const variantClasses = {\n    primary: 'btn-primary',\n    secondary: 'btn-secondary', \n    outline: 'btn-outline',\n    ghost: 'btn-ghost',\n    danger: 'bg-red-500 text-white hover:bg-red-600 active:bg-red-700'\n  }\n  \n  const sizeClasses = {\n    sm: 'btn-sm',\n    md: 'btn-md',\n    lg: 'btn-lg'\n  }\n\n  const isDisabled = disabled || loading\n\n  return (\n    <button\n      className={`\n        ${baseClasses}\n        ${variantClasses[variant]}\n        ${sizeClasses[size]}\n        ${isDisabled ? 'opacity-50 cursor-not-allowed' : ''}\n        ${className}\n      `}\n      disabled={isDisabled}\n      {...props}\n    >\n      {loading && (\n        <LoadingSpinner \n          size=\"sm\" \n          color={variant === 'primary' ? 'white' : 'primary'} \n          className=\"mr-2\" \n        />\n      )}\n      {children}\n    </button>\n  )\n}\n\nexport default Button","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from '../components/common/Button'\n\nconst VerificationPage: React.FC = () => {\n  const navigate = useNavigate()\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 transition-colors\">\n      <div className=\"max-w-md w-full space-y-8 p-6\">\n        <div className=\"text-center\">\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-white\">\n            邮箱验证\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n            请检查您的邮箱以完成账户验证\n          </p>\n        </div>\n        \n        <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg p-6\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"w-16 h-16 mx-auto bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\n              <svg className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.2a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            \n            <div>\n              <p className=\"text-gray-700 dark:text-gray-300\">\n                我们已向您的邮箱发送了验证链接，请点击链接完成账户激活。\n              </p>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                如果您没有收到邮件，请检查垃圾邮件箱或稍后重试。\n              </p>\n            </div>\n            \n            <div className=\"space-y-3\">\n              <Button\n                onClick={() => window.location.reload()}\n                variant=\"outline\"\n                className=\"w-full\"\n              >\n                重新发送验证邮件\n              </Button>\n              \n              <Button\n                onClick={() => navigate('/login')}\n                variant=\"primary\"\n                className=\"w-full\"\n              >\n                返回登录\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default VerificationPage","import { tradingServiceClient, handleApiResponse, handleApiError } from './client'\nimport type { \n  KlineData, \n  TickerData, \n  OrderBook, \n  TradingPair, \n  Exchange \n} from '@/types/market'\n\nexport const marketApi = {\n  // 获取K线数据 - 使用真实OKX数据服务\n  async getKlineData(\n    symbol: string, \n    timeframe: string, \n    exchange: string = 'okx', \n    limit: number = 500\n  ): Promise<KlineData[]> {\n    try {\n      // 直接调用我们的K线数据服务\n      const response = await fetch(`/klines/${symbol}?timeframe=${timeframe}&limit=${limit}`)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      \n      // 转换OKX格式到KlineData格式\n      return data.klines.map((kline: number[]) => ({\n        timestamp: kline[0],\n        open: kline[1],\n        high: kline[2], \n        low: kline[3],\n        close: kline[4],\n        volume: kline[5]\n      }))\n    } catch (error) {\n      console.error('获取K线数据失败:', error)\n      throw error\n    }\n  },\n\n  // 获取实时价格数据 - 使用真实OKX数据服务\n  async getTicker(symbol: string, exchange: string = 'okx'): Promise<TickerData> {\n    try {\n      // 直接调用我们的价格统计服务\n      const response = await fetch(`/stats/${symbol}`)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      \n      // 转换格式到TickerData\n      return {\n        symbol: data.symbol,\n        price: data.price,\n        change: data.change_24h,\n        change_percent: data.change_percent || 0,\n        high_24h: data.high_24h,\n        low_24h: data.low_24h,\n        volume_24h: data.volume_24h,\n        timestamp: data.timestamp\n      }\n    } catch (error) {\n      console.error('获取价格数据失败:', error)\n      throw error\n    }\n  },\n\n  // 获取多个交易对的实时价格\n  async getTickers(symbols: string[], exchange: string): Promise<TickerData[]> {\n    try {\n      const response = await tradingServiceClient.post('/market/tickers', {\n        symbols,\n        exchange\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取订单簿数据\n  async getOrderBook(symbol: string, exchange: string, depth: number = 20): Promise<OrderBook> {\n    try {\n      const response = await tradingServiceClient.get('/market/orderbook', {\n        params: { symbol, exchange, depth }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取交易所信息\n  async getExchanges(): Promise<Exchange[]> {\n    try {\n      const response = await tradingServiceClient.get('/market/exchanges')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取交易对信息\n  async getTradingPairs(exchange: string): Promise<TradingPair[]> {\n    try {\n      const response = await tradingServiceClient.get('/market/pairs', {\n        params: { exchange }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 搜索交易对\n  async searchTradingPairs(query: string, exchange?: string): Promise<TradingPair[]> {\n    try {\n      const response = await tradingServiceClient.get('/market/pairs/search', {\n        params: { query, exchange }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取历史价格数据\n  async getHistoricalData(\n    symbol: string,\n    exchange: string,\n    startDate: string,\n    endDate: string,\n    timeframe: string = '1d'\n  ): Promise<KlineData[]> {\n    try {\n      const response = await tradingServiceClient.get('/market/historical', {\n        params: { \n          symbol, \n          exchange, \n          start_date: startDate, \n          end_date: endDate, \n          timeframe \n        }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取市场统计信息\n  async getMarketStats(exchange: string): Promise<{\n    total_pairs: number\n    total_volume_24h: number\n    top_gainers: TickerData[]\n    top_losers: TickerData[]\n    most_active: TickerData[]\n  }> {\n    try {\n      const response = await tradingServiceClient.get('/market/stats', {\n        params: { exchange }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取技术指标数据\n  async getTechnicalIndicators(\n    symbol: string,\n    exchange: string,\n    timeframe: string,\n    indicators: string[],\n    period: number = 20\n  ): Promise<Record<string, number[]>> {\n    try {\n      const response = await tradingServiceClient.post('/market/indicators', {\n        symbol,\n        exchange,\n        timeframe,\n        indicators,\n        period\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  }\n}","interface WebSocketConnection {\n  ws: WebSocket\n  url: string\n  key: string\n  isActive: boolean\n  reconnectAttempts: number\n  maxReconnectAttempts: number\n  reconnectDelay: number\n  authToken?: string\n  onMessage?: (data: any) => void\n  onError?: (error: Event) => void\n  onClose?: () => void\n  onOpen?: () => void\n}\n\ninterface WebSocketManagerConfig {\n  baseUrl: string\n  maxReconnectAttempts: number\n  reconnectDelay: number\n  heartbeatInterval: number\n}\n\nexport class WebSocketManager {\n  private connections: Map<string, WebSocketConnection> = new Map()\n  private config: WebSocketManagerConfig\n  private heartbeatTimer: NodeJS.Timeout | null = null\n\n  constructor(config: WebSocketManagerConfig) {\n    this.config = config\n    this.startHeartbeat()\n  }\n\n  /**\n   * 创建WebSocket连接\n   */\n  connect(\n    key: string,\n    endpoint: string,\n    handlers: {\n      onMessage?: (data: any) => void\n      onError?: (error: Event) => void\n      onClose?: () => void\n      onOpen?: () => void\n    } = {},\n    authToken?: string\n  ): boolean {\n    try {\n      // 如果连接已存在，先关闭\n      if (this.connections.has(key)) {\n        this.disconnect(key)\n      }\n\n      const url = `${this.config.baseUrl}${endpoint}`\n      const ws = new WebSocket(url)\n      \n      const connection: WebSocketConnection = {\n        ws,\n        url,\n        key,\n        isActive: false,\n        reconnectAttempts: 0,\n        maxReconnectAttempts: this.config.maxReconnectAttempts,\n        reconnectDelay: this.config.reconnectDelay,\n        authToken, // 保存认证token\n        ...handlers\n      }\n\n      this.setupWebSocketHandlers(connection)\n      this.connections.set(key, connection)\n\n      console.log(`WebSocket connecting: ${key} -> ${url}`)\n      return true\n    } catch (error) {\n      console.error(`Failed to create WebSocket connection for ${key}:`, error)\n      return false\n    }\n  }\n\n  /**\n   * 断开WebSocket连接\n   */\n  disconnect(key: string): boolean {\n    const connection = this.connections.get(key)\n    if (!connection) {\n      return false\n    }\n\n    connection.isActive = false\n    \n    if (connection.ws.readyState === WebSocket.OPEN || \n        connection.ws.readyState === WebSocket.CONNECTING) {\n      connection.ws.close(1000, 'Manual disconnect')\n    }\n\n    this.connections.delete(key)\n    console.log(`WebSocket disconnected: ${key}`)\n    return true\n  }\n\n  /**\n   * 断开所有连接\n   */\n  disconnectAll(): void {\n    for (const key of this.connections.keys()) {\n      this.disconnect(key)\n    }\n    \n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = null\n    }\n  }\n\n  /**\n   * 发送消息\n   */\n  send(key: string, message: any): boolean {\n    const connection = this.connections.get(key)\n    if (!connection || connection.ws.readyState !== WebSocket.OPEN) {\n      console.warn(`WebSocket not ready for sending: ${key}`)\n      return false\n    }\n\n    try {\n      const data = typeof message === 'string' ? message : JSON.stringify(message)\n      connection.ws.send(data)\n      return true\n    } catch (error) {\n      console.error(`Failed to send message to ${key}:`, error)\n      return false\n    }\n  }\n\n  /**\n   * 获取连接状态\n   */\n  getConnectionStatus(key: string): {\n    isConnected: boolean\n    readyState: number | null\n    reconnectAttempts: number\n  } {\n    const connection = this.connections.get(key)\n    if (!connection) {\n      return { isConnected: false, readyState: null, reconnectAttempts: 0 }\n    }\n\n    return {\n      isConnected: connection.ws.readyState === WebSocket.OPEN,\n      readyState: connection.ws.readyState,\n      reconnectAttempts: connection.reconnectAttempts\n    }\n  }\n\n  /**\n   * 获取所有连接状态\n   */\n  getAllConnectionStatus(): Record<string, any> {\n    const status: Record<string, any> = {}\n    for (const [key] of this.connections) {\n      status[key] = this.getConnectionStatus(key)\n    }\n    return status\n  }\n\n  /**\n   * 设置WebSocket事件处理器\n   */\n  private setupWebSocketHandlers(connection: WebSocketConnection): void {\n    const { ws } = connection\n\n    ws.onopen = (event) => {\n      connection.isActive = true\n      connection.reconnectAttempts = 0\n      console.log(`WebSocket connected: ${connection.key}`)\n      \n      // 如果有认证token，先发送认证消息\n      if (connection.authToken) {\n        const authMessage = {\n          type: 'auth',\n          token: connection.authToken\n        }\n        ws.send(JSON.stringify(authMessage))\n        console.log(`🔐 Sent auth message for connection: ${connection.key}`)\n      }\n      \n      connection.onOpen?.()\n    }\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data)\n        connection.onMessage?.(data)\n      } catch (error) {\n        console.error(`Failed to parse WebSocket message from ${connection.key}:`, error)\n        // 如果不是JSON，直接传递原始数据\n        connection.onMessage?.(event.data)\n      }\n    }\n\n    ws.onerror = (error) => {\n      console.error(`WebSocket error on ${connection.key}:`, error)\n      connection.onError?.(error)\n    }\n\n    ws.onclose = (event) => {\n      console.log(`WebSocket closed: ${connection.key}, code: ${event.code}, reason: ${event.reason}`)\n      \n      connection.onClose?.()\n      \n      // 自动重连（如果是意外断开）\n      if (connection.isActive && \n          connection.reconnectAttempts < connection.maxReconnectAttempts &&\n          event.code !== 1000) { // 1000 = 正常关闭\n        this.scheduleReconnect(connection)\n      } else if (connection.reconnectAttempts >= connection.maxReconnectAttempts) {\n        console.warn(`Max reconnect attempts reached for ${connection.key}`)\n        this.connections.delete(connection.key)\n      }\n    }\n  }\n\n  /**\n   * 安排重连\n   */\n  private scheduleReconnect(connection: WebSocketConnection): void {\n    connection.reconnectAttempts++\n    const delay = connection.reconnectDelay * Math.pow(2, connection.reconnectAttempts - 1) // 指数退避\n    \n    console.log(`Scheduling reconnect for ${connection.key} in ${delay}ms (attempt ${connection.reconnectAttempts})`)\n\n    setTimeout(() => {\n      if (connection.isActive) {\n        console.log(`Attempting to reconnect ${connection.key}...`)\n        const newWs = new WebSocket(connection.url)\n        connection.ws = newWs\n        this.setupWebSocketHandlers(connection)\n      }\n    }, delay)\n  }\n\n  /**\n   * 心跳检测\n   */\n  private startHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer)\n    }\n\n    this.heartbeatTimer = setInterval(() => {\n      for (const [key, connection] of this.connections) {\n        if (connection.ws.readyState === WebSocket.OPEN) {\n          // 发送心跳包\n          this.send(key, { type: 'ping', timestamp: Date.now() })\n        } else if (connection.ws.readyState === WebSocket.CLOSED && connection.isActive) {\n          // 检测到连接已断开，尝试重连\n          if (connection.reconnectAttempts < connection.maxReconnectAttempts) {\n            console.log(`Heartbeat detected closed connection, triggering reconnect: ${key}`)\n            this.scheduleReconnect(connection)\n          }\n        }\n      }\n    }, this.config.heartbeatInterval)\n  }\n\n  /**\n   * 获取统计信息\n   */\n  getStats(): {\n    totalConnections: number\n    activeConnections: number\n    connectionDetails: Array<{\n      key: string\n      url: string\n      isActive: boolean\n      readyState: string\n      reconnectAttempts: number\n    }>\n  } {\n    const connectionDetails = Array.from(this.connections.values()).map(conn => ({\n      key: conn.key,\n      url: conn.url,\n      isActive: conn.isActive,\n      readyState: this.getReadyStateString(conn.ws.readyState),\n      reconnectAttempts: conn.reconnectAttempts\n    }))\n\n    return {\n      totalConnections: this.connections.size,\n      activeConnections: connectionDetails.filter(c => c.readyState === 'OPEN').length,\n      connectionDetails\n    }\n  }\n\n  /**\n   * 获取连接状态字符串\n   */\n  private getReadyStateString(state: number): string {\n    switch (state) {\n      case WebSocket.CONNECTING: return 'CONNECTING'\n      case WebSocket.OPEN: return 'OPEN'\n      case WebSocket.CLOSING: return 'CLOSING'\n      case WebSocket.CLOSED: return 'CLOSED'\n      default: return 'UNKNOWN'\n    }\n  }\n}\n\n// 创建全局WebSocket管理器实例\nconst isPublicTest = import.meta.env.VITE_PUBLIC_TEST === 'true'\nconst publicWsBase = 'ws://43.167.252.120/ws'\n\nexport const wsManager = new WebSocketManager({\n  baseUrl: import.meta.env.MODE === 'production' \n    ? 'wss://api.trademe.app/ws'\n    : isPublicTest\n      ? publicWsBase\n      : 'ws://localhost:8001/ws',\n  maxReconnectAttempts: 5,\n  reconnectDelay: 1000, // 1秒\n  heartbeatInterval: 30000 // 30秒\n})\n\n// 在应用卸载时清理连接\nif (typeof window !== 'undefined') {\n  window.addEventListener('beforeunload', () => {\n    wsManager.disconnectAll()\n  })\n}","import { create } from 'zustand'\nimport toast from 'react-hot-toast'\nimport { marketApi } from '../services/api/market'\nimport { wsManager } from '../utils/websocketManager'\nimport type { MarketData, KlineData, TickerData } from '../types/market'\n\ninterface MarketState {\n  // 市场数据\n  currentPrices: Record<string, TickerData>\n  klineData: Record<string, KlineData[]>\n  selectedSymbol: string\n  selectedTimeframe: string\n  selectedExchange: string\n  \n  // 加载状态\n  isLoading: boolean\n  isConnected: boolean\n  lastUpdate: Date | null\n  error: string | null\n  \n  // 订阅状态\n  subscribedTickers: Set<string>\n  connectionStats: any\n  \n  // 操作方法\n  setSelectedSymbol: (symbol: string) => void\n  setSelectedTimeframe: (timeframe: string) => void\n  setSelectedExchange: (exchange: string) => void\n  \n  // 数据获取\n  fetchKlineData: (symbol: string, timeframe: string, exchange: string) => Promise<void>\n  subscribeToTicker: (symbol: string, exchange: string) => void\n  unsubscribeFromTicker: (symbol: string, exchange: string) => void\n  \n  // WebSocket管理\n  connectWebSocket: () => void\n  disconnectWebSocket: () => void\n  updatePrice: (symbol: string, data: TickerData) => void\n  \n  // 工具方法\n  clearError: () => void\n  getConnectionStats: () => any\n  reset: () => void\n}\n\nexport const useMarketStore = create<MarketState>((set, get) => ({\n  // 初始状态\n  currentPrices: {},\n  klineData: {},\n  selectedSymbol: 'BTC/USDT',\n  selectedTimeframe: '1h',\n  selectedExchange: 'okx',\n  isLoading: false,\n  isConnected: false,\n  lastUpdate: null,\n  error: null,\n  subscribedTickers: new Set(),\n  connectionStats: null,\n\n  // 设置选中的交易对\n  setSelectedSymbol: (symbol: string) => {\n    set({ selectedSymbol: symbol })\n    // 自动获取新的K线数据\n    const { selectedTimeframe, selectedExchange, fetchKlineData } = get()\n    fetchKlineData(symbol, selectedTimeframe, selectedExchange)\n  },\n\n  // 设置选中的时间周期\n  setSelectedTimeframe: (timeframe: string) => {\n    set({ selectedTimeframe: timeframe })\n    // 自动获取新的K线数据\n    const { selectedSymbol, selectedExchange, fetchKlineData } = get()\n    fetchKlineData(selectedSymbol, timeframe, selectedExchange)\n  },\n\n  // 设置选中的交易所\n  setSelectedExchange: (exchange: string) => {\n    set({ selectedExchange: exchange })\n    // 自动获取新的K线数据\n    const { selectedSymbol, selectedTimeframe, fetchKlineData } = get()\n    fetchKlineData(selectedSymbol, selectedTimeframe, exchange)\n  },\n\n  // 获取K线数据\n  fetchKlineData: async (symbol: string, timeframe: string, exchange: string) => {\n    set({ isLoading: true })\n    try {\n      const data = await marketApi.getKlineData(symbol, timeframe, exchange)\n      set(state => ({\n        klineData: {\n          ...state.klineData,\n          [`${exchange}:${symbol}:${timeframe}`]: data\n        },\n        isLoading: false,\n        lastUpdate: new Date()\n      }))\n    } catch (error: any) {\n      set({ isLoading: false })\n      const message = error.response?.data?.message || '获取K线数据失败'\n      toast.error(message)\n    }\n  },\n\n  // 订阅实时价格\n  subscribeToTicker: (symbol: string, exchange: string) => {\n    const key = `${exchange}:${symbol}`\n    const endpoint = `/market/${exchange}/${symbol}/ticker`\n    \n    const success = wsManager.connect(key, endpoint, {\n      onOpen: () => {\n        set(state => ({\n          isConnected: true,\n          subscribedTickers: new Set([...state.subscribedTickers, key]),\n          error: null\n        }))\n        console.log(`Subscribed to ticker: ${key}`)\n      },\n      onMessage: (data: TickerData) => {\n        get().updatePrice(symbol, data)\n      },\n      onError: (error) => {\n        console.error(`WebSocket error for ${key}:`, error)\n        set({ error: `${symbol} 价格订阅失败` })\n        toast.error(`${symbol} 价格订阅失败`)\n      },\n      onClose: () => {\n        set(state => {\n          const newSubscribed = new Set(state.subscribedTickers)\n          newSubscribed.delete(key)\n          return {\n            subscribedTickers: newSubscribed,\n            isConnected: newSubscribed.size > 0\n          }\n        })\n        console.log(`Unsubscribed from ticker: ${key}`)\n      }\n    })\n\n    if (!success) {\n      toast.error(`无法连接到 ${symbol} 价格推送`)\n      set({ error: `WebSocket连接失败: ${symbol}` })\n    }\n  },\n\n  // 取消订阅实时价格\n  unsubscribeFromTicker: (symbol: string, exchange: string) => {\n    const key = `${exchange}:${symbol}`\n    const success = wsManager.disconnect(key)\n    \n    if (success) {\n      set(state => {\n        const newSubscribed = new Set(state.subscribedTickers)\n        newSubscribed.delete(key)\n        return {\n          subscribedTickers: newSubscribed,\n          isConnected: newSubscribed.size > 0\n        }\n      })\n    }\n  },\n\n  // 连接WebSocket\n  connectWebSocket: () => {\n    const { selectedSymbol, selectedExchange } = get()\n    get().subscribeToTicker(selectedSymbol, selectedExchange)\n  },\n\n  // 断开WebSocket\n  disconnectWebSocket: () => {\n    wsManager.disconnectAll()\n    set({ \n      subscribedTickers: new Set(),\n      isConnected: false,\n      connectionStats: null\n    })\n  },\n\n  // 更新价格数据\n  updatePrice: (symbol: string, data: TickerData) => {\n    set(state => ({\n      currentPrices: {\n        ...state.currentPrices,\n        [symbol]: data\n      },\n      lastUpdate: new Date(),\n      error: null\n    }))\n  },\n\n  // 清空错误\n  clearError: () => {\n    set({ error: null })\n  },\n\n  // 获取连接统计\n  getConnectionStats: () => {\n    const stats = wsManager.getStats()\n    set({ connectionStats: stats })\n    return stats\n  },\n\n  // 重置所有状态\n  reset: () => {\n    // 先断开所有连接\n    wsManager.disconnectAll()\n    \n    // 重置状态\n    set({\n      currentPrices: {},\n      klineData: {},\n      selectedSymbol: 'BTC/USDT',\n      selectedTimeframe: '1h',\n      selectedExchange: 'okx',\n      isLoading: false,\n      isConnected: false,\n      lastUpdate: null,\n      error: null,\n      subscribedTickers: new Set(),\n      connectionStats: null\n    })\n  }\n}))","import { tradingServiceClient, handleApiResponse, handleApiError } from './client'\nimport type { \n  Strategy, \n  CreateStrategyData, \n  BacktestConfig, \n  BacktestResult,\n  TradeRecord\n} from '@/types/strategy'\nimport type { PaginatedResponse } from '@/types/api'\n\nexport const strategyApi = {\n  // 获取策略列表\n  async getStrategies(params?: {\n    page?: number\n    per_page?: number\n    status?: string\n    search?: string\n    active_only?: boolean\n  }): Promise<{\n    strategies: Strategy[]\n    total: number\n    skip: number\n    limit: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get('/strategies', { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取单个策略详情\n  async getStrategy(id: string): Promise<Strategy> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${id}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 创建策略\n  async createStrategy(data: CreateStrategyData): Promise<Strategy> {\n    try {\n      const response = await tradingServiceClient.post('/strategies', data)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 更新策略\n  async updateStrategy(id: string, data: Partial<Strategy>): Promise<Strategy> {\n    try {\n      const response = await tradingServiceClient.put(`/strategies/${id}`, data)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 删除策略\n  async deleteStrategy(id: string): Promise<{ message: string }> {\n    try {\n      const response = await tradingServiceClient.delete(`/strategies/${id}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 启动策略\n  async startStrategy(id: string): Promise<{ message: string }> {\n    try {\n      const response = await tradingServiceClient.post(`/strategies/${id}/start`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 停止策略\n  async stopStrategy(id: string): Promise<{ message: string }> {\n    try {\n      const response = await tradingServiceClient.post(`/strategies/${id}/stop`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 暂停策略\n  async pauseStrategy(id: string): Promise<{ message: string }> {\n    try {\n      const response = await tradingServiceClient.post(`/strategies/${id}/pause`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 运行回测\n  async runBacktest(strategyId: string, config: BacktestConfig): Promise<BacktestResult> {\n    try {\n      const response = await tradingServiceClient.post(`/strategies/${strategyId}/backtest`, config)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取回测结果列表\n  async getBacktestResults(strategyId: string): Promise<BacktestResult[]> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/backtests`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取单个回测结果\n  async getBacktestResult(strategyId: string, backtestId: string): Promise<BacktestResult> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/backtests/${backtestId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取策略交易记录\n  async getStrategyTrades(strategyId: string, params?: {\n    page?: number\n    per_page?: number\n    start_date?: string\n    end_date?: string\n  }): Promise<PaginatedResponse<TradeRecord>> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/trades`, { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取策略性能统计\n  async getStrategyPerformance(strategyId: string, period?: string): Promise<{\n    total_return: number\n    max_drawdown: number\n    sharpe_ratio: number\n    win_rate: number\n    total_trades: number\n    avg_trade_duration: number\n    profit_factor: number\n    equity_curve: Array<{ date: string; value: number }>\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/performance`, {\n        params: { period }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 复制策略\n  async cloneStrategy(id: string, name: string): Promise<Strategy> {\n    try {\n      const response = await tradingServiceClient.post(`/strategies/${id}/clone`, { name })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 导出策略代码\n  async exportStrategy(id: string): Promise<{ code: string; name: string }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${id}/export`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 导入策略代码\n  async importStrategy(data: { name: string; code: string; description?: string }): Promise<Strategy> {\n    try {\n      const response = await tradingServiceClient.post('/strategies/import', data)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取策略实盘详情\n  async getStrategyLiveDetails(strategyId: number): Promise<{\n    strategy: Strategy\n    live_stats: {\n      total_trades: number\n      buy_volume: number\n      sell_volume: number\n      total_fees: number\n      profit_loss: number\n      profit_percentage: number\n      avg_price: number\n      first_trade: string | null\n      last_trade: string | null\n    }\n    trades: any[]\n    performance: {\n      total_return: number\n      win_rate: number\n      max_drawdown: number\n      sharpe_ratio: number\n    }\n    status: string\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/live-details`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 从AI会话创建策略/指标\n  async createStrategyFromAI(data: {\n    name: string\n    description?: string\n    code: string\n    parameters?: any\n    strategy_type: 'strategy' | 'indicator'\n    ai_session_id: string\n  }): Promise<Strategy> {\n    try {\n      const response = await tradingServiceClient.post('/strategies/from-ai', data)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 根据类型获取策略/指标列表\n  async getStrategiesByType(type: 'strategy' | 'indicator', params?: {\n    skip?: number\n    limit?: number\n  }): Promise<{\n    strategies: Strategy[]\n    total: number\n    skip: number\n    limit: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/by-type/${type}`, { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  }\n}","import { create } from 'zustand'\nimport toast from 'react-hot-toast'\nimport { strategyApi } from '../services/api/strategy'\nimport type { Strategy, CreateStrategyData, BacktestResult } from '../types/strategy'\n\ninterface StrategyState {\n  // 策略列表\n  strategies: Strategy[]\n  selectedStrategy: Strategy | null\n  isLoading: boolean\n  \n  // 回测相关\n  backtestResults: BacktestResult[]\n  isBacktesting: boolean\n  \n  // 操作方法\n  fetchStrategies: () => Promise<void>\n  createStrategy: (data: CreateStrategyData) => Promise<boolean>\n  updateStrategy: (id: string, data: Partial<Strategy>) => Promise<boolean>\n  deleteStrategy: (id: string) => Promise<boolean>\n  selectStrategy: (strategy: Strategy | null) => void\n  \n  // 回测相关方法\n  runBacktest: (strategyId: string, config: any) => Promise<boolean>\n  fetchBacktestResults: (strategyId: string) => Promise<void>\n  \n  // 策略执行\n  startStrategy: (id: string) => Promise<boolean>\n  stopStrategy: (id: string) => Promise<boolean>\n}\n\nexport const useStrategyStore = create<StrategyState>((set, get) => ({\n  // 初始状态\n  strategies: [],\n  selectedStrategy: null,\n  isLoading: false,\n  backtestResults: [],\n  isBacktesting: false,\n\n  // 获取策略列表\n  fetchStrategies: async () => {\n    set({ isLoading: true })\n    try {\n      const response = await strategyApi.getStrategies()\n      set({ strategies: response.strategies, isLoading: false })\n    } catch (error: any) {\n      set({ isLoading: false })\n      const message = error.response?.data?.message || '获取策略列表失败'\n      toast.error(message)\n    }\n  },\n\n  // 创建策略\n  createStrategy: async (data: CreateStrategyData) => {\n    try {\n      const strategy = await strategyApi.createStrategy(data)\n      set(state => ({\n        strategies: [...state.strategies, strategy]\n      }))\n      toast.success('策略创建成功')\n      return true\n    } catch (error: any) {\n      const message = error.response?.data?.message || '创建策略失败'\n      toast.error(message)\n      return false\n    }\n  },\n\n  // 更新策略\n  updateStrategy: async (id: string, data: Partial<Strategy>) => {\n    try {\n      const updatedStrategy = await strategyApi.updateStrategy(id, data)\n      set(state => ({\n        strategies: state.strategies.map(s => \n          s.id === id ? updatedStrategy : s\n        ),\n        selectedStrategy: state.selectedStrategy?.id === id \n          ? updatedStrategy \n          : state.selectedStrategy\n      }))\n      toast.success('策略更新成功')\n      return true\n    } catch (error: any) {\n      const message = error.response?.data?.message || '更新策略失败'\n      toast.error(message)\n      return false\n    }\n  },\n\n  // 删除策略\n  deleteStrategy: async (id: string) => {\n    try {\n      await strategyApi.deleteStrategy(id)\n      set(state => ({\n        strategies: state.strategies.filter(s => s.id !== id),\n        selectedStrategy: state.selectedStrategy?.id === id \n          ? null \n          : state.selectedStrategy\n      }))\n      toast.success('策略删除成功')\n      return true\n    } catch (error: any) {\n      const message = error.response?.data?.message || '删除策略失败'\n      toast.error(message)\n      return false\n    }\n  },\n\n  // 选择策略\n  selectStrategy: (strategy: Strategy | null) => {\n    set({ selectedStrategy: strategy })\n  },\n\n  // 运行回测\n  runBacktest: async (strategyId: string, config: any) => {\n    set({ isBacktesting: true })\n    try {\n      const result = await strategyApi.runBacktest(strategyId, config)\n      set(state => ({\n        backtestResults: [...state.backtestResults, result],\n        isBacktesting: false\n      }))\n      toast.success('回测完成')\n      return true\n    } catch (error: any) {\n      set({ isBacktesting: false })\n      const message = error.response?.data?.message || '回测失败'\n      toast.error(message)\n      return false\n    }\n  },\n\n  // 获取回测结果\n  fetchBacktestResults: async (strategyId: string) => {\n    try {\n      const results = await strategyApi.getBacktestResults(strategyId)\n      set({ backtestResults: results })\n    } catch (error: any) {\n      const message = error.response?.data?.message || '获取回测结果失败'\n      toast.error(message)\n    }\n  },\n\n  // 启动策略\n  startStrategy: async (id: string) => {\n    try {\n      await strategyApi.startStrategy(id)\n      set(state => ({\n        strategies: state.strategies.map(s =>\n          s.id === id ? { ...s, status: 'running' } : s\n        ),\n        selectedStrategy: state.selectedStrategy?.id === id\n          ? { ...state.selectedStrategy, status: 'running' }\n          : state.selectedStrategy\n      }))\n      toast.success('策略已启动')\n      return true\n    } catch (error: any) {\n      const message = error.response?.data?.message || '启动策略失败'\n      toast.error(message)\n      return false\n    }\n  },\n\n  // 停止策略\n  stopStrategy: async (id: string) => {\n    try {\n      await strategyApi.stopStrategy(id)\n      set(state => ({\n        strategies: state.strategies.map(s =>\n          s.id === id ? { ...s, status: 'stopped' } : s\n        ),\n        selectedStrategy: state.selectedStrategy?.id === id\n          ? { ...state.selectedStrategy, status: 'stopped' }\n          : state.selectedStrategy\n      }))\n      toast.success('策略已停止')\n      return true\n    } catch (error: any) {\n      const message = error.response?.data?.message || '停止策略失败'\n      toast.error(message)\n      return false\n    }\n  },\n}))","import { tradingServiceClient, handleApiResponse, handleApiError } from './client'\n\nexport interface ChatMessage {\n  role: 'user' | 'assistant'\n  content: string\n  timestamp: string\n  metadata?: {\n    codeBlock?: string\n    analysis?: string  // 改为string避免渲染对象\n    suggestions?: string[]\n    isError?: boolean\n    isStreaming?: boolean  // 支持流式消息标记\n    isWaitingFirstChunk?: boolean  // 等待第一个数据块的标记\n    streamCompleted?: boolean  // 流式消息完成标记\n    completedAt?: number  // 完成时间戳\n    forceRender?: number  // 强制渲染标记\n  }\n}\n\n// 支持双模式的会话类型\nexport type AIMode = 'developer' | 'trader'\nexport type SessionType = 'strategy' | 'indicator' | 'trading_system'\nexport type SessionStatus = 'active' | 'completed' | 'archived'\n\nexport interface ChatSession {\n  session_id: string\n  name: string\n  description?: string\n  ai_mode: AIMode\n  session_type: SessionType\n  status: SessionStatus\n  progress: number\n  message_count: number\n  last_message?: string\n  cost_total: number\n  created_at: string\n  updated_at: string\n  last_activity_at?: string\n}\n\nexport interface CreateSessionRequest {\n  name: string\n  ai_mode: AIMode\n  session_type: SessionType\n  description?: string\n}\n\nexport interface UsageStats {\n  period_days: number\n  total_requests: number\n  total_cost_usd: number\n  daily_cost_usd: number\n  monthly_cost_usd: number\n  remaining_daily_quota: number\n  remaining_monthly_quota: number\n  by_feature: Record<string, any>\n  by_session: Record<string, any>\n}\n\nexport interface StrategyGenerationRequest {\n  description: string\n  market_type: string\n  risk_level: 'low' | 'medium' | 'high'\n  timeframe: string\n  indicators?: string[]\n}\n\nexport interface GeneratedStrategy {\n  name: string\n  description: string\n  code: string\n  explanation: string\n  parameters: Record<string, any>\n  risk_assessment: {\n    level: 'low' | 'medium' | 'high'\n    factors: string[]\n    recommendations: string[]\n  }\n}\n\nexport interface MarketAnalysis {\n  symbol: string\n  timeframe: string\n  trend_direction: 'bullish' | 'bearish' | 'neutral'\n  strength: number\n  support_levels: number[]\n  resistance_levels: number[]\n  technical_indicators: Record<string, any>\n  summary: string\n  recommendations: string[]\n  confidence: number\n}\n\nexport const aiApi = {\n  // ========== 会话管理功能 ==========\n  \n  // 创建新的聊天会话 (匹配后端 /ai/sessions 端点)\n  async createSession(request: CreateSessionRequest): Promise<{\n    session_id: string\n    name: string\n    ai_mode: string\n    session_type: string\n    status: string\n    created_at: string\n  }> {\n    try {\n      const response = await tradingServiceClient.post('/ai/sessions', request)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n      throw error // 确保错误被正确抛出\n    }\n  },\n\n  // 获取用户的聊天会话列表 (匹配后端 /ai/sessions 端点)\n  async getSessions(aiMode: AIMode): Promise<{\n    sessions: ChatSession[]\n    total_count: number\n    ai_mode: string\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/ai/sessions?ai_mode=${aiMode}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 更新会话状态 (匹配后端 /ai/sessions/{session_id}/status 端点)\n  async updateSessionStatus(sessionId: string, status: SessionStatus, progress?: number): Promise<{\n    message: string\n    session_id: string\n  }> {\n    try {\n      const params = progress !== undefined ? `?progress=${progress}` : ''\n      const response = await tradingServiceClient.put(`/ai/sessions/${sessionId}/status${params}`, { status })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 删除聊天会话 (匹配后端 /ai/sessions/{session_id} 端点)\n  async deleteSession(sessionId: string): Promise<{\n    message: string\n    session_id: string\n  }> {\n    try {\n      const response = await tradingServiceClient.delete(`/ai/sessions/${sessionId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // ========== 对话功能 ==========\n\n  // 发送AI聊天消息 (匹配后端 /ai/chat 端点，支持双模式)\n  async sendChatMessage(\n    message: string, \n    sessionId?: string, \n    aiMode: AIMode = 'developer',\n    sessionType: SessionType = 'strategy',\n    context?: Record<string, any>\n  ): Promise<{\n    response: string\n    session_id: string\n    tokens_used: number\n    model: string\n    cost_usd: number\n  }> {\n    try {\n      const response = await tradingServiceClient.post('/ai/chat', {\n        content: message,\n        session_id: sessionId,\n        ai_mode: aiMode,\n        session_type: sessionType,\n        context: context || {}\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取聊天历史 (匹配后端 /ai/chat/history 端点)\n  async getChatHistory(sessionId?: string, limit: number = 50): Promise<{ messages: any[] }> {\n    try {\n      const params = new URLSearchParams()\n      if (sessionId) params.append('session_id', sessionId)\n      params.append('limit', limit.toString())\n      \n      const response = await tradingServiceClient.get(`/ai/chat/history?${params}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 清除聊天会话 (匹配后端 /ai/chat/{session_id} 端点)\n  async clearChatSession(sessionId: string): Promise<{ message: string; cleared: boolean }> {\n    try {\n      const response = await tradingServiceClient.delete(`/ai/chat/${sessionId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 生成交易策略 (匹配后端 /ai/strategy/generate 端点)\n  async generateStrategy(request: {\n    description: string\n    indicators?: string[]\n    timeframe?: string\n    risk_level?: 'low' | 'medium' | 'high'\n  }): Promise<{\n    code: string\n    explanation: string\n    parameters: Record<string, any>\n    warnings: string[]\n  }> {\n    try {\n      const response = await tradingServiceClient.post('/ai/strategy/generate', {\n        description: request.description,\n        indicators: request.indicators || [],\n        timeframe: request.timeframe || '1h',\n        risk_level: request.risk_level || 'medium'\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取AI使用统计 (匹配后端 /ai/usage/stats 端点)\n  async getUsageStats(days: number = 30): Promise<UsageStats> {\n    try {\n      const response = await tradingServiceClient.get(`/ai/usage/stats?days=${days}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 生成交易洞察 (匹配后端 /ai/insights/generate 端点)\n  async generateTradingInsights(symbol: string, timeframe: string = '1d'): Promise<{\n    symbol: string\n    insights: string\n    confidence: number\n    key_factors: string[]\n    timestamp: string\n  }> {\n    try {\n      const response = await tradingServiceClient.post(`/ai/insights/generate?symbol=${symbol}&timeframe=${timeframe}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 市场分析 (匹配后端 /ai/market/analyze 端点)\n  async analyzeMarket(request: {\n    symbols: string[]\n    timeframe?: string\n    analysis_type?: string\n  }): Promise<{\n    summary: string\n    signals: Array<Record<string, any>>\n    risk_assessment: Record<string, any>\n    recommendations: string[]\n  }> {\n    try {\n      const response = await tradingServiceClient.post('/ai/market/analyze', {\n        symbols: request.symbols,\n        timeframe: request.timeframe || '1d',\n        analysis_type: request.analysis_type || 'technical'\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 分析回测结果 (匹配后端 /ai/backtest/analyze 端点)\n  async analyzeBacktestResults(backtestId: number): Promise<{\n    performance_summary: string\n    strengths: string[]\n    weaknesses: string[]\n    improvement_suggestions: string[]\n    risk_analysis: Record<string, any>\n  }> {\n    try {\n      const response = await tradingServiceClient.post(`/ai/backtest/analyze?backtest_id=${backtestId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // ========== 新增AI策略回测集成功能 ==========\n  \n  // 获取AI会话最新生成的策略\n  async getLatestAIStrategy(sessionId: string): Promise<{\n    strategy_id: number\n    name: string\n    description: string\n    code: string\n    parameters: Record<string, any>\n    strategy_type: string\n    ai_session_id: string\n    suggested_backtest_params: Record<string, any>\n    created_at: string\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/latest-ai-strategy/${sessionId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n      throw error\n    }\n  },\n\n  // 自动触发AI策略回测\n  async autoBacktest(config: {\n    ai_session_id: string\n    strategy_code: string\n    strategy_name?: string\n    auto_config?: boolean\n    exchange?: string\n    symbols?: string[]\n    timeframes?: string[]\n    initial_capital?: number\n    start_date?: string\n    end_date?: string\n    fee_rate?: string\n  }): Promise<{\n    success: boolean\n    task_id: string\n    strategy_id?: number\n    backtest_id?: number\n    message: string\n  }> {\n    try {\n      const response = await tradingServiceClient.post('/ai/strategy/auto-backtest', config)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n      throw error\n    }\n  },\n\n  // 获取AI策略回测进度\n  async getBacktestProgress(taskId: string): Promise<{\n    task_id: string\n    status: 'pending' | 'running' | 'completed' | 'failed'\n    progress: number\n    current_step: string\n    logs: string[]\n    error_message?: string\n    started_at: string\n    completed_at?: string\n    ai_session_id?: string\n    strategy_name?: string\n    is_ai_strategy: boolean\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/realtime-backtest/ai-strategy/progress/${taskId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n      throw error\n    }\n  },\n\n  // 获取AI策略回测结果\n  async getBacktestResults(taskId: string): Promise<{\n    task_id: string\n    status: string\n    backtest_results: {\n      performance_metrics: {\n        total_return: number\n        sharpe_ratio: number\n        max_drawdown: number\n        win_rate: number\n        total_trades: number\n        profit_factor: number\n        annual_return?: number\n        volatility?: number\n      }\n      ai_analysis?: {\n        score: number\n        grade: 'A' | 'B' | 'C' | 'D' | 'F'\n        recommendations: string[]\n        strengths: string[]\n        weaknesses: string[]\n        summary: string\n      }\n      trade_details?: {\n        trades: any[]\n        daily_returns: number[]\n        cumulative_returns: number[]\n      }\n    }\n    strategy_info: {\n      strategy_id: number\n      strategy_name: string\n      ai_session_id: string\n    }\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/realtime-backtest/ai-strategy/results/${taskId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n      throw error\n    }\n  },\n\n  // 获取AI会话的回测历史记录\n  async getAISessionBacktestHistory(sessionId: string): Promise<{\n    success: boolean\n    ai_session_id: string\n    backtest_history: Array<{\n      strategy_id: number\n      strategy_name: string\n      backtest_id?: number\n      task_id?: string\n      status: string\n      performance_metrics?: Record<string, any>\n      ai_analysis?: Record<string, any>\n      created_at: string\n    }>\n    total_strategies: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/ai/strategy/backtest-history/${sessionId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n      throw error\n    }\n  }\n}","/**\n * WebSocket AI客户端\n * 解决HTTP超时问题，提供实时AI对话体验\n */\n\nexport interface WebSocketMessage {\n  type: string\n  [key: string]: any\n}\n\nexport interface AIProgressUpdate {\n  type: 'ai_progress_update'\n  request_id?: string\n  step: number\n  total_steps: number\n  status: string\n  message: string\n  timestamp?: string\n}\n\nexport interface AIComplexityAnalysis {\n  type: 'ai_complexity_analysis'\n  request_id?: string\n  complexity: 'simple' | 'medium' | 'complex'\n  estimated_time_seconds: number\n  message: string\n}\n\nexport interface AIChatSuccess {\n  type: 'ai_chat_success'\n  request_id?: string\n  response: string\n  session_id?: string\n  tokens_used: number\n  model: string\n  cost_usd: number\n  message: string\n}\n\nexport interface AIChatError {\n  type: 'ai_chat_error'\n  request_id?: string\n  error: string\n  error_code?: string\n  complexity?: string\n  retry_suggested?: boolean\n  message: string\n}\n\n// 🌊 流式AI消息类型定义 - 修复字段匹配\nexport interface AIStreamStart {\n  type: 'ai_stream_start'\n  request_id?: string\n  session_id?: string\n  model?: string\n  input_tokens?: number\n}\n\nexport interface AIStreamChunk {\n  type: 'ai_stream_chunk'\n  request_id?: string\n  chunk: string\n  content_so_far: string  // 匹配后端字段名\n  session_id?: string\n}\n\nexport interface AIStreamEnd {\n  type: 'ai_stream_end'\n  request_id?: string\n  session_id?: string\n  content: string  // 匹配后端字段名\n  tokens_used: number\n  cost_usd: number\n}\n\nexport interface AIStreamError {\n  type: 'ai_stream_error'\n  request_id?: string\n  error: string\n  error_type?: string\n  message: string\n  retry_suggested?: boolean\n  timestamp?: string\n}\n\nexport interface WebSocketConfig {\n  url: string\n  token: string\n  reconnectInterval?: number\n  maxReconnectAttempts?: number\n  heartbeatInterval?: number\n}\n\nexport type WebSocketEventHandler = (data: WebSocketMessage) => void\n\nexport interface WebSocketEvents {\n  onOpen?: () => void\n  onClose?: (event: CloseEvent) => void\n  onError?: (event: Event) => void\n  onAuthenticated?: (data: any) => void\n  onAIStart?: (data: any) => void\n  onComplexityAnalysis?: (data: AIComplexityAnalysis) => void\n  onProgressUpdate?: (data: AIProgressUpdate) => void\n  onAISuccess?: (data: AIChatSuccess) => void\n  onAIError?: (data: AIChatError) => void\n  onHeartbeat?: (data: any) => void\n  onMessage?: (data: WebSocketMessage) => void\n  // 🌊 新增流式AI事件处理器\n  onStreamStart?: (data: AIStreamStart) => void\n  onStreamChunk?: (data: AIStreamChunk) => void\n  onStreamEnd?: (data: AIStreamEnd) => void\n  onStreamError?: (data: AIStreamError) => void\n}\n\nexport class WebSocketAIClient {\n  private ws: WebSocket | null = null\n  private config: WebSocketConfig\n  private events: WebSocketEvents = {}\n  private isConnected = false\n  private isAuthenticated = false\n  private reconnectAttempts = 0\n  private connectionId: string | null = null\n  private userId: number | null = null\n  private heartbeatTimer: NodeJS.Timeout | null = null\n  private reconnectTimer: NodeJS.Timeout | null = null\n\n  constructor(config: WebSocketConfig) {\n    this.config = {\n      reconnectInterval: 3000,\n      maxReconnectAttempts: 5,\n      heartbeatInterval: 30000,\n      ...config\n    }\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  public on(events: WebSocketEvents): void {\n    this.events = { ...this.events, ...events }\n  }\n\n  /**\n   * 连接WebSocket\n   */\n  public async connect(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      try {\n        console.log('🔗 正在连接WebSocket AI服务:', this.config.url)\n        \n        this.ws = new WebSocket(this.config.url)\n\n        this.ws.onopen = () => {\n          console.log('✅ WebSocket连接已建立')\n          this.isConnected = true\n          this.reconnectAttempts = 0\n          this.events.onOpen?.()\n          this.authenticate().then(resolve).catch(reject)\n        }\n\n        this.ws.onclose = (event) => {\n          console.log('❌ WebSocket连接已断开:', event.code, event.reason)\n          this.isConnected = false\n          this.isAuthenticated = false\n          this.connectionId = null\n          this.userId = null\n          this.clearTimers()\n          this.events.onClose?.(event)\n          \n          // 只有在非正常关闭时才自动重连\n          if (event.code !== 1000) {\n            this.handleReconnect()\n          }\n          \n          // 在初始连接时，如果失败则reject\n          if (this.reconnectAttempts === 0) {\n            reject(new Error(`WebSocket连接失败: ${event.reason || '未知原因'} (Code: ${event.code})`))\n          }\n        }\n\n        this.ws.onerror = (event) => {\n          console.error('❌ WebSocket错误:', event)\n          this.events.onError?.(event)\n          reject(event)\n        }\n\n        this.ws.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data)\n            \n            // 验证消息格式\n            if (!data || typeof data !== 'object') {\n              console.error('❌ WebSocket消息格式无效:', data)\n              return\n            }\n            \n            // 确保type字段存在\n            if (!data.type) {\n              console.error('❌ WebSocket消息缺少type字段:', data)\n              return\n            }\n            \n            this.handleMessage(data)\n          } catch (error) {\n            console.error('❌ 解析WebSocket消息失败:', error, 'Original data:', event.data)\n          }\n        }\n\n      } catch (error) {\n        console.error('❌ WebSocket连接失败:', error)\n        reject(error)\n      }\n    })\n  }\n\n  /**\n   * 认证\n   */\n  private async authenticate(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n        reject(new Error('WebSocket未连接'))\n        return\n      }\n\n      // 设置认证超时（增加到30秒，给后端足够的时间处理）\n      const authTimeout = setTimeout(() => {\n        console.error('❌ [WebSocketClient] 认证超时，30秒内未收到认证响应')\n        reject(new Error('认证超时'))\n      }, 30000)\n\n      // 监听认证结果\n      const originalHandler = this.events.onAuthenticated\n      console.log('🔐 [WebSocketClient] 设置临时认证处理器')\n      \n      // 设置临时认证处理器\n      this.events.onAuthenticated = (data) => {\n        console.log('🎉 [WebSocketClient] 认证回调被触发！', data)\n        clearTimeout(authTimeout)\n        this.isAuthenticated = true\n        // 后端返回的是 user_id，而不是 connection_id\n        this.connectionId = data.connection_id || `user_${data.user_id}_${Date.now()}`\n        this.userId = data.user_id\n        this.startHeartbeat()\n        \n        console.log('✅ WebSocket认证成功:', {\n          connectionId: this.connectionId,\n          userId: this.userId\n        })\n        \n        // 恢复原始处理器\n        this.events.onAuthenticated = originalHandler\n        originalHandler?.(data)\n        resolve(true)\n      }\n\n      // 发送认证消息（使用后端期望的格式）\n      const authMessage = {\n        type: 'auth',  // 后端期望 'auth' 而不是 'authenticate'\n        token: this.config.token\n      }\n      console.log('📤 [WebSocketClient] 发送认证消息:', { type: authMessage.type, tokenLength: authMessage.token?.length })\n      this.send(authMessage)\n    })\n  }\n\n  /**\n   * 发送AI对话消息\n   */\n  public async sendAIChat(\n    content: string,\n    aiMode: string = 'trader',\n    sessionType: string = 'strategy',\n    sessionId?: string\n  ): Promise<string> {\n    console.log('🚀 [WebSocketClient] sendAIChat called:', {\n      content: content.substring(0, 100) + '...',\n      aiMode,\n      sessionType,\n      sessionId,\n      isConnected: this.isConnected,\n      isAuthenticated: this.isAuthenticated\n    })\n    \n    if (!this.isConnected || !this.isAuthenticated) {\n      const errorMsg = `WebSocket状态异常 - 连接:${this.isConnected}, 认证:${this.isAuthenticated}`\n      console.error('❌ [WebSocketClient]', errorMsg)\n      throw new Error(errorMsg)\n    }\n\n    const requestId = this.generateRequestId()\n    \n    const message = {\n      type: 'ai_chat',\n      request_id: requestId,\n      content,\n      ai_mode: aiMode,\n      session_type: sessionType,\n      session_id: sessionId\n    }\n    \n    console.log('📤 [WebSocketClient] 发送AI消息:', message)\n    this.send(message)\n\n    return requestId\n  }\n\n  /**\n   * 取消AI请求\n   */\n  public cancelAIRequest(requestId: string): void {\n    if (!this.isConnected || !this.isAuthenticated) return\n\n    this.send({\n      type: 'cancel_request',\n      request_id: requestId\n    })\n  }\n\n  /**\n   * 发送心跳\n   */\n  public ping(): void {\n    if (!this.isConnected) return\n\n    this.send({\n      type: 'ping'\n    })\n  }\n\n  /**\n   * 断开连接\n   */\n  public disconnect(): void {\n    this.clearTimers()\n    \n    if (this.ws) {\n      this.ws.close()\n      this.ws = null\n    }\n    \n    this.isConnected = false\n    this.isAuthenticated = false\n    this.connectionId = null\n    this.userId = null\n  }\n\n  /**\n   * 获取连接状态\n   */\n  public getConnectionInfo() {\n    return {\n      isConnected: this.isConnected,\n      isAuthenticated: this.isAuthenticated,\n      connectionId: this.connectionId,\n      userId: this.userId,\n      reconnectAttempts: this.reconnectAttempts\n    }\n  }\n\n  // ========== 私有方法 ==========\n\n  private handleMessage(data: WebSocketMessage): void {\n    // 智能消息日志 - 显示关键信息而非Object\n    const logMessage = {\n      type: data.type,\n      request_id: data.request_id || 'N/A',\n      ...(data.type === 'ai_progress_update' && {\n        step: data.step,\n        total_steps: data.total_steps,\n        status: data.status,\n        message: data.message\n      }),\n      ...(data.type === 'ai_stream_chunk' && {\n        chunk_length: data.chunk?.length || 0\n      }),\n      ...(data.type === 'ai_stream_end' && {\n        response_length: data.content?.length || 0,  // 修复字段名\n        tokens_used: data.tokens_used,\n        cost_usd: data.cost_usd\n      })\n    }\n    console.log('📨 收到WebSocket消息:', logMessage)\n\n    switch (data.type) {\n      case 'connection_established':\n        console.log('✅ [WebSocketClient] 连接已建立:', data)\n        this.isAuthenticated = true  // 标记为已认证\n        this.connectionId = data.connection_id || null\n        this.userId = data.user_id || null\n        // 触发认证成功回调\n        if (this.events.onAuthenticated) {\n          console.log('🎯 [WebSocketClient] 触发onAuthenticated回调 (connection_established)')\n          this.events.onAuthenticated(data)\n        }\n        break\n        \n      case 'auth_success':\n        console.log('✅ [WebSocketClient] 认证成功:', data)\n        this.isAuthenticated = true\n        this.connectionId = data.connection_id || null\n        this.userId = data.user_id || null\n        // 关键：调用认证成功回调\n        if (this.events.onAuthenticated) {\n          console.log('🎯 [WebSocketClient] 调用onAuthenticated回调')\n          this.events.onAuthenticated(data)\n        } else {\n          console.warn('⚠️ [WebSocketClient] onAuthenticated回调未设置')\n        }\n        break\n      \n      case 'ai_chat_start':\n        this.events.onAIStart?.(data)\n        break\n      \n      case 'ai_complexity_analysis':\n        this.events.onComplexityAnalysis?.(data as AIComplexityAnalysis)\n        break\n      \n      case 'ai_progress_update':\n        // 调用正确的进度更新回调\n        this.events.onProgressUpdate?.(data as AIProgressUpdate)\n        break\n      \n      case 'ai_chat_success':\n        this.events.onAISuccess?.(data as AIChatSuccess)\n        break\n      \n      case 'ai_chat_error':\n        this.events.onAIError?.(data as AIChatError)\n        break\n      \n      // 🌊 流式AI消息处理\n      case 'ai_stream_start':\n        console.log('🌊 [WebSocketClient] 流式AI开始:', data)\n        this.events.onStreamStart?.(data as AIStreamStart)\n        break\n      \n      case 'ai_stream_chunk':\n        console.log('📝 [WebSocketClient] 流式AI数据块:', data?.chunk || '[chunk为空]')\n        this.events.onStreamChunk?.(data as AIStreamChunk)\n        break\n      \n      case 'ai_stream_end':\n        console.log('✅ [WebSocketClient] 流式AI结束:', data)\n        console.log('🔄 [WebSocketClient] 准备调用onStreamEnd回调')\n        \n        if (this.events.onStreamEnd) {\n          console.log('🎯 [WebSocketClient] onStreamEnd回调存在，正在调用...')\n          this.events.onStreamEnd(data as AIStreamEnd)\n          console.log('✅ [WebSocketClient] onStreamEnd回调调用完成')\n        } else {\n          console.log('⚠️ [WebSocketClient] onStreamEnd回调不存在!')\n        }\n        break\n      \n      case 'ai_stream_error':\n        // 安全的错误日志记录，防止 Object 显示问题\n        const errorInfo = {\n          error: data?.error || 'Unknown error',\n          error_type: data?.error_type || 'UNKNOWN',\n          message: data?.message || 'No error message',\n          request_id: data?.request_id || 'No request ID'\n        }\n        console.log('❌ [WebSocketClient] 流式AI错误:', errorInfo)\n        console.log('❌ [WebSocketClient] 原始错误数据:', JSON.stringify(data, null, 2))\n        this.events.onStreamError?.(data as AIStreamError)\n        break\n      \n      case 'heartbeat':\n      case 'pong':\n        this.events.onHeartbeat?.(data)\n        break\n      \n      default:\n        this.events.onMessage?.(data)\n        break\n    }\n  }\n\n  private send(data: any): void {\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      console.warn('⚠️ WebSocket未连接，无法发送消息:', data)\n      return\n    }\n\n    try {\n      this.ws.send(JSON.stringify(data))\n      console.log('📤 发送WebSocket消息:', data.type)\n    } catch (error) {\n      console.error('❌ 发送WebSocket消息失败:', error)\n    }\n  }\n\n  private startHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer)\n    }\n\n    this.heartbeatTimer = setInterval(() => {\n      this.ping()\n    }, this.config.heartbeatInterval!)\n  }\n\n  private clearTimers(): void {\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = null\n    }\n    \n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer)\n      this.reconnectTimer = null\n    }\n  }\n\n  private handleReconnect(): void {\n    if (this.reconnectAttempts >= this.config.maxReconnectAttempts!) {\n      console.error('❌ 达到最大重连次数，停止重连')\n      return\n    }\n\n    this.reconnectAttempts++\n    console.log(`🔄 尝试重连 (${this.reconnectAttempts}/${this.config.maxReconnectAttempts})`)\n\n    this.reconnectTimer = setTimeout(() => {\n      this.connect().catch(console.error)\n    }, this.config.reconnectInterval!)\n  }\n\n  private generateRequestId(): string {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36)\n  }\n}\n\nexport default WebSocketAIClient","/**\n * WebSocket AI服务集成\n * 替代HTTP AI API，解决超时问题\n */\n\nimport WebSocketAIClient, { \n  type WebSocketConfig, \n  type AIChatSuccess, \n  type AIChatError, \n  type AIProgressUpdate,\n  type AIComplexityAnalysis,\n  type AIStreamStart,\n  type AIStreamChunk,\n  type AIStreamEnd,\n  type AIStreamError\n} from './websocketClient'\n\nexport interface WebSocketAIConfig {\n  baseUrl: string\n  token: string\n}\n\nexport interface AIProgressCallback {\n  onStart?: (data: any) => void\n  onComplexityAnalysis?: (data: AIComplexityAnalysis) => void  \n  onProgress?: (data: AIProgressUpdate) => void\n  onSuccess?: (data: AIChatSuccess) => void\n  onError?: (data: AIChatError) => void\n  // 🌊 流式AI回调\n  onStreamStart?: (data: AIStreamStart) => void\n  onStreamChunk?: (data: AIStreamChunk) => void\n  onStreamEnd?: (data: AIStreamEnd) => void\n  onStreamError?: (data: AIStreamError) => void\n}\n\nexport interface PendingRequest {\n  requestId: string\n  resolve: (data: AIChatSuccess) => void\n  reject: (error: AIChatError) => void\n  callbacks?: AIProgressCallback\n}\n\nexport class WebSocketAIService {\n  private client: WebSocketAIClient\n  private pendingRequests = new Map<string, PendingRequest>()\n  private isInitialized = false\n\n  constructor(config: WebSocketAIConfig) {\n    // 使用正确的WebSocket端点 - 处理不同的URL格式\n    let baseUrl = config.baseUrl\n    \n    // 移除/api/v1路径（如果存在）\n    baseUrl = baseUrl.replace(/\\/api\\/v1$/, '')\n    \n    // 确保baseURL格式正确\n    if (!baseUrl.match(/^https?:\\/\\//)) {\n      // 如果没有协议，添加默认协议\n      baseUrl = window.location.protocol + '//' + baseUrl\n    }\n    \n    // 构建WebSocket URL - 修复端点匹配问题，需要包含API版本前缀\n    const wsUrl = baseUrl.replace(/^http/, 'ws') + '/api/v1/ai/ws/chat'\n    \n    console.log('🔗 [WebSocketAI] 构建的WebSocket URL:', wsUrl)\n    \n    this.client = new WebSocketAIClient({\n      url: wsUrl,\n      token: config.token,\n      reconnectInterval: 3000,\n      maxReconnectAttempts: 5, // 增加重连尝试次数\n      heartbeatInterval: 30000  // 心跳间隔30秒\n    })\n\n    this.setupEventHandlers()\n  }\n\n  /**\n   * 初始化连接\n   */\n  public async initialize(): Promise<boolean> {\n    if (this.isInitialized) {\n      return true\n    }\n\n    try {\n      await this.client.connect()\n      this.isInitialized = true\n      return true\n    } catch (error) {\n      console.error('❌ WebSocket AI服务初始化失败:', error)\n      return false\n    }\n  }\n\n  /**\n   * 发送AI对话消息 (WebSocket版本)\n   */\n  public async sendChatMessage(\n    content: string,\n    sessionId?: string,\n    aiMode: string = 'trader',\n    sessionType: string = 'strategy',\n    callbacks?: AIProgressCallback\n  ): Promise<AIChatSuccess> {\n    // 确保已连接\n    if (!this.isInitialized) {\n      const connected = await this.initialize()\n      if (!connected) {\n        throw new Error('WebSocket连接失败')\n      }\n    }\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        const requestId = await this.client.sendAIChat(\n          content,\n          aiMode,\n          sessionType,\n          sessionId\n        )\n\n        // 保存请求信息\n        this.pendingRequests.set(requestId, {\n          requestId,\n          resolve,\n          reject,\n          callbacks\n        })\n\n        // 设置超时（4分钟，给后端Claude客户端足够时间）\n        setTimeout(() => {\n          if (this.pendingRequests.has(requestId)) {\n            this.pendingRequests.delete(requestId)\n            reject({\n              type: 'ai_chat_error',\n              request_id: requestId,\n              error: 'WebSocket请求超时',\n              error_code: 'WEBSOCKET_TIMEOUT',\n              message: 'WebSocket请求超时，请重试'\n            } as AIChatError)\n          }\n        }, 600000) // 增加到10分钟，适应Claude AI长响应时间\n\n      } catch (error) {\n        console.error('❌ [WebSocketAI] sendChatMessage异常:', error)\n        reject({\n          type: 'ai_chat_error',\n          error: error instanceof Error ? error.message : '未知错误',\n          error_code: 'WEBSOCKET_ERROR',\n          message: 'WebSocket发送失败'\n        } as AIChatError)\n      }\n    })\n  }\n\n  /**\n   * 取消请求\n   */\n  public cancelRequest(requestId: string): void {\n    this.client.cancelAIRequest(requestId)\n    if (this.pendingRequests.has(requestId)) {\n      this.pendingRequests.delete(requestId)\n    }\n  }\n\n  /**\n   * 获取连接状态\n   */\n  public getConnectionStatus() {\n    return this.client.getConnectionInfo()\n  }\n\n  /**\n   * 断开连接\n   */\n  public disconnect(): void {\n    this.client.disconnect()\n    this.isInitialized = false\n    this.pendingRequests.clear()\n  }\n\n  /**\n   * 重新连接\n   */\n  public async reconnect(): Promise<boolean> {\n    this.disconnect()\n    return this.initialize()\n  }\n\n  // ========== 私有方法 ==========\n\n  private setupEventHandlers(): void {\n    this.client.on({\n      onOpen: () => {\n        console.log('🔗 WebSocket AI服务已连接')\n      },\n\n      onClose: (event) => {\n        console.log('❌ WebSocket AI服务已断开:', event.code, event.reason)\n        this.isInitialized = false\n        \n        // 清理所有pending请求\n        this.pendingRequests.forEach(({ reject, requestId }) => {\n          reject({\n            type: 'ai_chat_error',\n            request_id: requestId,\n            error: 'WebSocket连接断开',\n            error_code: 'WEBSOCKET_DISCONNECTED',\n            message: 'WebSocket连接断开，请重试'\n          } as AIChatError)\n        })\n        this.pendingRequests.clear()\n      },\n\n      onError: (event) => {\n        console.error('❌ WebSocket AI服务错误:', event)\n      },\n\n      onAuthenticated: (data) => {\n        console.log('✅ WebSocket AI服务认证成功:', data)\n      },\n\n      onAIStart: (data) => {\n        const request = this.findRequestById(data.request_id)\n        request?.callbacks?.onStart?.(data)\n      },\n\n      onComplexityAnalysis: (data) => {\n        const request = this.findRequestById(data.request_id)\n        request?.callbacks?.onComplexityAnalysis?.(data)\n      },\n\n      onProgressUpdate: (data) => {\n        const request = this.findRequestById(data.request_id)\n        request?.callbacks?.onProgress?.(data)\n      },\n\n      onAISuccess: (data) => {\n        const request = this.findRequestById(data.request_id)\n        if (request) {\n          this.pendingRequests.delete(request.requestId)\n          request.callbacks?.onSuccess?.(data)\n          request.resolve(data)\n        }\n      },\n\n      onAIError: (data) => {\n        const request = this.findRequestById(data.request_id)\n        if (request) {\n          this.pendingRequests.delete(request.requestId)\n          request.callbacks?.onError?.(data)\n          request.reject(data)\n        }\n      },\n\n      // 🌊 流式AI事件处理\n      onStreamStart: (data) => {\n        const request = this.findRequestById(data.request_id)\n        request?.callbacks?.onStreamStart?.(data)\n      },\n\n      onStreamChunk: (data) => {\n        const request = this.findRequestById(data.request_id)\n        request?.callbacks?.onStreamChunk?.(data)\n      },\n\n      onStreamEnd: (data) => {\n        const request = this.findRequestById(data.request_id)\n        if (request) {\n          this.pendingRequests.delete(request.requestId)\n          request.callbacks?.onStreamEnd?.(data)\n          // 流式结束时，解析Promise（将流式结束数据转换为成功数据格式）\n          const successData: AIChatSuccess = {\n            type: 'ai_chat_success',\n            request_id: data.request_id,\n            response: data.content,  // 修复字段名\n            session_id: data.session_id,\n            tokens_used: data.tokens_used,\n            model: 'claude-3-5-sonnet-20241022',\n            cost_usd: data.cost_usd,\n            message: '对话成功'\n          }\n          request.resolve(successData)\n        }\n      },\n\n      onStreamError: (data) => {\n        const request = this.findRequestById(data.request_id)\n        if (request) {\n          this.pendingRequests.delete(request.requestId)\n          request.callbacks?.onStreamError?.(data)\n          // 将流式错误转换为标准错误格式\n          const errorData: AIChatError = {\n            type: 'ai_chat_error',\n            request_id: data.request_id,\n            error: data.error,\n            message: data.message\n          }\n          request.reject(errorData)\n        }\n      },\n\n      onHeartbeat: () => {\n        // 心跳正常时不输出日志，减少噪音\n      }\n    })\n  }\n\n  private findRequestById(requestId?: string): PendingRequest | undefined {\n    if (!requestId) return undefined\n    return this.pendingRequests.get(requestId)\n  }\n}\n\n// 创建单例实例\nlet wsAIService: WebSocketAIService | null = null\n\n/**\n * 获取WebSocket AI服务实例\n */\nexport function getWebSocketAIService(config?: WebSocketAIConfig): WebSocketAIService {\n  if (!wsAIService && config) {\n    wsAIService = new WebSocketAIService(config)\n  }\n  \n  if (!wsAIService) {\n    throw new Error('WebSocket AI服务未初始化，请提供配置')\n  }\n  \n  return wsAIService\n}\n\n/**\n * 销毁WebSocket AI服务实例  \n */\nexport function destroyWebSocketAIService(): void {\n  if (wsAIService) {\n    wsAIService.disconnect()\n    wsAIService = null\n  }\n}\n\nexport default WebSocketAIService","import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\nimport toast from 'react-hot-toast'\nimport { aiApi } from '../services/api/ai'\nimport { errorHandler, createRetryHandler, ErrorType } from '../utils/errorHandler'\nimport { getWebSocketAIService, type AIProgressCallback, type WebSocketAIService } from '../services/ai/websocketAI'\nimport type { \n  ChatSession, \n  ChatMessage, \n  StrategyGenerationRequest, \n  GeneratedStrategy,\n  MarketAnalysis,\n  AIMode,\n  SessionType,\n  SessionStatus,\n  CreateSessionRequest,\n  UsageStats\n} from '../services/api/ai'\nimport type {\n  AutoBacktestConfig,\n  BacktestProgress,\n  BacktestResults,\n  AIGeneratedStrategy,\n  BacktestHistoryItem\n} from '../types/aiBacktest'\n\ninterface AIState {\n  // 双模式会话管理\n  currentAIMode: AIMode\n  chatSessions: Record<AIMode, ChatSession[]>  // 按模式分组的会话\n  currentSession: ChatSession | null\n  messages: ChatMessage[]\n  isTyping: boolean\n  \n  // 消息加载状态管理 - 解决异步竞态条件\n  messagesLoading: boolean\n  messagesLoaded: boolean\n  \n  // WebSocket状态\n  useWebSocket: boolean\n  wsConnected: boolean\n  wsConnectionId: string | null\n  \n  // AI进度状态\n  aiProgress: {\n    isProcessing: boolean\n    step: number\n    totalSteps: number\n    status: string\n    message: string\n    complexity?: 'simple' | 'medium' | 'complex'\n    estimatedTime?: number\n  } | null\n  \n  // 🌊 流式响应状态\n  streamingMessage: {\n    isStreaming: boolean\n    requestId?: string\n    accumulatedContent: string\n    messageIndex?: number  // 当前正在更新的消息索引\n  } | null\n  \n  // 策略生成\n  generatedStrategies: GeneratedStrategy[]\n  isGenerating: boolean\n  currentGeneratedStrategy: GeneratedStrategy | null\n  \n  // 市场分析\n  marketAnalyses: Record<string, MarketAnalysis> // key: symbol-timeframe\n  isAnalyzing: boolean\n  \n  // 使用统计\n  usageStats: UsageStats | null\n  \n  // 新增：回测相关状态\n  generatedStrategy: AIGeneratedStrategy | null\n  showBacktestPrompt: boolean\n  backtestProgress: BacktestProgress | null\n  backtestResults: BacktestResults | null\n  showBacktestResults: boolean\n  isBacktestRunning: boolean\n  \n  // 加载状态\n  isLoading: boolean\n  error: string | null\n  \n  // 网络状态和重试管理\n  networkStatus: 'checking' | 'connected' | 'disconnected'\n  retryCount: number\n  \n  // 模式和会话操作\n  setAIMode: (mode: AIMode) => void\n  createChatSession: (request: CreateSessionRequest) => Promise<boolean>\n  loadChatSessions: (mode: AIMode) => Promise<void>\n  selectChatSession: (session: ChatSession | null) => void\n  sendMessage: (message: string) => Promise<boolean>\n  deleteChatSession: (sessionId: string) => Promise<boolean>\n  updateSessionStatus: (sessionId: string, status: SessionStatus, progress?: number) => Promise<boolean>\n  clearCurrentMessages: () => void\n  \n  // 使用统计\n  loadUsageStats: (days?: number) => Promise<void>\n  updateUsageStatsRealtime: (costUsd: number, tokensUsed: number) => void\n  \n  // 策略生成操作\n  generateStrategy: (request: StrategyGenerationRequest) => Promise<GeneratedStrategy | null>\n  optimizeStrategy: (code: string, objectives: string[]) => Promise<any>\n  explainStrategy: (code: string) => Promise<any>\n  clearGeneratedStrategies: () => void\n  \n  // 市场分析操作\n  analyzeMarket: (symbol: string, exchange: string, timeframe: string) => Promise<MarketAnalysis | null>\n  getTradingSignals: (symbol: string, exchange: string, timeframes: string[]) => Promise<any>\n  assessRisk: (strategyCode?: string, portfolio?: any) => Promise<any>\n  \n  // WebSocket方法\n  toggleWebSocket: () => void\n  initializeWebSocket: () => Promise<boolean>\n  sendMessageWebSocket: (message: string) => Promise<boolean>\n  \n  // 新增：回测相关方法\n  getLatestAIStrategy: (sessionId: string) => Promise<AIGeneratedStrategy | null>\n  autoBacktest: (config: AutoBacktestConfig) => Promise<boolean>\n  getBacktestProgress: (taskId: string) => Promise<BacktestProgress | null>\n  getBacktestResults: (taskId: string) => Promise<BacktestResults | null>\n  startBacktestMonitoring: (taskId: string) => void\n  stopBacktestMonitoring: () => void\n  handleStrategyGenerated: (sessionId: string) => Promise<void>\n  handleQuickBacktest: (config: Partial<AutoBacktestConfig>) => Promise<void>\n  setShowBacktestPrompt: (show: boolean) => void\n  setShowBacktestResults: (show: boolean) => void\n  \n  // 工具方法\n  clearError: () => void\n  reset: () => void\n  checkNetworkStatus: () => Promise<boolean>\n  getErrorMessage: (error: any) => string\n}\n\nexport const useAIStore = create<AIState>()(\n  persist(\n    (set, get) => ({\n      // 初始状态\n      currentAIMode: 'trader' as AIMode,\n      chatSessions: {\n        developer: [],\n        trader: []\n      },\n      currentSession: null,\n      messages: [],\n      isTyping: false,\n      messagesLoading: false,\n      messagesLoaded: false,\n      \n      // WebSocket状态初始值\n      useWebSocket: true, // 默认启用WebSocket\n      wsConnected: false,\n      wsConnectionId: null,\n      \n      // AI进度状态初始值  \n      aiProgress: null,\n      \n      // 🌊 流式响应状态初始值\n      streamingMessage: null,\n      \n      generatedStrategies: [],\n      isGenerating: false,\n      currentGeneratedStrategy: null,\n      \n      marketAnalyses: {},\n      isAnalyzing: false,\n      \n      usageStats: null,\n      \n      // 回测相关状态初始值\n      generatedStrategy: null,\n      showBacktestPrompt: false,\n      backtestProgress: null,\n      backtestResults: null,\n      showBacktestResults: false,\n      isBacktestRunning: false,\n      \n      isLoading: false,\n      error: null,\n      \n      // 网络状态和重试管理初始值\n      networkStatus: 'connected',\n      retryCount: 0,\n\n      // =============== 模式和会话管理 ===============\n      \n      // 切换AI模式\n      setAIMode: (mode: AIMode) => {\n        set({ \n          currentAIMode: mode,\n          currentSession: null,\n          messages: [],\n          error: null \n        })\n      },\n\n      // 创建新的聊天会话\n      createChatSession: async (request: CreateSessionRequest) => {\n        set({ isLoading: true, error: null })\n        try {\n          const response = await aiApi.createSession(request)\n          \n          // 构建新的会话对象\n          const newSession: ChatSession = {\n            session_id: response.session_id,\n            name: request.name,\n            description: request.description,\n            ai_mode: request.ai_mode,\n            session_type: request.session_type,\n            status: 'active' as SessionStatus,\n            progress: 0,\n            message_count: 0,\n            cost_total: 0,\n            created_at: response.created_at,\n            updated_at: response.created_at,\n            last_activity_at: response.created_at\n          }\n          \n          set(state => ({\n            chatSessions: {\n              ...state.chatSessions,\n              [request.ai_mode]: [newSession, ...state.chatSessions[request.ai_mode]]\n            },\n            currentSession: newSession,\n            messages: [],\n            isLoading: false\n          }))\n          \n          // 如果有描述，自动发送作为第一条消息\n          if (request.description && request.description.trim()) {\n            // 使用get()获取最新状态，然后发送消息\n            const { sendMessage } = get()\n            await sendMessage(request.description.trim())\n          }\n          \n          toast.success(`创建${request.session_type === 'strategy' ? '策略' : request.session_type === 'indicator' ? '指标' : ''}会话成功`)\n          return true\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '创建会话失败')\n          set({ error: message, isLoading: false })\n          toast.error(message)\n          return false\n        }\n      },\n\n      // 加载聊天会话列表\n      loadChatSessions: async (mode: AIMode) => {\n        set({ isLoading: true, error: null })\n        try {\n          const response = await aiApi.getSessions(mode)\n          set(state => ({ \n            chatSessions: {\n              ...state.chatSessions,\n              [mode]: response.sessions\n            },\n            isLoading: false \n          }))\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '加载会话列表失败')\n          set({ error: message, isLoading: false })\n          console.error('Load chat sessions error:', error)\n        }\n      },\n\n      // 选择聊天会话 - 修复异步竞态条件 ✅\n      selectChatSession: async (session: ChatSession | null) => {\n        // 立即设置基础状态，包含加载状态管理\n        set({ \n          currentSession: session,\n          messages: [],\n          error: null,\n          messagesLoading: !!session,  // 🔧 如果有会话则开始加载\n          messagesLoaded: false\n        })\n\n        // 如果选择了会话，立即开始异步加载聊天历史\n        if (session) {\n          try {\n            console.log('📥 [AIStore] 开始加载聊天历史:', session.session_id)\n            const response = await aiApi.getChatHistory(session.session_id, 20)\n            \n            // API返回的消息格式转换\n            const historyMessages = (response?.messages || []).map((msg: any) => ({\n              role: msg.message_type || msg.role, // 保持兼容性\n              content: String(msg.content || ''), // 确保content是字符串\n              timestamp: msg.created_at || msg.timestamp // 保持兼容性\n            } as ChatMessage))\n            \n            // API返回的消息已经是按时间倒序排列，需要反转为正序\n            const orderedHistoryMessages = historyMessages.reverse()\n            \n            // 只有当前会话仍然是选中的会话时才更新消息\n            const currentState = get()\n            if (currentState.currentSession?.session_id === session.session_id) {\n              console.log('✅ [AIStore] 聊天历史加载完成:', {\n                sessionId: session.session_id,\n                messageCount: orderedHistoryMessages.length\n              })\n              \n              set({ \n                messages: orderedHistoryMessages,\n                messagesLoading: false,  // 🔧 标记加载完成\n                messagesLoaded: true     // 🔧 标记已加载\n              })\n            } else {\n              console.log('⚠️ [AIStore] 会话已切换，忽略历史消息加载')\n              set({ messagesLoading: false, messagesLoaded: true })\n            }\n          } catch (error: any) {\n            console.error('❌ [AIStore] 加载聊天历史失败:', error)\n            set({ \n              error: '加载聊天历史失败，请刷新重试',\n              messagesLoading: false,  // 🔧 标记加载完成（即使失败）\n              messagesLoaded: true     // 🔧 标记已尝试加载\n            })\n          }\n        } else {\n          // 没有选择会话，直接标记为加载完成\n          set({ messagesLoading: false, messagesLoaded: true })\n        }\n      },\n\n      // 发送消息 - 支持WebSocket/HTTP双模式\n      sendMessage: async (message: string) => {\n        const { useWebSocket } = get()\n        \n        // 如果启用WebSocket，使用WebSocket发送\n        if (useWebSocket) {\n          return get().sendMessageWebSocket(message)\n        }\n        \n        // 原有HTTP发送逻辑\n        let { currentSession, currentAIMode, retryCount } = get()\n        \n        // console.log('🚀 [DEBUG] sendMessage called:', { \n        //   message, \n        //   currentSession: currentSession?.session_id || 'null',\n        //   currentAIMode \n        // })\n        \n        // 如果没有当前会话，自动创建一个默认会话\n        if (!currentSession) {\n          console.log('❌ [DEBUG] No currentSession, creating default session')\n          try {\n            const defaultSessionName = currentAIMode === 'trader' ? '市场分析对话' : '策略开发对话'\n            const success = await get().createChatSession({\n              name: defaultSessionName,\n              ai_mode: currentAIMode,\n              session_type: 'strategy',\n              description: '自动创建的对话会话'\n            })\n            \n            if (!success) {\n              toast.error('创建对话会话失败')\n              return false\n            }\n            \n            // 重新获取当前会话\n            currentSession = get().currentSession\n            if (!currentSession) {\n              toast.error('会话创建失败')\n              return false\n            }\n            \n            console.log('✅ [DEBUG] Auto-created session:', currentSession.session_id)\n            toast.success('已自动创建新对话')\n          } catch (error) {\n            console.log('❌ [DEBUG] Exception in session creation:', error)\n            toast.error('创建对话会话失败')\n            return false\n          }\n        } else {\n          console.log('✅ [DEBUG] Using existing currentSession:', currentSession.session_id)\n        }\n\n        // 立即添加用户消息到界面\n        const userMessage: ChatMessage = {\n          role: 'user',\n          content: String(message || ''), // 确保content是字符串\n          timestamp: new Date().toISOString()\n        }\n\n        set(state => ({\n          messages: [...state.messages, userMessage],\n          isTyping: true,\n          error: null,\n          networkStatus: 'checking',\n          retryCount: 0\n        }))\n\n        // 创建重试处理器 - 最多重试2次，网络错误时重试\n        const retryHandler = createRetryHandler(2, 1500)\n        \n        try {\n          const sendMessageWithRetry = async () => {\n            // 添加超时机制，45秒后超时 (给重试留出时间)\n            const timeoutPromise = new Promise((_, reject) => {\n              setTimeout(() => reject(new Error('TIMEOUT')), 45000)\n            })\n            \n            // 发送消息到后端\n            console.log('📤 [DEBUG] Calling aiApi.sendChatMessage with:', {\n              message,\n              sessionId: currentSession.session_id,\n              aiMode: currentSession.ai_mode,\n              sessionType: currentSession.session_type\n            })\n            \n            const messagePromise = aiApi.sendChatMessage(\n              message,\n              currentSession.session_id,\n              currentSession.ai_mode,\n              currentSession.session_type\n            )\n            \n            return await Promise.race([messagePromise, timeoutPromise]) as any\n          }\n          \n          const aiResponse = await retryHandler(sendMessageWithRetry, 'ai-chat')\n          \n          // 构建AI回复消息\n          const assistantMessage: ChatMessage = {\n            role: 'assistant',\n            content: String(aiResponse.response || ''), // 确保content是字符串\n            timestamp: new Date().toISOString()\n          }\n          \n          // 成功后重置状态\n          set(state => ({\n            messages: [...state.messages, assistantMessage],\n            isTyping: false,\n            error: null,\n            networkStatus: 'connected',\n            retryCount: 0\n          }))\n          \n          // 实时更新统计数据\n          if (aiResponse.cost_usd > 0) {\n            get().updateUsageStatsRealtime(aiResponse.cost_usd, aiResponse.tokens_used || 0)\n            \n            // 显示消耗信息\n            toast.success(`AI回复完成 (消耗 $${aiResponse.cost_usd.toFixed(4)})`, {\n              icon: '🧠',\n              duration: 3000\n            })\n          }\n          \n          return true\n        } catch (error: any) {\n          // 确保UI状态总是被正确重置\n          const resetUIState = () => {\n            set(state => ({ \n              isTyping: false,\n              networkStatus: 'disconnected',\n              retryCount: state.retryCount + 1\n            }))\n          }\n\n          // 处理不同类型的错误\n          const appError = errorHandler.handle(error, 'ai-chat-send', false)\n          \n          let userFriendlyMessage = ''\n          let shouldShowRetryOption = false\n          \n          switch (appError.type) {\n            case ErrorType.NETWORK:\n              userFriendlyMessage = 'AI服务暂时不可用，请检查网络连接'\n              shouldShowRetryOption = true\n              break\n              \n            case ErrorType.SERVER:\n              if (appError.code === 504) {\n                userFriendlyMessage = 'Claude AI服务繁忙，请稍后重试'\n                shouldShowRetryOption = true\n              } else {\n                userFriendlyMessage = 'AI服务器错误，请稍后再试'\n              }\n              break\n              \n            case ErrorType.AUTH:\n              userFriendlyMessage = 'AI使用权限不足，请检查会员状态'\n              break\n              \n            default:\n              if (error.message === 'TIMEOUT') {\n                userFriendlyMessage = 'AI响应超时，服务可能繁忙'\n                shouldShowRetryOption = true\n              } else if (error.message?.includes('AI回复超时')) {\n                userFriendlyMessage = 'AI回复超时，请稍后重试'\n                shouldShowRetryOption = true\n              } else {\n                userFriendlyMessage = appError.message || '发送消息失败'\n              }\n          }\n          \n          // 重置UI状态\n          resetUIState()\n          \n          // 设置错误状态\n          set({ error: userFriendlyMessage })\n          \n          // 显示错误提示\n          toast.error(userFriendlyMessage, {\n            duration: shouldShowRetryOption ? 8000 : 5000,\n            icon: shouldShowRetryOption ? '🔄' : '❌',\n            id: `ai-error-${Date.now()}`\n          })\n          \n          // 如果支持重试，显示额外的重试提示\n          if (shouldShowRetryOption) {\n            setTimeout(() => {\n              toast('可尝试重新发送消息或检查网络连接', {\n                icon: '💡',\n                duration: 6000,\n                style: {\n                  background: '#FEF3C7',\n                  color: '#92400E',\n                  border: '1px solid #FCD34D'\n                }\n              })\n            }, 1000)\n          }\n          \n          return false\n        }\n      },\n\n      // 更新会话状态\n      updateSessionStatus: async (sessionId: string, status: SessionStatus, progress?: number) => {\n        try {\n          await aiApi.updateSessionStatus(sessionId, status, progress)\n          \n          // 更新本地状态\n          set(state => {\n            const updatedSessions = { ...state.chatSessions }\n            Object.keys(updatedSessions).forEach(mode => {\n              updatedSessions[mode as AIMode] = updatedSessions[mode as AIMode].map(session => \n                session.session_id === sessionId \n                  ? { ...session, status, progress: progress ?? session.progress }\n                  : session\n              )\n            })\n            \n            return {\n              chatSessions: updatedSessions,\n              currentSession: state.currentSession?.session_id === sessionId\n                ? { ...state.currentSession, status, progress: progress ?? state.currentSession.progress }\n                : state.currentSession\n            }\n          })\n          \n          toast.success('会话状态更新成功')\n          return true\n        } catch (error: any) {\n          const message = error.response?.data?.message || '更新会话状态失败'\n          toast.error(message)\n          return false\n        }\n      },\n\n      // 删除聊天会话\n      deleteChatSession: async (sessionId: string) => {\n        try {\n          await aiApi.deleteSession(sessionId)\n          \n          set(state => {\n            const updatedSessions = { ...state.chatSessions }\n            Object.keys(updatedSessions).forEach(mode => {\n              updatedSessions[mode as AIMode] = updatedSessions[mode as AIMode].filter(s => s.session_id !== sessionId)\n            })\n            \n            return {\n              chatSessions: updatedSessions,\n              currentSession: state.currentSession?.session_id === sessionId ? null : state.currentSession,\n              messages: state.currentSession?.session_id === sessionId ? [] : state.messages\n            }\n          })\n          \n          toast.success('会话删除成功')\n          return true\n        } catch (error: any) {\n          const message = error.response?.data?.message || '删除会话失败'\n          toast.error(message)\n          return false\n        }\n      },\n\n      // 加载使用统计\n      loadUsageStats: async (days: number = 30) => {\n        set({ isLoading: true, error: null })\n        try {\n          const stats = await aiApi.getUsageStats(days)\n          set({ \n            usageStats: stats,\n            isLoading: false \n          })\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '获取使用统计失败')\n          set({ error: message, isLoading: false })\n          console.error('Load usage stats error:', error)\n        }\n      },\n\n      // 实时更新使用统计\n      updateUsageStatsRealtime: (costUsd: number, tokensUsed: number) => {\n        set(state => {\n          if (!state.usageStats) {\n            // 如果还没有统计数据，创建初始结构\n            return {\n              usageStats: {\n                period_days: 1,\n                total_requests: 1,\n                total_cost_usd: costUsd,\n                daily_cost_usd: costUsd,\n                monthly_cost_usd: costUsd,\n                remaining_daily_quota: 1000,\n                remaining_monthly_quota: 30000,\n                by_feature: {},\n                by_session: {}\n              }\n            }\n          }\n\n          // 更新现有统计数据\n          return {\n            usageStats: {\n              ...state.usageStats,\n              total_requests: (state.usageStats.total_requests || 0) + 1,\n              total_cost_usd: (state.usageStats.total_cost_usd || 0) + costUsd,\n              daily_cost_usd: (state.usageStats.daily_cost_usd || 0) + costUsd,\n              monthly_cost_usd: (state.usageStats.monthly_cost_usd || 0) + costUsd\n            }\n          }\n        })\n\n        console.log(`💰 [AIStore] 实时更新统计: +$${costUsd.toFixed(4)}, +${tokensUsed} tokens`)\n      },\n\n      // 清空当前消息\n      clearCurrentMessages: () => {\n        set({ messages: [], currentSession: null })\n      },\n\n      // =============== 策略生成功能 ===============\n\n      // 生成交易策略\n      generateStrategy: async (request: StrategyGenerationRequest) => {\n        set({ isGenerating: true, error: null })\n        try {\n          const apiResponse = await aiApi.generateStrategy(request)\n          \n          // Transform API response to GeneratedStrategy interface\n          const strategy: GeneratedStrategy = {\n            name: request.description.split(' ').slice(0, 3).join(' ') + ' Strategy',\n            description: request.description,\n            code: apiResponse.code,\n            explanation: apiResponse.explanation,\n            parameters: apiResponse.parameters,\n            risk_assessment: {\n              level: request.risk_level || 'medium',\n              factors: apiResponse.warnings || [],\n              recommendations: ['Review and test thoroughly before live trading']\n            }\n          }\n          \n          set(state => ({\n            generatedStrategies: [strategy, ...state.generatedStrategies],\n            currentGeneratedStrategy: strategy,\n            isGenerating: false\n          }))\n          toast.success('策略生成成功')\n          return strategy\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '策略生成失败')\n          set({ error: message, isGenerating: false })\n          toast.error(message)\n          return null\n        }\n      },\n\n      // 优化策略代码 - 使用Chat API实现\n      optimizeStrategy: async (code: string, objectives: string[]) => {\n        set({ isLoading: true, error: null })\n        try {\n          const prompt = `请优化以下策略代码，优化目标：${objectives.join(', ')}\\n\\n代码：\\n${code}`\n          const result = await aiApi.sendChatMessage(prompt, undefined, 'developer', 'strategy')\n          set({ isLoading: false })\n          toast.success('策略优化完成')\n          return {\n            code: result.response,\n            explanation: '通过AI聊天优化生成',\n            improvements: objectives\n          }\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '策略优化失败')\n          set({ error: message, isLoading: false })\n          toast.error(message)\n          throw error\n        }\n      },\n\n      // 解释策略代码 - 使用Chat API实现\n      explainStrategy: async (code: string) => {\n        set({ isLoading: true, error: null })\n        try {\n          const prompt = `请详细解释以下策略代码的逻辑和功能：\\n\\n${code}`\n          const result = await aiApi.sendChatMessage(prompt, undefined, 'developer', 'strategy')\n          set({ isLoading: false })\n          return {\n            explanation: result.response,\n            complexity: 'medium',\n            features: []\n          }\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '策略解释失败')\n          set({ error: message, isLoading: false })\n          toast.error(message)\n          throw error\n        }\n      },\n\n      // 清空生成的策略\n      clearGeneratedStrategies: () => {\n        set({ \n          generatedStrategies: [], \n          currentGeneratedStrategy: null \n        })\n      },\n\n      // =============== 市场分析功能 ===============\n\n      // 分析市场数据\n      analyzeMarket: async (symbol: string, exchange: string, timeframe: string) => {\n        const key = `${symbol}-${timeframe}`\n        set({ isAnalyzing: true, error: null })\n        \n        try {\n          const apiResponse = await aiApi.analyzeMarket({\n            symbols: [symbol],\n            timeframe: timeframe,\n            analysis_type: 'technical'\n          })\n          \n          // Transform API response to MarketAnalysis format\n          const analysis: MarketAnalysis = {\n            symbol: symbol,\n            timeframe: timeframe,\n            trend_direction: 'neutral', // Default, could be parsed from summary\n            strength: 0.5, // Default, could be calculated from signals\n            support_levels: [],\n            resistance_levels: [],\n            technical_indicators: apiResponse.risk_assessment || {},\n            summary: apiResponse.summary,\n            recommendations: apiResponse.recommendations,\n            confidence: 0.75 // Default confidence\n          }\n          \n          set(state => ({\n            marketAnalyses: {\n              ...state.marketAnalyses,\n              [key]: analysis\n            },\n            isAnalyzing: false\n          }))\n          toast.success(`${symbol} 市场分析完成`)\n          return analysis\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '市场分析失败')\n          set({ error: message, isAnalyzing: false })\n          toast.error(message)\n          return null\n        }\n      },\n\n      // 获取交易信号 - 使用市场分析API实现\n      getTradingSignals: async (symbol: string, exchange: string, timeframes: string[]) => {\n        set({ isLoading: true, error: null })\n        try {\n          const signals = []\n          for (const timeframe of timeframes) {\n            const analysis = await aiApi.analyzeMarket({\n              symbols: [symbol],\n              timeframe: timeframe,\n              analysis_type: 'technical'\n            })\n            signals.push({\n              symbol,\n              timeframe,\n              signals: analysis.signals || [],\n              summary: analysis.summary,\n              recommendations: analysis.recommendations\n            })\n          }\n          set({ isLoading: false })\n          toast.success(`${symbol} 交易信号获取成功`)\n          return signals\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '获取交易信号失败')\n          set({ error: message, isLoading: false })\n          toast.error(message)\n          throw error\n        }\n      },\n\n      // 风险评估 - 使用市场分析API实现\n      assessRisk: async (strategyCode?: string, portfolio?: any) => {\n        set({ isLoading: true, error: null })\n        try {\n          const prompt = strategyCode ? \n            `请评估以下策略代码的风险：\\n${strategyCode}` :\n            `请评估以下投资组合的风险：\\n${JSON.stringify(portfolio, null, 2)}`\n          \n          const result = await aiApi.sendChatMessage(prompt, undefined, 'trader', 'strategy')\n          const assessment = {\n            riskLevel: 'medium',\n            riskFactors: ['市场波动风险', '流动性风险'],\n            recommendations: result.response.split('\\n').filter(line => line.trim()),\n            score: 0.6\n          }\n          set({ isLoading: false })\n          toast.success('风险评估完成')\n          return assessment\n        } catch (error: any) {\n          const message = String(error.response?.data?.message || '风险评估失败')\n          set({ error: message, isLoading: false })\n          toast.error(message)\n          throw error\n        }\n      },\n\n      // =============== 工具方法 ===============\n\n      // 清空错误\n      clearError: () => {\n        set({ error: null })\n      },\n\n      // 重置所有状态\n      reset: () => {\n        set({\n          currentAIMode: 'developer' as AIMode,\n          chatSessions: {\n            developer: [],\n            trader: []\n          },\n          currentSession: null,\n          messages: [],\n          isTyping: false,\n          generatedStrategies: [],\n          isGenerating: false,\n          currentGeneratedStrategy: null,\n          marketAnalyses: {},\n          isAnalyzing: false,\n          usageStats: null,\n          isLoading: false,\n          error: null,\n          networkStatus: 'connected',\n          retryCount: 0\n        })\n      },\n\n      // =============== WebSocket方法 ===============\n\n      // 切换WebSocket/HTTP模式\n      toggleWebSocket: () => {\n        set(state => ({ \n          useWebSocket: !state.useWebSocket,\n          aiProgress: null\n        }))\n        \n        const { useWebSocket } = get()\n        toast.success(useWebSocket ? '已切换到WebSocket模式 (实时对话)' : '已切换到HTTP模式')\n      },\n\n      // 初始化WebSocket连接\n      initializeWebSocket: async () => {\n        const { useWebSocket } = get()\n        if (!useWebSocket) {\n          console.log('🔄 [AIStore] WebSocket未启用，跳过初始化')\n          return false\n        }\n\n        try {\n          set({ isLoading: true, error: null })\n          \n          // 从authStore获取token - 修复键名问题\n          const authData = localStorage.getItem('auth-storage')\n          if (!authData) {\n            throw new Error('未找到认证信息，请重新登录')\n          }\n          \n          const authStore = JSON.parse(authData)\n          const token = authStore?.state?.token || ''\n          const isAuthenticated = authStore?.state?.isAuthenticated || false\n          \n          if (!token || !isAuthenticated) {\n            throw new Error('认证token无效或已过期，请重新登录')\n          }\n          \n          console.log('🔗 [AIStore] 开始初始化WebSocket连接...')\n          console.log('🔑 [AIStore] 使用token:', token.substring(0, 20) + '...')\n          \n          // 使用当前域名作为baseUrl，不需要协议转换\n          const wsService = getWebSocketAIService({\n            baseUrl: window.location.origin, // 保持http/https协议\n            token\n          })\n          \n          console.log('🔄 [AIStore] WebSocket服务实例已创建，开始连接...')\n          \n          const connected = await wsService.initialize()\n          \n          if (connected) {\n            const status = wsService.getConnectionStatus()\n            console.log('✅ [AIStore] WebSocket连接成功:', status)\n            \n            set({ \n              wsConnected: true,\n              wsConnectionId: status.connectionId,\n              isLoading: false,\n              networkStatus: 'connected'\n            })\n            \n            toast.success('🌊 WebSocket AI服务连接成功!', { \n              icon: '🔗',\n              duration: 3000\n            })\n            return true\n          } else {\n            throw new Error('WebSocket连接失败')\n          }\n        } catch (error: any) {\n          const errorMessage = String(error?.message || error || 'WebSocket连接失败')\n          console.error('❌ [AIStore] WebSocket初始化失败:', error)\n          \n          set({ \n            wsConnected: false,\n            wsConnectionId: null,\n            error: errorMessage,\n            isLoading: false,\n            networkStatus: 'disconnected'\n          })\n          \n          // 如果是认证相关错误，提供更友好的提示\n          if (errorMessage.includes('认证') || errorMessage.includes('登录')) {\n            toast.error(`🔐 ${errorMessage}`, {\n              icon: '🔑',\n              duration: 6000\n            })\n          } else {\n            toast.error(`🔌 WebSocket连接失败: ${errorMessage}`, {\n              icon: '❌',\n              duration: 5000\n            })\n          }\n          return false\n        }\n      },\n\n      // WebSocket发送消息\n      sendMessageWebSocket: async (message: string) => {\n        const { currentSession, currentAIMode, useWebSocket, wsConnected } = get()\n        \n        if (!useWebSocket) {\n          // 回退到HTTP模式\n          return get().sendMessage(message)\n        }\n        \n        if (!wsConnected) {\n          // 尝试重新连接\n          const connected = await get().initializeWebSocket()\n          if (!connected) {\n            toast.error('WebSocket未连接，请检查网络连接')\n            return false\n          }\n        }\n\n        // 确保有会话\n        if (!currentSession) {\n          const defaultSessionName = currentAIMode === 'trader' ? '市场分析对话' : '策略开发对话'\n          const success = await get().createChatSession({\n            name: defaultSessionName,\n            ai_mode: currentAIMode,\n            session_type: 'strategy',\n            description: '自动创建的WebSocket对话会话'\n          })\n          \n          if (!success) {\n            toast.error('创建对话会话失败')\n            return false\n          }\n        }\n\n        // 立即添加用户消息\n        set(state => {\n          const safeUserMessage: ChatMessage = {\n            role: 'user',\n            content: String(message || ''), // 确保content是字符串\n            timestamp: new Date().toISOString()\n          }\n\n          return {\n            messages: [...state.messages, safeUserMessage],\n            isTyping: true,\n            error: null,\n            aiProgress: {\n              isProcessing: true,\n              step: 0,\n              totalSteps: 4,\n              status: 'preparing',\n              message: '正在准备发送...'\n            }\n          }\n        })\n\n        try {\n          // 从authStore获取token - 使用正确的键名\n          const authData = localStorage.getItem('auth-storage')\n          if (!authData) {\n            throw new Error('认证信息丢失，请重新登录')\n          }\n          \n          const authStore = JSON.parse(authData)\n          const token = authStore?.state?.token || ''\n          if (!token) {\n            throw new Error('认证token无效，请重新登录')\n          }\n          \n          const wsService = getWebSocketAIService({\n            baseUrl: window.location.origin,\n            token\n          })\n\n          const session = get().currentSession!\n          \n          // 发送WebSocket消息并处理回调\n          await wsService.sendChatMessage(\n            message,\n            session.session_id,\n            session.ai_mode,\n            session.session_type,\n            {\n              onStart: (data) => {\n                set(state => ({\n                  aiProgress: {\n                    ...state.aiProgress!,\n                    status: 'started',\n                    message: data.message || 'AI开始处理...'\n                  }\n                }))\n              },\n\n              onComplexityAnalysis: (data) => {\n                set(state => ({\n                  aiProgress: {\n                    ...state.aiProgress!,\n                    complexity: data.complexity,\n                    estimatedTime: data.estimated_time_seconds,\n                    message: data.message\n                  }\n                }))\n              },\n\n              onProgress: (data) => {\n                set(state => ({\n                  aiProgress: {\n                    ...state.aiProgress!,\n                    step: data.step,\n                    totalSteps: data.total_steps,\n                    status: data.status,\n                    message: data.message\n                  }\n                }))\n              },\n\n              onSuccess: (data) => {\n                // 确保response是字符串\n                let responseContent: string;\n                if (typeof data.response === 'string' && data.response) {\n                  responseContent = data.response;\n                } else if (data.response && typeof data.response === 'object') {\n                  // 安全地访问对象属性\n                  const responseObj = data.response as any;\n                  responseContent = responseObj.content || responseObj.message || JSON.stringify(responseObj);\n                } else if (data.message) {\n                  responseContent = String(data.message);\n                } else {\n                  responseContent = 'AI响应错误';\n                }\n                \n                // 确保responseContent始终是字符串\n                responseContent = String(responseContent || 'AI响应为空');\n                \n                const assistantMessage: ChatMessage = {\n                  role: 'assistant', \n                  content: responseContent,\n                  timestamp: new Date().toISOString()\n                }\n                \n                // 只有在有代码块时才添加metadata\n                if (responseContent && responseContent.includes('```')) {\n                  assistantMessage.metadata = {\n                    codeBlock: responseContent\n                  }\n                }\n\n                set(state => {\n                  // 确保assistantMessage是纯粹的对象，没有循环引用\n                  const safeMessage: ChatMessage = {\n                    role: 'assistant',\n                    content: String(assistantMessage.content),\n                    timestamp: String(assistantMessage.timestamp)\n                  }\n                  \n                  if (assistantMessage.metadata) {\n                    safeMessage.metadata = {\n                      codeBlock: String(assistantMessage.metadata.codeBlock || '')\n                    }\n                  }\n                  \n                  return {\n                    messages: [...state.messages, safeMessage],\n                    isTyping: false,\n                    aiProgress: null\n                  }\n                })\n\n                // 实时更新统计数据\n                if (data.cost_usd > 0) {\n                  get().updateUsageStatsRealtime(data.cost_usd, data.tokens_used || 0)\n                  \n                  toast.success(`AI回复完成 (消耗 $${data.cost_usd.toFixed(4)}, ${data.tokens_used} tokens)`, {\n                    icon: '🚀',\n                    duration: 4000\n                  })\n                }\n              },\n\n              // 🌊 流式AI回调处理\n              onStreamStart: (data) => {\n                console.log('🌊 [AIStore] 流式开始:', data)\n                \n                // 添加一个包含等待提示的assistant消息，准备接收流式内容\n                set(state => {\n                  const streamingMessage: ChatMessage = {\n                    role: 'assistant',\n                    content: '🤔 AI正在深度思考中，马上开始回复...',  // 给用户友好的等待提示\n                    timestamp: new Date().toISOString(),\n                    metadata: {\n                      isStreaming: true,\n                      isWaitingFirstChunk: true  // 标记为等待第一个数据块\n                    }\n                  }\n                  \n                  return {\n                    messages: [...state.messages, streamingMessage],\n                    isTyping: false,  // 不显示传统的\"正在思考\"\n                    streamingMessage: {\n                      isStreaming: true,\n                      requestId: data.request_id,\n                      accumulatedContent: '',\n                      messageIndex: state.messages.length  // 新消息的索引\n                    },\n                    aiProgress: {\n                      ...state.aiProgress!,\n                      status: 'stream_waiting',\n                      message: '🌊 AI正在深度分析，即将开始流式回复...'\n                    }\n                  }\n                })\n              },\n              \n              onStreamChunk: (data) => {\n                console.log('📝 [AIStore] 流式数据块:', data.chunk)\n                \n                set(state => {\n                  const { streamingMessage } = state\n                  if (!streamingMessage?.isStreaming || streamingMessage.messageIndex === undefined) {\n                    return state\n                  }\n                  \n                  // 更新消息数组中对应的消息\n                  const updatedMessages = [...state.messages]\n                  let newAccumulatedContent = streamingMessage.accumulatedContent\n                  \n                  if (updatedMessages[streamingMessage.messageIndex]) {\n                    const currentMessage = updatedMessages[streamingMessage.messageIndex]\n                    const isFirstChunk = currentMessage.metadata?.isWaitingFirstChunk\n                    \n                    // 更新累积内容 - 如果是第一个chunk，替换等待提示；否则追加内容\n                    newAccumulatedContent = isFirstChunk ? \n                      data.chunk : \n                      streamingMessage.accumulatedContent + data.chunk\n                    \n                    updatedMessages[streamingMessage.messageIndex] = {\n                      ...currentMessage,\n                      content: newAccumulatedContent,\n                      metadata: {\n                        isStreaming: true,\n                        isWaitingFirstChunk: false  // 清除等待标记\n                      }\n                    }\n                  }\n                  \n                  return {\n                    messages: updatedMessages,\n                    streamingMessage: {\n                      ...streamingMessage,\n                      accumulatedContent: newAccumulatedContent\n                    },\n                    aiProgress: {\n                      ...state.aiProgress!,\n                      status: 'streaming_active',\n                      message: '✍️ AI正在实时生成回复...'\n                    }\n                  }\n                })\n              },\n              \n              onStreamEnd: (data) => {\n                console.log('✅ [AIStore] 流式结束:', data)\n                \n                // 🚨 立即强制触发React组件更新，绕过复杂的状态检查\n                set(state => {\n                  console.log('🚀 [AIStore] 立即强制更新messages数组以触发React重新渲染')\n                  const newMessage = {\n                    role: 'assistant' as const,\n                    content: data.content || '流式消息完成',\n                    timestamp: new Date().toISOString(),\n                    metadata: {\n                      streamCompleted: true,\n                      completedAt: Date.now(),\n                      forceRender: Math.random() // 强制引用变化\n                    }\n                  }\n                  \n                  return {\n                    ...state,\n                    messages: [...state.messages, newMessage],\n                    isTyping: false,\n                    streamingMessage: null,\n                    aiProgress: null\n                  }\n                })\n                \n                // 实时更新统计数据\n                if (data.cost_usd > 0) {\n                  get().updateUsageStatsRealtime(data.cost_usd, data.tokens_used || 0)\n                  \n                  toast.success(`🌊 流式AI回复完成 (消耗 $${data.cost_usd.toFixed(4)}, ${data.tokens_used} tokens)`, {\n                    icon: '🚀',\n                    duration: 4000\n                  })\n                }\n              },\n              \n              onStreamError: (data) => {\n                // 安全的错误对象序列化\n                const safeStringifyError = (error: any): string => {\n                  if (!error) return 'undefined'\n                  if (typeof error === 'string') return error\n                  if (typeof error === 'number' || typeof error === 'boolean') return String(error)\n                  if (typeof error === 'object') {\n                    try {\n                      // 尝试提取常见的错误属性\n                      if (error.message) return error.message\n                      if (error.error) return String(error.error)\n                      if (error.toString && typeof error.toString === 'function') {\n                        const str = error.toString()\n                        if (str !== '[object Object]') return str\n                      }\n                      // 最后尝试JSON.stringify，如果失败则返回默认消息\n                      return JSON.stringify(error, null, 2)\n                    } catch {\n                      return '[Complex Error Object]'\n                    }\n                  }\n                  return String(error)\n                }\n                \n                console.log('❌ [AIStore] 流式错误:', {\n                  error: safeStringifyError(data?.error),\n                  error_type: data?.error_type,\n                  message: data?.message,\n                  request_id: data?.request_id\n                })\n                \n                // 预处理错误数据，确保错误字段是字符串\n                const processedErrorData = {\n                  ...data,\n                  error: safeStringifyError(data?.error),\n                  message: data?.message || safeStringifyError(data?.error) || '流式处理失败'\n                }\n                \n                // 清理流式状态，但不添加错误消息到聊天记录\n                set(state => ({\n                  ...state,\n                  isTyping: false,\n                  streamingMessage: null,  // 清除流式状态\n                  aiProgress: null,\n                  error: processedErrorData.message\n                }))\n                \n                // 使用预处理后的数据生成友好的错误消息\n                const friendlyMessage = get().getErrorMessage(processedErrorData);\n                \n                // 显示用户友好的错误提示\n                toast.error(friendlyMessage, {\n                  duration: 6000,\n                  id: `stream-error-${Date.now()}` // 防止重复toast\n                })\n              },\n\n              onError: (data) => {\n                console.log('❌ [AIStore] onError - 处理AI对话错误:', data);\n                \n                // 安全的错误对象序列化 - 与onStreamError保持一致\n                const safeStringifyError = (error: any): string => {\n                  if (!error) return 'undefined'\n                  if (typeof error === 'string') return error\n                  if (typeof error === 'number' || typeof error === 'boolean') return String(error)\n                  if (typeof error === 'object') {\n                    try {\n                      // 尝试提取常见的错误属性\n                      if (error.message) return error.message\n                      if (error.error) return String(error.error)\n                      if (error.toString && typeof error.toString === 'function') {\n                        const str = error.toString()\n                        if (str !== '[object Object]') return str\n                      }\n                      // 最后尝试JSON.stringify，如果失败则返回默认消息\n                      return JSON.stringify(error, null, 2)\n                    } catch {\n                      return '[Complex Error Object]'\n                    }\n                  }\n                  return String(error)\n                }\n                \n                // 预处理错误数据，确保错误字段是字符串\n                const processedErrorData = {\n                  ...data,\n                  error: safeStringifyError(data?.error),\n                  message: data?.message || safeStringifyError(data?.error) || 'AI处理失败'\n                }\n                \n                // 使用预处理后的数据生成友好的错误消息\n                const friendlyMessage = get().getErrorMessage(processedErrorData);\n                \n                // 添加错误消息到聊天记录\n                const errorMessage_content = `抱歉，${friendlyMessage}`;\n                \n                set(state => {\n                  const safeErrorMessage: ChatMessage = {\n                    role: 'assistant',\n                    content: String(errorMessage_content),\n                    timestamp: new Date().toISOString(),\n                    metadata: {\n                      isError: true\n                    }\n                  }\n                  \n                  return {\n                    messages: [...state.messages, safeErrorMessage],\n                    isTyping: false,\n                    error: String(errorMessage_content),\n                    aiProgress: null\n                  }\n                })\n\n                const errorMsg = data.retry_suggested \n                  ? `${friendlyMessage} (可以重试)` \n                  : friendlyMessage\n                  \n                toast.error(errorMsg, {\n                  duration: data.retry_suggested ? 8000 : 5000,\n                  icon: data.retry_suggested ? '🔄' : '❌'\n                })\n              }\n            }\n          )\n\n          return true\n        } catch (error: any) {\n          console.error('❌ [DEBUG] WebSocket发送异常:', error)\n          console.error('❌ [DEBUG] Error stack:', error.stack)\n          console.error('❌ [DEBUG] Error details:', {\n            message: error.message,\n            name: error.name,\n            type: typeof error,\n            error\n          })\n          \n          set({\n            isTyping: false,\n            error: error.message || 'WebSocket发送失败',\n            aiProgress: null\n          })\n          \n          toast.error(`WebSocket发送失败: ${error.message}`)\n          return false\n        }\n      },\n      \n      // 检查网络连接状态\n      checkNetworkStatus: async () => {\n        try {\n          set({ networkStatus: 'checking' })\n          \n          // 简单的网络连通性检查\n          const controller = new AbortController()\n          const timeoutId = setTimeout(() => controller.abort(), 5000)\n          \n          await fetch('/api/v1/health', {\n            method: 'HEAD',\n            signal: controller.signal\n          })\n          \n          clearTimeout(timeoutId)\n          set({ networkStatus: 'connected' })\n          return true\n        } catch (error) {\n          set({ networkStatus: 'disconnected' })\n          return false\n        }\n      },\n\n      // 生成用户友好的错误消息\n      getErrorMessage: (error: any) => {\n        if (!error) return '未知错误，请重试'\n\n        // 检查错误类型 - 修复对象序列化问题\n        const errorCode = error.error_code || error.code\n        let errorMessage = error.error || error.message || ''\n        \n        // 增强的安全对象序列化函数\n        const safeStringify = (obj: any): string => {\n          if (!obj) return ''\n          if (typeof obj === 'string') return obj\n          if (typeof obj === 'number' || typeof obj === 'boolean') return String(obj)\n          if (typeof obj === 'object') {\n            try {\n              // 优先级1: 提取常见的错误属性\n              if (obj.message && typeof obj.message === 'string') return obj.message\n              if (obj.error && typeof obj.error === 'string') return obj.error\n              if (obj.detail && typeof obj.detail === 'string') return obj.detail\n              if (obj.description && typeof obj.description === 'string') return obj.description\n              \n              // 优先级2: 尝试toString方法\n              if (obj.toString && typeof obj.toString === 'function') {\n                const str = obj.toString()\n                if (str !== '[object Object]' && str !== '[object Error]') return str\n              }\n              \n              // 优先级3: 如果是Error对象，尝试提取name和message\n              if (obj instanceof Error) {\n                return obj.name ? `${obj.name}: ${obj.message}` : obj.message\n              }\n              \n              // 优先级4: 尝试JSON.stringify\n              const jsonStr = JSON.stringify(obj, Object.getOwnPropertyNames(obj), 2)\n              if (jsonStr && jsonStr !== '{}' && jsonStr !== 'null' && jsonStr !== '[]') {\n                return jsonStr\n              }\n              \n              // 最后的fallback - 空对象或无有效信息的对象\n              return ''\n            } catch {\n              return '[Serialization Error]'\n            }\n          }\n          return String(obj)\n        }\n        \n        errorMessage = safeStringify(errorMessage)\n        \n        // 基于错误码的友好提示\n        switch (errorCode) {\n          case 'WEBSOCKET_TIMEOUT':\n            return '⏰ AI响应超时，请重试或检查网络连接'\n          case 'WEBSOCKET_DISCONNECTED':\n            return '🔌 连接断开，正在重新连接...'\n          case 'WEBSOCKET_ERROR':\n            return '📡 网络连接出现问题，请检查网络设置'\n          case 'AI_PROCESSING_FAILED':\n            return '🤖 AI处理失败，请稍后重试'\n          case 'RATE_LIMIT_EXCEEDED':\n            return '⚡ 请求过于频繁，请稍等片刻再试'\n          case 'INSUFFICIENT_CREDITS':\n            return '💳 AI对话额度不足，请升级会员'\n          case 'INVALID_SESSION':\n            return '🔄 会话已过期，将为您创建新会话'\n        }\n\n        // 基于错误消息内容的智能识别\n        if (errorMessage.includes('timeout') || errorMessage.includes('超时')) {\n          return '⏰ 请求超时，请重试'\n        }\n        if (errorMessage.includes('network') || errorMessage.includes('网络')) {\n          return '📡 网络连接异常，请检查网络设置'\n        }\n        if (errorMessage.includes('quota') || errorMessage.includes('额度')) {\n          return '💳 AI对话额度已用尽，请明日再试或升级会员'\n        }\n        if (errorMessage.includes('session') || errorMessage.includes('会话')) {\n          return '🔄 会话异常，请刷新页面重试'\n        }\n        if (errorMessage.includes('auth') || errorMessage.includes('认证')) {\n          return '🔐 身份认证失败，请重新登录'\n        }\n        if (errorMessage.includes('busy') || errorMessage.includes('繁忙') || errorMessage.includes('服务繁忙')) {\n          return '🚀 AI服务繁忙，请稍后重试'\n        }\n        if (errorMessage.includes('unavailable') || errorMessage.includes('不可用')) {\n          return '⚠️ AI服务暂时不可用，请稍后重试'\n        }\n\n        // 检查是否是空错误或无用信息\n        if (!errorMessage || errorMessage.trim() === '' || \n            errorMessage === 'undefined' || errorMessage === 'null' ||\n            errorMessage === '[object Object]' || errorMessage === '[object Error]') {\n          return '⚠️ 服务暂时不可用，请稍后重试'\n        }\n\n        // 返回清理后的错误消息\n        const cleanErrorMessage = errorMessage.replace(/^(Error:|ERROR:|错误:)\\s*/i, '').trim()\n        if (cleanErrorMessage) {\n          return `❌ ${cleanErrorMessage}`\n        }\n\n        return '⚠️ 服务暂时不可用，请稍后重试'\n      },\n\n      // =============== 新增：回测相关方法 ===============\n\n      // 获取AI会话最新生成的策略\n      getLatestAIStrategy: async (sessionId: string) => {\n        set({ isLoading: true, error: null })\n        try {\n          const strategy = await aiApi.getLatestAIStrategy(sessionId)\n          set({ \n            generatedStrategy: strategy,\n            isLoading: false \n          })\n          return strategy\n        } catch (error: any) {\n          const message = get().getErrorMessage(error)\n          set({ error: message, isLoading: false })\n          toast.error(`获取策略失败: ${message}`)\n          return null\n        }\n      },\n\n      // 自动触发回测\n      autoBacktest: async (config: AutoBacktestConfig) => {\n        set({ isBacktestRunning: true, backtestProgress: null, error: null })\n        try {\n          const result = await aiApi.autoBacktest(config)\n          \n          if (result.success && result.task_id) {\n            // 开始监控回测进度\n            get().startBacktestMonitoring(result.task_id)\n            \n            toast.success('回测已启动，正在后台运行...', {\n              icon: '🚀',\n              duration: 4000\n            })\n            return true\n          } else {\n            throw new Error(result.message || '回测启动失败')\n          }\n        } catch (error: any) {\n          const message = get().getErrorMessage(error)\n          set({ \n            isBacktestRunning: false, \n            error: message \n          })\n          toast.error(`回测启动失败: ${message}`)\n          return false\n        }\n      },\n\n      // 获取回测进度\n      getBacktestProgress: async (taskId: string) => {\n        try {\n          const progress = await aiApi.getBacktestProgress(taskId)\n          set({ backtestProgress: progress })\n          return progress\n        } catch (error: any) {\n          const message = get().getErrorMessage(error)\n          console.error('获取回测进度失败:', message)\n          return null\n        }\n      },\n\n      // 获取回测结果\n      getBacktestResults: async (taskId: string) => {\n        try {\n          const results = await aiApi.getBacktestResults(taskId)\n          set({ \n            backtestResults: results,\n            showBacktestResults: true,\n            isBacktestRunning: false\n          })\n          return results\n        } catch (error: any) {\n          const message = get().getErrorMessage(error)\n          set({ error: message, isBacktestRunning: false })\n          toast.error(`获取回测结果失败: ${message}`)\n          return null\n        }\n      },\n\n      // 开始回测进度监控\n      startBacktestMonitoring: (taskId: string) => {\n        // 清除之前的定时器\n        const state = get()\n        if ((state as any).backtestMonitorInterval) {\n          clearInterval((state as any).backtestMonitorInterval)\n        }\n\n        const monitorInterval = setInterval(async () => {\n          try {\n            const progress = await get().getBacktestProgress(taskId)\n            \n            if (progress) {\n              if (progress.status === 'completed') {\n                clearInterval(monitorInterval)\n                await get().getBacktestResults(taskId)\n                toast.success('🎉 回测完成！', {\n                  icon: '✅',\n                  duration: 5000\n                })\n              } else if (progress.status === 'failed') {\n                clearInterval(monitorInterval)\n                set({ \n                  isBacktestRunning: false,\n                  error: progress.error_message || '回测执行失败'\n                })\n                toast.error(`回测失败: ${progress.error_message || '未知错误'}`)\n              }\n            }\n          } catch (error) {\n            console.error('监控回测进度时出错:', error)\n            // 不中断监控，继续尝试\n          }\n        }, 3000) // 每3秒检查一次\n\n        // 保存定时器引用以便清理\n        ;(get() as any).backtestMonitorInterval = monitorInterval\n\n        // 设置超时清理（30分钟后停止监控）\n        setTimeout(() => {\n          clearInterval(monitorInterval)\n          const currentState = get()\n          if (currentState.isBacktestRunning) {\n            set({ \n              isBacktestRunning: false,\n              error: '回测监控超时，请手动刷新查看结果'\n            })\n            toast.error('回测监控超时，请刷新页面查看结果')\n          }\n        }, 30 * 60 * 1000) // 30分钟\n      },\n\n      // 停止回测监控\n      stopBacktestMonitoring: () => {\n        const state = get() as any\n        if (state.backtestMonitorInterval) {\n          clearInterval(state.backtestMonitorInterval)\n          delete state.backtestMonitorInterval\n        }\n        set({ isBacktestRunning: false })\n      },\n\n      // 处理策略生成后的逻辑\n      handleStrategyGenerated: async (sessionId: string) => {\n        try {\n          // 获取最新生成的策略\n          const strategy = await get().getLatestAIStrategy(sessionId)\n          \n          if (strategy) {\n            // 显示回测提示\n            set({ showBacktestPrompt: true })\n            \n            toast.success('🎯 策略生成完成！现在可以配置回测参数了', {\n              icon: '🚀',\n              duration: 6000\n            })\n          }\n        } catch (error: any) {\n          console.error('处理策略生成后逻辑失败:', error)\n        }\n      },\n\n      // 处理快速回测\n      handleQuickBacktest: async (config: Partial<AutoBacktestConfig>) => {\n        const { currentSession, generatedStrategy } = get()\n        \n        if (!currentSession || !generatedStrategy) {\n          toast.error('缺少会话或策略信息，无法启动回测')\n          return\n        }\n\n        // 构建完整的回测配置\n        const fullConfig: AutoBacktestConfig = {\n          ai_session_id: currentSession.session_id,\n          strategy_code: generatedStrategy.code,\n          strategy_name: generatedStrategy.name,\n          auto_config: true,\n          exchange: 'binance',\n          symbols: ['BTC/USDT'],\n          timeframes: ['1h'],\n          initial_capital: 10000,\n          start_date: '2024-01-01',\n          end_date: '2024-12-31',\n          fee_rate: 'vip0',\n          ...config // 覆盖用户自定义配置\n        }\n\n        // 启动回测\n        const success = await get().autoBacktest(fullConfig)\n        \n        if (success) {\n          // 隐藏回测提示，显示进度\n          set({ showBacktestPrompt: false })\n        }\n      },\n\n      // 设置回测提示显示状态\n      setShowBacktestPrompt: (show: boolean) => {\n        set({ showBacktestPrompt: show })\n      },\n\n      // 设置回测结果显示状态\n      setShowBacktestResults: (show: boolean) => {\n        set({ showBacktestResults: show })\n      }\n    }),\n    {\n      name: 'ai-storage',\n      // 只持久化需要的数据，避免存储过多临时状态\n      partialize: (state) => ({\n        currentAIMode: state.currentAIMode,\n        chatSessions: state.chatSessions,\n        generatedStrategies: state.generatedStrategies,\n        marketAnalyses: state.marketAnalyses,\n        usageStats: state.usageStats\n      }),\n    }\n  )\n)","/**\n * 实盘交易API接口\n * 对接后端交易服务的完整API\n */\n\nimport { tradingServiceClient, handleApiResponse, handleApiError } from './client'\n\n// 交易相关类型定义\nexport interface TradingAccount {\n  user_id: number\n  exchange: string\n  api_key_configured: boolean\n  balance: {\n    [currency: string]: {\n      total: number\n      free: number\n      used: number\n    }\n  }\n  last_updated: string\n}\n\nexport interface OrderRequest {\n  exchange: string\n  symbol: string\n  order_type: 'market' | 'limit'\n  side: 'buy' | 'sell'\n  amount: number\n  price?: number\n}\n\nexport interface Order {\n  id: string\n  user_id: number\n  exchange: string\n  symbol: string\n  side: 'buy' | 'sell'\n  order_type: 'market' | 'limit'\n  quantity: number\n  price?: number\n  filled_quantity: number\n  remaining_quantity: number\n  avg_fill_price: number\n  status: 'pending' | 'submitted' | 'open' | 'filled' | 'canceled' | 'rejected' | 'failed'\n  exchange_order_id?: string\n  created_at: string\n  updated_at: string\n  fees: number\n  error_message?: string\n}\n\nexport interface Position {\n  symbol: string\n  exchange: string\n  quantity: number\n  avg_cost: number\n  total_cost: number\n  current_value: number\n  unrealized_pnl: number\n  realized_pnl: number\n  total_pnl: number\n  pnl_percent: number\n  trade_count: number\n  first_trade_at: string\n  last_trade_at: string\n}\n\nexport interface TradingSummary {\n  period_days: number\n  total_trades: number\n  buy_trades: number\n  sell_trades: number\n  total_volume: number\n  total_fees: number\n  profit_trades: number\n  loss_trades: number\n  win_rate: number\n  total_pnl: number\n  avg_trade_size: number\n  largest_win: number\n  largest_loss: number\n  trading_symbols: string[]\n  exchanges_used: string[]\n}\n\nexport interface DailyPnL {\n  date: string\n  trades_count: number\n  volume: number\n  fees: number\n  pnl: number\n  cumulative_pnl: number\n}\n\nexport interface TradingSession {\n  id: string\n  user_id: number\n  strategy_id?: number\n  exchange: string\n  symbols: string[]\n  status: 'inactive' | 'active' | 'paused' | 'stopping' | 'stopped' | 'error'\n  execution_mode: 'manual' | 'semi_auto' | 'full_auto'\n  max_daily_trades: number\n  max_open_positions: number\n  total_trades: number\n  daily_pnl: number\n  created_at: string\n  started_at?: string\n  error_message?: string\n}\n\nexport interface OrderStatistics {\n  period_days: number\n  active_orders_count: number\n  total_orders: number\n  filled_orders: number\n  canceled_orders: number\n  failed_orders: number\n  fill_rate: number\n  total_volume: number\n  total_fees: number\n  symbols_traded: string[]\n  exchanges_used: string[]\n  avg_order_size: number\n}\n\nexport interface RiskAssessment {\n  approved: boolean\n  risk_level: 'low' | 'medium' | 'high' | 'critical'\n  risk_score: number\n  violations: string[]\n  warnings: string[]\n  suggested_position_size?: number\n  max_allowed_size?: number\n}\n\n/**\n * 实盘交易API服务类\n */\nexport const tradingApi = {\n  // 账户管理\n  async getAccountBalance(exchange: string): Promise<TradingAccount> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/accounts/${exchange}/balance`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getSupportedExchanges(): Promise<string[]> {\n    try {\n      const response = await tradingServiceClient.get('/trading/exchanges')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getSymbols(exchange: string): Promise<string[]> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/exchanges/${exchange}/symbols`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 订单管理\n  async createOrder(orderData: OrderRequest): Promise<Order> {\n    try {\n      const response = await tradingServiceClient.post('/trading/orders', orderData)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getOrders(params?: {\n    exchange?: string\n    symbol?: string\n    status?: string\n    limit?: number\n    offset?: number\n  }): Promise<Order[]> {\n    try {\n      const response = await tradingServiceClient.get('/trading/orders', { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getOrder(orderId: string): Promise<Order> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/orders/${orderId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async cancelOrder(orderId: string): Promise<boolean> {\n    try {\n      const response = await tradingServiceClient.delete(`/trading/orders/${orderId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getOrderStatistics(days: number = 30): Promise<OrderStatistics> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/orders/statistics?days=${days}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 持仓管理\n  async getPositions(exchange?: string): Promise<Position[]> {\n    try {\n      const url = exchange ? `/trading/positions?exchange=${exchange}` : '/trading/positions'\n      const response = await tradingServiceClient.get(url)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getPositionPnL(symbol: string, exchange: string, currentPrice: number): Promise<Position> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/positions/${exchange}/${symbol}/pnl`, {\n        params: { current_price: currentPrice }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 交易统计\n  async getTradingSummary(days: number = 30): Promise<TradingSummary> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/summary?days=${days}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getDailyPnL(days: number = 30): Promise<DailyPnL[]> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/daily-pnl?days=${days}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getTrades(params?: {\n    exchange?: string\n    symbol?: string\n    trade_type?: string\n    start_date?: string\n    end_date?: string\n    limit?: number\n    offset?: number\n  }): Promise<any[]> {\n    try {\n      const response = await tradingServiceClient.get('/trading/trades', { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 交易会话管理\n  async createTradingSession(sessionData: {\n    exchange: string\n    symbols: string[]\n    strategy_id?: number\n    execution_mode?: 'manual' | 'semi_auto' | 'full_auto'\n    max_daily_trades?: number\n    max_open_positions?: number\n  }): Promise<TradingSession> {\n    try {\n      const response = await tradingServiceClient.post('/trading/sessions', sessionData)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getTradingSessions(): Promise<TradingSession[]> {\n    try {\n      const response = await tradingServiceClient.get('/trading/sessions')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async startTradingSession(sessionId: string): Promise<boolean> {\n    try {\n      const response = await tradingServiceClient.post(`/trading/sessions/${sessionId}/start`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async stopTradingSession(sessionId: string): Promise<boolean> {\n    try {\n      const response = await tradingServiceClient.post(`/trading/sessions/${sessionId}/stop`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 风险管理\n  async validateOrder(orderData: OrderRequest): Promise<RiskAssessment> {\n    try {\n      const response = await tradingServiceClient.post('/trading/risk/validate-order', orderData)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getPortfolioRisk(): Promise<{\n    total_value: number\n    unrealized_pnl: number\n    daily_pnl: number\n    var_95: number\n    max_drawdown: number\n    position_count: number\n    risk_score: number\n    concentration_risk: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get('/trading/risk/portfolio')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 实时数据\n  async getMarketData(exchange: string, symbol: string, timeframe: string, limit: number = 100): Promise<any[]> {\n    try {\n      const response = await tradingServiceClient.get('/trading/market-data', {\n        params: { exchange, symbol, timeframe, limit }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  async getTradingFees(exchange: string): Promise<{\n    exchange: string\n    maker: number\n    taker: number\n    percentage: boolean\n    tierBased: boolean\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/trading/fees/${exchange}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  }\n}","/**\n * 实盘交易状态管理\n * 管理订单、持仓、交易统计等实盘交易相关状态\n */\n\nimport { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\nimport { tradingApi } from '../services/api/trading'\nimport type { \n  Order, \n  Position, \n  TradingSummary, \n  DailyPnL, \n  TradingAccount,\n  TradingSession,\n  OrderRequest,\n  OrderStatistics,\n  RiskAssessment\n} from '../services/api/trading'\n\n// 交易面板表单状态\ninterface TradingForm {\n  exchange: string\n  symbol: string\n  side: 'buy' | 'sell'\n  order_type: 'market' | 'limit'\n  price: string\n  quantity: string\n  amount: string\n}\n\n// 实盘交易状态接口\ninterface TradingState {\n  // 账户相关\n  accounts: Record<string, TradingAccount>\n  selectedExchange: string\n  supportedExchanges: string[]\n  availableSymbols: string[]\n  \n  // 订单相关\n  orders: Order[]\n  activeOrders: Order[]\n  orderHistory: Order[]\n  orderStats: OrderStatistics | null\n  \n  // 持仓相关\n  positions: Position[]\n  totalPortfolioValue: number\n  totalUnrealizedPnL: number\n  totalRealizedPnL: number\n  \n  // 交易统计\n  tradingSummary: TradingSummary | null\n  dailyPnLData: DailyPnL[]\n  recentTrades: any[]\n  \n  // 交易会话\n  tradingSessions: TradingSession[]\n  activeSessions: TradingSession[]\n  \n  // 交易表单\n  tradingForm: TradingForm\n  lastRiskAssessment: RiskAssessment | null\n  \n  // UI状态\n  selectedTimeframe: string\n  showAdvancedOptions: boolean\n  \n  // 加载状态\n  isLoading: boolean\n  isPlacingOrder: boolean\n  isLoadingPositions: boolean\n  isLoadingOrders: boolean\n  error: string | null\n  \n  // Actions - 账户管理\n  loadSupportedExchanges: () => Promise<void>\n  loadAccountBalance: (exchange: string) => Promise<void>\n  loadAvailableSymbols: (exchange: string) => Promise<void>\n  switchExchange: (exchange: string) => void\n  \n  // Actions - 订单管理\n  createOrder: (orderData: OrderRequest) => Promise<Order | null>\n  loadOrders: (filters?: any) => Promise<void>\n  cancelOrder: (orderId: string) => Promise<void>\n  refreshOrder: (orderId: string) => Promise<void>\n  loadOrderStatistics: (days?: number) => Promise<void>\n  \n  // Actions - 持仓管理\n  loadPositions: (exchange?: string) => Promise<void>\n  refreshPositions: () => Promise<void>\n  calculatePositionPnL: (symbol: string, exchange: string, currentPrice: number) => Promise<void>\n  \n  // Actions - 交易统计\n  loadTradingSummary: (days?: number) => Promise<void>\n  loadDailyPnL: (days?: number) => Promise<void>\n  loadRecentTrades: (filters?: any) => Promise<void>\n  \n  // Actions - 交易会话\n  createTradingSession: (sessionData: any) => Promise<TradingSession | null>\n  loadTradingSessions: () => Promise<void>\n  startTradingSession: (sessionId: string) => Promise<void>\n  stopTradingSession: (sessionId: string) => Promise<void>\n  \n  // Actions - 交易表单\n  updateTradingForm: (field: keyof TradingForm, value: string) => void\n  resetTradingForm: () => void\n  calculateOrderAmount: () => void\n  validateOrder: () => Promise<RiskAssessment | null>\n  \n  // Actions - UI控制\n  setSelectedTimeframe: (timeframe: string) => void\n  toggleAdvancedOptions: () => void\n  \n  // Actions - 状态管理\n  setLoading: (loading: boolean) => void\n  setError: (error: string | null) => void\n  clearError: () => void\n  reset: () => void\n}\n\n// 默认交易表单状态\nconst defaultTradingForm: TradingForm = {\n  exchange: 'okx',\n  symbol: 'BTC/USDT',\n  side: 'buy',\n  order_type: 'limit',\n  price: '',\n  quantity: '',\n  amount: ''\n}\n\n// 创建交易状态管理\nexport const useTradingStore = create<TradingState>()(\n  persist(\n    (set, get) => ({\n      // 初始状态\n      accounts: {},\n      selectedExchange: 'okx',\n      supportedExchanges: [],\n      availableSymbols: [],\n      \n      orders: [],\n      activeOrders: [],\n      orderHistory: [],\n      orderStats: null,\n      \n      positions: [],\n      totalPortfolioValue: 0,\n      totalUnrealizedPnL: 0,\n      totalRealizedPnL: 0,\n      \n      tradingSummary: null,\n      dailyPnLData: [],\n      recentTrades: [],\n      \n      tradingSessions: [],\n      activeSessions: [],\n      \n      tradingForm: defaultTradingForm,\n      lastRiskAssessment: null,\n      \n      selectedTimeframe: '15m',\n      showAdvancedOptions: false,\n      \n      isLoading: false,\n      isPlacingOrder: false,\n      isLoadingPositions: false,\n      isLoadingOrders: false,\n      error: null,\n      \n      // 账户管理\n      loadSupportedExchanges: async () => {\n        try {\n          set({ isLoading: true, error: null })\n          const exchanges = await tradingApi.getSupportedExchanges()\n          set({ supportedExchanges: exchanges, isLoading: false })\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to load exchanges',\n            isLoading: false \n          })\n        }\n      },\n      \n      loadAccountBalance: async (exchange: string) => {\n        try {\n          set({ isLoading: true, error: null })\n          const account = await tradingApi.getAccountBalance(exchange)\n          set(state => ({\n            accounts: { ...state.accounts, [exchange]: account },\n            isLoading: false\n          }))\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to load account balance',\n            isLoading: false \n          })\n        }\n      },\n      \n      loadAvailableSymbols: async (exchange: string) => {\n        try {\n          const symbols = await tradingApi.getSymbols(exchange)\n          set({ availableSymbols: symbols })\n        } catch (error) {\n          console.error('Failed to load symbols:', error)\n        }\n      },\n      \n      switchExchange: (exchange: string) => {\n        set({ selectedExchange: exchange })\n        // 自动加载新交易所的数据\n        get().loadAccountBalance(exchange)\n        get().loadAvailableSymbols(exchange)\n        get().loadPositions(exchange)\n      },\n      \n      // 订单管理\n      createOrder: async (orderData: OrderRequest) => {\n        try {\n          set({ isPlacingOrder: true, error: null })\n          const order = await tradingApi.createOrder(orderData)\n          \n          set(state => ({\n            orders: [order, ...state.orders],\n            activeOrders: order.status === 'filled' ? state.activeOrders : [order, ...state.activeOrders],\n            isPlacingOrder: false\n          }))\n          \n          // 刷新相关数据\n          get().loadPositions()\n          get().loadAccountBalance(orderData.exchange)\n          \n          return order\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to create order',\n            isPlacingOrder: false \n          })\n          return null\n        }\n      },\n      \n      loadOrders: async (filters = {}) => {\n        try {\n          set({ isLoadingOrders: true, error: null })\n          const orders = await tradingApi.getOrders(filters)\n          \n          const activeOrders = orders.filter(order => \n            !['filled', 'canceled', 'rejected', 'failed'].includes(order.status)\n          )\n          const orderHistory = orders.filter(order => \n            ['filled', 'canceled', 'rejected', 'failed'].includes(order.status)\n          )\n          \n          set({ \n            orders, \n            activeOrders, \n            orderHistory,\n            isLoadingOrders: false \n          })\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to load orders',\n            isLoadingOrders: false \n          })\n        }\n      },\n      \n      cancelOrder: async (orderId: string) => {\n        try {\n          set({ isLoading: true, error: null })\n          await tradingApi.cancelOrder(orderId)\n          \n          // 更新本地订单状态\n          set(state => ({\n            orders: state.orders.map(order => \n              order.id === orderId ? { ...order, status: 'canceled' as const } : order\n            ),\n            activeOrders: state.activeOrders.filter(order => order.id !== orderId),\n            isLoading: false\n          }))\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to cancel order',\n            isLoading: false \n          })\n        }\n      },\n      \n      refreshOrder: async (orderId: string) => {\n        try {\n          const order = await tradingApi.getOrder(orderId)\n          set(state => ({\n            orders: state.orders.map(o => o.id === orderId ? order : o),\n            activeOrders: state.activeOrders.map(o => o.id === orderId ? order : o)\n          }))\n        } catch (error) {\n          console.error('Failed to refresh order:', error)\n        }\n      },\n      \n      loadOrderStatistics: async (days = 30) => {\n        try {\n          const stats = await tradingApi.getOrderStatistics(days)\n          set({ orderStats: stats })\n        } catch (error) {\n          console.error('Failed to load order statistics:', error)\n        }\n      },\n      \n      // 持仓管理\n      loadPositions: async (exchange?: string) => {\n        try {\n          set({ isLoadingPositions: true, error: null })\n          const positions = await tradingApi.getPositions(exchange)\n          \n          // 计算总投资组合价值和盈亏\n          const totalPortfolioValue = positions.reduce((sum, pos) => sum + pos.current_value, 0)\n          const totalUnrealizedPnL = positions.reduce((sum, pos) => sum + pos.unrealized_pnl, 0)\n          const totalRealizedPnL = positions.reduce((sum, pos) => sum + pos.realized_pnl, 0)\n          \n          set({ \n            positions,\n            totalPortfolioValue,\n            totalUnrealizedPnL,\n            totalRealizedPnL,\n            isLoadingPositions: false \n          })\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to load positions',\n            isLoadingPositions: false \n          })\n        }\n      },\n      \n      refreshPositions: async () => {\n        const { selectedExchange } = get()\n        await get().loadPositions(selectedExchange)\n      },\n      \n      calculatePositionPnL: async (symbol: string, exchange: string, currentPrice: number) => {\n        try {\n          const positionPnL = await tradingApi.getPositionPnL(symbol, exchange, currentPrice)\n          \n          set(state => ({\n            positions: state.positions.map(pos => \n              pos.symbol === symbol && pos.exchange === exchange ? positionPnL : pos\n            )\n          }))\n        } catch (error) {\n          console.error('Failed to calculate position PnL:', error)\n        }\n      },\n      \n      // 交易统计\n      loadTradingSummary: async (days = 30) => {\n        try {\n          set({ isLoading: true, error: null })\n          const summary = await tradingApi.getTradingSummary(days)\n          set({ tradingSummary: summary, isLoading: false })\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to load trading summary',\n            isLoading: false \n          })\n        }\n      },\n      \n      loadDailyPnL: async (days = 30) => {\n        try {\n          const dailyPnL = await tradingApi.getDailyPnL(days)\n          set({ dailyPnLData: dailyPnL })\n        } catch (error) {\n          console.error('Failed to load daily PnL:', error)\n        }\n      },\n      \n      loadRecentTrades: async (filters = {}) => {\n        try {\n          const trades = await tradingApi.getTrades({ ...filters, limit: 50 })\n          set({ recentTrades: trades })\n        } catch (error) {\n          console.error('Failed to load recent trades:', error)\n        }\n      },\n      \n      // 交易会话\n      createTradingSession: async (sessionData: any) => {\n        try {\n          set({ isLoading: true, error: null })\n          const session = await tradingApi.createTradingSession(sessionData)\n          \n          set(state => ({\n            tradingSessions: [session, ...state.tradingSessions],\n            isLoading: false\n          }))\n          \n          return session\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to create trading session',\n            isLoading: false \n          })\n          return null\n        }\n      },\n      \n      loadTradingSessions: async () => {\n        try {\n          const sessions = await tradingApi.getTradingSessions()\n          const activeSessions = sessions.filter(s => s.status === 'active')\n          \n          set({ \n            tradingSessions: sessions,\n            activeSessions\n          })\n        } catch (error) {\n          console.error('Failed to load trading sessions:', error)\n        }\n      },\n      \n      startTradingSession: async (sessionId: string) => {\n        try {\n          set({ isLoading: true, error: null })\n          await tradingApi.startTradingSession(sessionId)\n          \n          // 更新本地会话状态\n          set(state => ({\n            tradingSessions: state.tradingSessions.map(session =>\n              session.id === sessionId ? { ...session, status: 'active' as const } : session\n            ),\n            isLoading: false\n          }))\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to start trading session',\n            isLoading: false \n          })\n        }\n      },\n      \n      stopTradingSession: async (sessionId: string) => {\n        try {\n          set({ isLoading: true, error: null })\n          await tradingApi.stopTradingSession(sessionId)\n          \n          // 更新本地会话状态\n          set(state => ({\n            tradingSessions: state.tradingSessions.map(session =>\n              session.id === sessionId ? { ...session, status: 'stopped' as const } : session\n            ),\n            isLoading: false\n          }))\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to stop trading session',\n            isLoading: false \n          })\n        }\n      },\n      \n      // 交易表单\n      updateTradingForm: (field: keyof TradingForm, value: string) => {\n        set(state => ({\n          tradingForm: { ...state.tradingForm, [field]: value }\n        }))\n        \n        // 自动计算金额\n        if (field === 'price' || field === 'quantity') {\n          get().calculateOrderAmount()\n        }\n      },\n      \n      resetTradingForm: () => {\n        set({ tradingForm: defaultTradingForm, lastRiskAssessment: null })\n      },\n      \n      calculateOrderAmount: () => {\n        const { tradingForm } = get()\n        const { price, quantity } = tradingForm\n        \n        if (price && quantity) {\n          const amount = (parseFloat(price) * parseFloat(quantity)).toFixed(2)\n          set(state => ({\n            tradingForm: { ...state.tradingForm, amount }\n          }))\n        }\n      },\n      \n      validateOrder: async () => {\n        try {\n          const { tradingForm } = get()\n          \n          if (!tradingForm.quantity || !tradingForm.price) {\n            return null\n          }\n          \n          const orderData: OrderRequest = {\n            exchange: tradingForm.exchange,\n            symbol: tradingForm.symbol,\n            order_type: tradingForm.order_type,\n            side: tradingForm.side,\n            amount: parseFloat(tradingForm.quantity),\n            price: tradingForm.order_type === 'limit' ? parseFloat(tradingForm.price) : undefined\n          }\n          \n          const assessment = await tradingApi.validateOrder(orderData)\n          set({ lastRiskAssessment: assessment })\n          \n          return assessment\n        } catch (error) {\n          console.error('Failed to validate order:', error)\n          return null\n        }\n      },\n      \n      // UI控制\n      setSelectedTimeframe: (timeframe: string) => {\n        set({ selectedTimeframe: timeframe })\n      },\n      \n      toggleAdvancedOptions: () => {\n        set(state => ({ showAdvancedOptions: !state.showAdvancedOptions }))\n      },\n      \n      // 状态管理\n      setLoading: (loading: boolean) => set({ isLoading: loading }),\n      setError: (error: string | null) => set({ error }),\n      clearError: () => set({ error: null }),\n      \n      reset: () => set({\n        accounts: {},\n        orders: [],\n        activeOrders: [],\n        orderHistory: [],\n        positions: [],\n        tradingSessions: [],\n        activeSessions: [],\n        tradingForm: defaultTradingForm,\n        lastRiskAssessment: null,\n        isLoading: false,\n        isPlacingOrder: false,\n        isLoadingPositions: false,\n        isLoadingOrders: false,\n        error: null\n      })\n    }),\n    {\n      name: 'trading-store',\n      // 只持久化表单状态和用户偏好\n      partialize: (state) => ({\n        selectedExchange: state.selectedExchange,\n        tradingForm: state.tradingForm,\n        selectedTimeframe: state.selectedTimeframe,\n        showAdvancedOptions: state.showAdvancedOptions\n      })\n    }\n  )\n)\n\n// 便捷的选择器hooks\nexport const useTradingAccounts = () => useTradingStore(state => ({\n  accounts: state.accounts,\n  selectedExchange: state.selectedExchange,\n  supportedExchanges: state.supportedExchanges,\n  switchExchange: state.switchExchange,\n  loadAccountBalance: state.loadAccountBalance,\n  loadSupportedExchanges: state.loadSupportedExchanges\n}))\n\nexport const useTradingOrders = () => useTradingStore(state => ({\n  orders: state.orders,\n  activeOrders: state.activeOrders,\n  orderHistory: state.orderHistory,\n  orderStats: state.orderStats,\n  isLoadingOrders: state.isLoadingOrders,\n  isPlacingOrder: state.isPlacingOrder,\n  createOrder: state.createOrder,\n  loadOrders: state.loadOrders,\n  cancelOrder: state.cancelOrder,\n  loadOrderStatistics: state.loadOrderStatistics\n}))\n\nexport const useTradingPositions = () => useTradingStore(state => ({\n  positions: state.positions,\n  totalPortfolioValue: state.totalPortfolioValue,\n  totalUnrealizedPnL: state.totalUnrealizedPnL,\n  totalRealizedPnL: state.totalRealizedPnL,\n  isLoadingPositions: state.isLoadingPositions,\n  loadPositions: state.loadPositions,\n  refreshPositions: state.refreshPositions\n}))\n\nexport const useTradingForm = () => useTradingStore(state => ({\n  tradingForm: state.tradingForm,\n  lastRiskAssessment: state.lastRiskAssessment,\n  availableSymbols: state.availableSymbols,\n  updateTradingForm: state.updateTradingForm,\n  resetTradingForm: state.resetTradingForm,\n  validateOrder: state.validateOrder,\n  loadAvailableSymbols: state.loadAvailableSymbols\n}))\n\nexport const useTradingStatistics = () => useTradingStore(state => ({\n  tradingSummary: state.tradingSummary,\n  dailyPnLData: state.dailyPnLData,\n  recentTrades: state.recentTrades,\n  loadTradingSummary: state.loadTradingSummary,\n  loadDailyPnL: state.loadDailyPnL,\n  loadRecentTrades: state.loadRecentTrades\n}))\n\nexport const useTradingSessions = () => useTradingStore(state => ({\n  tradingSessions: state.tradingSessions,\n  activeSessions: state.activeSessions,\n  createTradingSession: state.createTradingSession,\n  loadTradingSessions: state.loadTradingSessions,\n  startTradingSession: state.startTradingSession,\n  stopTradingSession: state.stopTradingSession\n}))","import { tradingServiceClient, handleApiResponse, handleApiError } from './client'\n\nexport interface BacktestConfig {\n  strategy_id: string\n  symbol: string\n  exchange: string\n  start_date: string\n  end_date: string\n  initial_capital: number\n  commission_rate: number\n  timeframe: string\n}\n\nexport interface BacktestResult {\n  id: string\n  strategy_id: string\n  config: BacktestConfig\n  status: 'running' | 'completed' | 'failed'\n  results?: {\n    total_return: number\n    max_drawdown: number\n    sharpe_ratio: number\n    win_rate: number\n    total_trades: number\n    profit_factor: number\n    annual_return: number\n    volatility: number\n    final_capital: number\n    equity_curve: Array<{ timestamp: string; value: number }>\n    trade_history: Array<{\n      timestamp: string\n      side: 'buy' | 'sell'\n      price: number\n      quantity: number\n      pnl: number\n    }>\n  }\n  error_message?: string\n  created_at: string\n  completed_at?: string\n}\n\nexport const backtestApi = {\n  // 创建回测\n  async createBacktest(config: BacktestConfig): Promise<BacktestResult> {\n    try {\n      const response = await tradingServiceClient.post('/backtests', config)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取回测列表\n  async getBacktests(params?: {\n    page?: number\n    per_page?: number\n    strategy_id?: string\n    status?: string\n  }): Promise<BacktestResult[]> {\n    try {\n      const response = await tradingServiceClient.get('/backtests', { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取单个回测详情\n  async getBacktest(id: string): Promise<BacktestResult> {\n    try {\n      const response = await tradingServiceClient.get(`/backtests/${id}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取回测状态\n  async getBacktestStatus(id: string): Promise<{ status: string; progress?: number }> {\n    try {\n      const response = await tradingServiceClient.get(`/backtests/${id}/status`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 停止运行中的回测\n  async stopBacktest(id: string): Promise<{ message: string }> {\n    try {\n      const response = await tradingServiceClient.post(`/backtests/${id}/stop`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 删除回测\n  async deleteBacktest(id: string): Promise<{ message: string }> {\n    try {\n      const response = await tradingServiceClient.delete(`/backtests/${id}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 下载回测报告\n  async downloadBacktestReport(id: string, format: 'pdf' | 'html' | 'csv' = 'html'): Promise<Blob> {\n    try {\n      const response = await tradingServiceClient.get(`/backtests/${id}/report`, {\n        params: { format },\n        responseType: 'blob'\n      })\n      return response.data\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 比较多个回测结果\n  async compareBacktests(backtestIds: string[]): Promise<{\n    comparison: {\n      metrics: Record<string, number[]>\n      equity_curves: Array<{\n        backtest_id: string\n        name: string\n        data: Array<{ timestamp: string; value: number }>\n      }>\n    }\n  }> {\n    try {\n      const response = await tradingServiceClient.post('/backtests/compare', {\n        backtest_ids: backtestIds\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  }\n}","import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\nimport { backtestApi, BacktestConfig, BacktestResult } from '../services/api/backtest'\n\n// 回测配置表单状态\ninterface BacktestConfigForm {\n  strategy_id: string\n  symbol: string\n  exchange: string\n  start_date: string\n  end_date: string\n  initial_capital: number\n  commission_rate: number\n  timeframe: string\n}\n\n// 回测状态接口\ninterface BacktestState {\n  // 回测列表相关状态\n  backtests: BacktestResult[]\n  currentBacktest: BacktestResult | null\n  loading: boolean\n  error: string | null\n  \n  // 回测配置表单状态\n  configForm: BacktestConfigForm\n  isCreatingBacktest: boolean\n  \n  // 实时回测状态\n  runningBacktests: Map<string, { status: string; progress?: number }>\n  \n  // 回测比较功能\n  selectedForComparison: string[]\n  comparisonResult: any | null\n  \n  // 分页和筛选\n  pagination: {\n    page: number\n    per_page: number\n    total: number\n    total_pages: number\n  }\n  filters: {\n    strategy_id?: string\n    status?: string\n  }\n  \n  // Actions - 回测列表管理\n  fetchBacktests: (params?: { page?: number; per_page?: number }) => Promise<void>\n  fetchBacktest: (id: string) => Promise<void>\n  refreshBacktest: (id: string) => Promise<void>\n  deleteBacktest: (id: string) => Promise<void>\n  \n  // Actions - 回测创建和控制\n  createBacktest: (config: BacktestConfig) => Promise<BacktestResult | null>\n  stopBacktest: (id: string) => Promise<void>\n  updateBacktestForm: (field: keyof BacktestConfigForm, value: any) => void\n  resetBacktestForm: () => void\n  \n  // Actions - 实时状态监控\n  updateBacktestStatus: (id: string, status: string, progress?: number) => void\n  pollBacktestStatus: (id: string) => Promise<void>\n  \n  // Actions - 回测比较\n  toggleComparisonSelection: (id: string) => void\n  compareBacktests: () => Promise<void>\n  clearComparison: () => void\n  \n  // Actions - 报告下载\n  downloadReport: (id: string, format?: 'pdf' | 'html' | 'csv') => Promise<void>\n  \n  // Actions - 状态管理\n  setLoading: (loading: boolean) => void\n  setError: (error: string | null) => void\n  clearError: () => void\n  reset: () => void\n}\n\n// 默认配置表单状态\nconst defaultConfigForm: BacktestConfigForm = {\n  strategy_id: '',\n  symbol: 'BTC/USDT',\n  exchange: 'okx',\n  start_date: '2024-01-01',\n  end_date: '2024-03-31',\n  initial_capital: 10000,\n  commission_rate: 0.001,\n  timeframe: '1h'\n}\n\n// 创建回测状态管理\nexport const useBacktestStore = create<BacktestState>()(\n  persist(\n    (set, get) => ({\n      // 初始状态\n      backtests: [],\n      currentBacktest: null,\n      loading: false,\n      error: null,\n      \n      configForm: defaultConfigForm,\n      isCreatingBacktest: false,\n      \n      runningBacktests: new Map(),\n      \n      selectedForComparison: [],\n      comparisonResult: null,\n      \n      pagination: {\n        page: 1,\n        per_page: 10,\n        total: 0,\n        total_pages: 0\n      },\n      filters: {},\n      \n      // 回测列表管理\n      fetchBacktests: async (params) => {\n        set({ loading: true, error: null })\n        try {\n          const { page = 1, per_page = 10 } = params || {}\n          const response = await backtestApi.getBacktests({\n            page,\n            per_page,\n            ...get().filters\n          })\n          \n          // 确保response是数组，如果不是则包装成数组或使用空数组\n          const backtestsArray = Array.isArray(response) ? response : []\n          \n          set({\n            backtests: backtestsArray,\n            pagination: {\n              page,\n              per_page,\n              total: backtestsArray.length,\n              total_pages: Math.ceil(backtestsArray.length / per_page)\n            },\n            loading: false\n          })\n        } catch (error) {\n          console.error('Error fetching backtests:', error)\n          set({ \n            backtests: [], // 确保错误时也是数组\n            error: error instanceof Error ? error.message : 'Failed to fetch backtests',\n            loading: false \n          })\n        }\n      },\n      \n      fetchBacktest: async (id) => {\n        set({ loading: true, error: null })\n        try {\n          const result = await backtestApi.getBacktest(id)\n          set({ currentBacktest: result, loading: false })\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to fetch backtest',\n            loading: false \n          })\n        }\n      },\n      \n      refreshBacktest: async (id) => {\n        try {\n          const result = await backtestApi.getBacktest(id)\n          set(state => ({\n            backtests: state.backtests.map(bt => bt.id === id ? result : bt),\n            currentBacktest: state.currentBacktest?.id === id ? result : state.currentBacktest\n          }))\n        } catch (error) {\n          console.error('Failed to refresh backtest:', error)\n        }\n      },\n      \n      deleteBacktest: async (id) => {\n        set({ loading: true, error: null })\n        try {\n          await backtestApi.deleteBacktest(id)\n          set(state => ({\n            backtests: state.backtests.filter(bt => bt.id !== id),\n            currentBacktest: state.currentBacktest?.id === id ? null : state.currentBacktest,\n            loading: false\n          }))\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to delete backtest',\n            loading: false \n          })\n        }\n      },\n      \n      // 回测创建和控制\n      createBacktest: async (config) => {\n        set({ isCreatingBacktest: true, error: null })\n        try {\n          const result = await backtestApi.createBacktest(config)\n          set(state => ({\n            backtests: [result, ...state.backtests],\n            currentBacktest: result,\n            isCreatingBacktest: false\n          }))\n          \n          // 开始轮询状态\n          if (result.status === 'running') {\n            get().pollBacktestStatus(result.id)\n          }\n          \n          return result\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to create backtest',\n            isCreatingBacktest: false \n          })\n          return null\n        }\n      },\n      \n      stopBacktest: async (id) => {\n        try {\n          await backtestApi.stopBacktest(id)\n          // 更新本地状态\n          set(state => ({\n            backtests: state.backtests.map(bt => \n              bt.id === id ? { ...bt, status: 'failed' as const } : bt\n            ),\n            currentBacktest: state.currentBacktest?.id === id \n              ? { ...state.currentBacktest, status: 'failed' as const }\n              : state.currentBacktest\n          }))\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to stop backtest'\n          })\n        }\n      },\n      \n      updateBacktestForm: (field, value) => {\n        set(state => ({\n          configForm: { ...state.configForm, [field]: value }\n        }))\n      },\n      \n      resetBacktestForm: () => {\n        set({ configForm: defaultConfigForm })\n      },\n      \n      // 实时状态监控\n      updateBacktestStatus: (id, status, progress) => {\n        set(state => ({\n          runningBacktests: new Map(state.runningBacktests).set(id, { status, progress })\n        }))\n      },\n      \n      pollBacktestStatus: async (id) => {\n        const pollInterval = 3000 // 3秒轮询一次\n        \n        const poll = async () => {\n          try {\n            const statusInfo = await backtestApi.getBacktestStatus(id)\n            get().updateBacktestStatus(id, statusInfo.status, statusInfo.progress)\n            \n            // 如果回测完成，获取完整结果并停止轮询\n            if (statusInfo.status === 'completed' || statusInfo.status === 'failed') {\n              get().refreshBacktest(id)\n              return\n            }\n            \n            // 继续轮询\n            setTimeout(poll, pollInterval)\n          } catch (error) {\n            console.error('Failed to poll backtest status:', error)\n            // 出错后停止轮询\n          }\n        }\n        \n        poll()\n      },\n      \n      // 回测比较功能\n      toggleComparisonSelection: (id) => {\n        set(state => ({\n          selectedForComparison: state.selectedForComparison.includes(id)\n            ? state.selectedForComparison.filter(selectedId => selectedId !== id)\n            : [...state.selectedForComparison, id].slice(0, 5) // 最多选择5个\n        }))\n      },\n      \n      compareBacktests: async () => {\n        const { selectedForComparison } = get()\n        if (selectedForComparison.length < 2) return\n        \n        set({ loading: true, error: null })\n        try {\n          const result = await backtestApi.compareBacktests(selectedForComparison)\n          set({ comparisonResult: result, loading: false })\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to compare backtests',\n            loading: false \n          })\n        }\n      },\n      \n      clearComparison: () => {\n        set({ selectedForComparison: [], comparisonResult: null })\n      },\n      \n      // 报告下载\n      downloadReport: async (id, format = 'html') => {\n        try {\n          const blob = await backtestApi.downloadBacktestReport(id, format)\n          \n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob)\n          const link = document.createElement('a')\n          link.href = url\n          link.download = `backtest-report-${id}.${format}`\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link)\n          window.URL.revokeObjectURL(url)\n        } catch (error) {\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to download report'\n          })\n        }\n      },\n      \n      // 状态管理\n      setLoading: (loading) => set({ loading }),\n      setError: (error) => set({ error }),\n      clearError: () => set({ error: null }),\n      reset: () => set({\n        backtests: [],\n        currentBacktest: null,\n        loading: false,\n        error: null,\n        configForm: defaultConfigForm,\n        isCreatingBacktest: false,\n        runningBacktests: new Map(),\n        selectedForComparison: [],\n        comparisonResult: null,\n        pagination: {\n          page: 1,\n          per_page: 10,\n          total: 0,\n          total_pages: 0\n        },\n        filters: {}\n      })\n    }),\n    {\n      name: 'backtest-store',\n      // 只持久化配置表单和选择状态，其他状态每次重新加载\n      partialize: (state) => ({\n        configForm: state.configForm,\n        selectedForComparison: state.selectedForComparison\n      })\n    }\n  )\n)\n\n// 便捷的选择器hooks\nexport const useBacktestList = () => useBacktestStore(state => ({\n  backtests: state.backtests,\n  loading: state.loading,\n  error: state.error,\n  pagination: state.pagination,\n  fetchBacktests: state.fetchBacktests,\n  deleteBacktest: state.deleteBacktest,\n  downloadReport: state.downloadReport\n}))\n\nexport const useBacktestCreation = () => useBacktestStore(state => ({\n  configForm: state.configForm,\n  isCreatingBacktest: state.isCreatingBacktest,\n  createBacktest: state.createBacktest,\n  updateBacktestForm: state.updateBacktestForm,\n  resetBacktestForm: state.resetBacktestForm\n}))\n\nexport const useBacktestComparison = () => useBacktestStore(state => ({\n  selectedForComparison: state.selectedForComparison,\n  comparisonResult: state.comparisonResult,\n  toggleComparisonSelection: state.toggleComparisonSelection,\n  compareBacktests: state.compareBacktests,\n  clearComparison: state.clearComparison\n}))\n\nexport const useCurrentBacktest = () => useBacktestStore(state => ({\n  currentBacktest: state.currentBacktest,\n  loading: state.loading,\n  error: state.error,\n  fetchBacktest: state.fetchBacktest,\n  refreshBacktest: state.refreshBacktest,\n  stopBacktest: state.stopBacktest,\n  runningBacktests: state.runningBacktests\n}))","// Store统一入口文件\nexport { useAuthStore } from './authStore'\nexport { useMarketStore } from './marketStore'\nexport { useStrategyStore } from './strategyStore'\nexport { useAIStore } from './aiStore'\nexport { useThemeStore } from './themeStore'\nexport { useLanguageStore } from './languageStore'\nexport { \n  useTradingStore, \n  useTradingAccounts, \n  useTradingOrders, \n  useTradingPositions, \n  useTradingForm, \n  useTradingStatistics, \n  useTradingSessions \n} from './tradingStore'\nexport { \n  useBacktestStore, \n  useBacktestList, \n  useBacktestCreation, \n  useBacktestComparison, \n  useCurrentBacktest \n} from './backtestStore'\n\n// 类型定义导出\nexport type { User, LoginCredentials, RegisterData, LoginResponse } from '../types/auth'\nexport type { MarketData, KlineData, TickerData, OrderBook, TradingPair, Exchange } from '../types/market'\nexport type { Strategy, CreateStrategyData, TradeRecord } from '../types/strategy'\nexport type { \n  ChatSession, \n  ChatMessage, \n  StrategyGenerationRequest, \n  GeneratedStrategy,\n  MarketAnalysis \n} from '../services/api/ai'\nexport type {\n  TradingAccount,\n  OrderRequest,\n  Order,\n  Position,\n  TradingSummary,\n  DailyPnL,\n  TradingSession,\n  OrderStatistics,\n  RiskAssessment\n} from '../services/api/trading'\nexport type { BacktestConfig, BacktestResult } from '../services/api/backtest'\n\n// 工具函数导出\nexport { wsManager } from '../utils/websocketManager'\nexport { errorHandler, handleError, createRetryHandler, ErrorType } from '../utils/errorHandler'\nexport type { AppError } from '../utils/errorHandler'\n\n// 全局状态管理hooks\nimport { useAuthStore } from './authStore'\nimport { useMarketStore } from './marketStore'\nimport { useStrategyStore } from './strategyStore'\nimport { useAIStore } from './aiStore'\nimport { useTradingStore } from './tradingStore'\nimport { useBacktestStore } from './backtestStore'\nimport { wsManager } from '../utils/websocketManager'\nimport { errorHandler } from '../utils/errorHandler'\nimport { useEffect } from 'react'\n\n/**\n * 初始化应用状态的Hook\n * 在App组件中调用，负责初始化各种状态和连接\n */\nexport const useAppInitialization = () => {\n  const { checkAuth } = useAuthStore()\n  const { loadChatSessions } = useAIStore()\n  const { fetchStrategies } = useStrategyStore()\n  const { loadSupportedExchanges } = useTradingStore()\n  const { fetchBacktests } = useBacktestStore()\n  \n  useEffect(() => {\n    // 应用启动时的初始化逻辑\n    const initializeApp = async () => {\n      try {\n        // 1. 检查用户认证状态\n        await checkAuth()\n        \n        // 2. 如果用户已登录，加载相关数据\n        const { isAuthenticated } = useAuthStore.getState()\n        if (isAuthenticated) {\n          // 并行加载用户数据\n          await Promise.allSettled([\n            loadChatSessions('developer'),\n            fetchStrategies(),\n            loadSupportedExchanges(), // 加载支持的交易所\n            fetchBacktests({ page: 1, per_page: 10 }) // 加载回测历史\n          ])\n        }\n      } catch (error) {\n        console.error('App initialization failed:', error)\n      }\n    }\n\n    initializeApp()\n  }, [checkAuth, loadChatSessions, fetchStrategies, loadSupportedExchanges, fetchBacktests])\n}\n\n/**\n * 清理应用状态的Hook\n * 用于用户登出或应用卸载时清理状态\n */\nexport const useAppCleanup = () => {\n  const authStore = useAuthStore()\n  const marketStore = useMarketStore()\n  const strategyStore = useStrategyStore()\n  const aiStore = useAIStore()\n  const tradingStore = useTradingStore()\n  const backtestStore = useBacktestStore()\n\n  return () => {\n    // 断开WebSocket连接\n    marketStore.disconnectWebSocket()\n    \n    // 重置各个store状态\n    marketStore.reset()\n    aiStore.reset()\n    tradingStore.reset()\n    backtestStore.reset()\n    \n    // 不重置auth store，让它自己管理登出逻辑\n  }\n}\n\n/**\n * 全局错误状态管理Hook\n */\nexport const useGlobalError = () => {\n  const authError = useAuthStore(state => state.error)\n  const marketError = useMarketStore(state => state.error)\n  const aiError = useAIStore(state => state.error)\n  const tradingError = useTradingStore(state => state.error)\n  const backtestError = useBacktestStore(state => state.error)\n  \n  // 获取第一个非空错误\n  const globalError = authError || marketError || aiError || tradingError || backtestError || null\n  \n  const clearGlobalError = () => {\n    if (authError) useAuthStore.getState().clearError?.()\n    if (marketError) useMarketStore.getState().clearError()\n    if (aiError) useAIStore.getState().clearError()\n    if (tradingError) useTradingStore.getState().clearError()\n    if (backtestError) useBacktestStore.getState().clearError()\n  }\n  \n  return {\n    error: globalError,\n    clearError: clearGlobalError,\n    hasError: !!globalError\n  }\n}\n\n/**\n * 全局加载状态管理Hook\n */\nexport const useGlobalLoading = () => {\n  const authLoading = useAuthStore(state => state.isLoading)\n  const marketLoading = useMarketStore(state => state.isLoading)\n  const strategyLoading = useStrategyStore(state => state.isLoading)\n  const aiLoading = useAIStore(state => state.isLoading)\n  const aiGenerating = useAIStore(state => state.isGenerating)\n  const aiAnalyzing = useAIStore(state => state.isAnalyzing)\n  const tradingLoading = useTradingStore(state => state.isLoading)\n  const placingOrder = useTradingStore(state => state.isPlacingOrder)\n  const backtestLoading = useBacktestStore(state => state.loading)\n  const creatingBacktest = useBacktestStore(state => state.isCreatingBacktest)\n  \n  return {\n    isLoading: authLoading || marketLoading || strategyLoading || aiLoading || tradingLoading || backtestLoading,\n    isGenerating: aiGenerating,\n    isAnalyzing: aiAnalyzing,\n    isPlacingOrder: placingOrder,\n    isCreatingBacktest: creatingBacktest,\n    loadingStates: {\n      auth: authLoading,\n      market: marketLoading,\n      strategy: strategyLoading,\n      ai: aiLoading,\n      aiGenerating,\n      aiAnalyzing,\n      trading: tradingLoading,\n      placingOrder,\n      backtest: backtestLoading,\n      creatingBacktest\n    }\n  }\n}\n\n/**\n * WebSocket连接状态管理Hook\n */\nexport const useWebSocketStatus = () => {\n  const isConnected = useMarketStore(state => state.isConnected)\n  const subscribedTickers = useMarketStore(state => state.subscribedTickers)\n  const connectionStats = useMarketStore(state => state.connectionStats)\n  \n  return {\n    isConnected,\n    subscribedCount: subscribedTickers.size,\n    subscribedTickers: Array.from(subscribedTickers),\n    connectionStats,\n    refreshStats: useMarketStore.getState().getConnectionStats\n  }\n}\n\n/**\n * 用户状态快速访问Hook\n */\nexport const useUserInfo = () => {\n  const user = useAuthStore(state => state.user)\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated)\n  const membershipLevel = user?.membership_level || 'basic'\n  \n  return {\n    user,\n    isAuthenticated,\n    membershipLevel,\n    isPremium: membershipLevel === 'premium' || membershipLevel === 'professional',\n    isProfessional: membershipLevel === 'professional'\n  }\n}\n\n/**\n * AI功能状态快速访问Hook\n */\nexport const useAIStatus = () => {\n  const currentSession = useAIStore(state => state.currentSession)\n  const isTyping = useAIStore(state => state.isTyping)\n  const isGenerating = useAIStore(state => state.isGenerating)\n  const messagesCount = useAIStore(state => state.messages.length)\n  const strategiesCount = useAIStore(state => state.generatedStrategies.length)\n  \n  return {\n    hasActiveSession: !!currentSession,\n    currentSessionId: currentSession?.session_id,\n    isTyping,\n    isGenerating,\n    messagesCount,\n    strategiesCount,\n    isAIBusy: isTyping || isGenerating\n  }\n}\n\n/**\n * 实盘交易状态快速访问Hook\n */\nexport const useTradingStatus = () => {\n  const selectedExchange = useTradingStore(state => state.selectedExchange)\n  const activeOrders = useTradingStore(state => state.activeOrders)\n  const positions = useTradingStore(state => state.positions)\n  const totalPortfolioValue = useTradingStore(state => state.totalPortfolioValue)\n  const totalUnrealizedPnL = useTradingStore(state => state.totalUnrealizedPnL)\n  const isPlacingOrder = useTradingStore(state => state.isPlacingOrder)\n  const activeSessions = useTradingStore(state => state.activeSessions)\n  \n  return {\n    selectedExchange,\n    activeOrdersCount: activeOrders.length,\n    positionsCount: positions.length,\n    hasActivePositions: positions.length > 0,\n    totalPortfolioValue,\n    totalUnrealizedPnL,\n    isPlacingOrder,\n    hasActiveSessions: activeSessions.length > 0,\n    isTradingActive: activeSessions.some(session => session.status === 'active')\n  }\n}\n\n/**\n * 回测状态快速访问Hook\n */\nexport const useBacktestStatus = () => {\n  const backtests = useBacktestStore(state => state.backtests)\n  const currentBacktest = useBacktestStore(state => state.currentBacktest)\n  const runningBacktests = useBacktestStore(state => state.runningBacktests)\n  const selectedForComparison = useBacktestStore(state => state.selectedForComparison)\n  const isCreatingBacktest = useBacktestStore(state => state.isCreatingBacktest)\n  \n  const runningCount = Array.from(runningBacktests.values()).filter(\n    status => status.status === 'running'\n  ).length\n  \n  return {\n    totalBacktests: backtests.length,\n    hasCurrentBacktest: !!currentBacktest,\n    runningBacktestsCount: runningCount,\n    isBacktestRunning: runningCount > 0,\n    selectedForComparisonCount: selectedForComparison.length,\n    canCompare: selectedForComparison.length >= 2,\n    isCreatingBacktest\n  }\n}\n\n/**\n * 开发模式下的store调试工具\n */\nexport const useStoreDebugger = () => {\n  if (import.meta.env.MODE !== 'development') {\n    return null\n  }\n\n  return {\n    getAllStates: () => ({\n      auth: useAuthStore.getState(),\n      market: useMarketStore.getState(),\n      strategy: useStrategyStore.getState(),\n      ai: useAIStore.getState(),\n      trading: useTradingStore.getState(),\n      backtest: useBacktestStore.getState()\n    }),\n    resetAllStores: () => {\n      useMarketStore.getState().reset()\n      useAIStore.getState().reset()\n      useTradingStore.getState().reset()\n      useBacktestStore.getState().reset()\n      // 不重置auth store，避免意外登出\n    },\n    logStoreStates: () => {\n      console.group('📊 Store States')\n      console.log('Auth:', useAuthStore.getState())\n      console.log('Market:', useMarketStore.getState())\n      console.log('Strategy:', useStrategyStore.getState())\n      console.log('AI:', useAIStore.getState())\n      console.log('Trading:', useTradingStore.getState())\n      console.log('Backtest:', useBacktestStore.getState())\n      console.groupEnd()\n    }\n  }\n}\n\n// 开发环境下暴露到window对象，便于调试\nif (import.meta.env.MODE === 'development') {\n  if (typeof window !== 'undefined') {\n    ;(window as any).stores = {\n      auth: useAuthStore,\n      market: useMarketStore,\n      strategy: useStrategyStore,\n      ai: useAIStore,\n      trading: useTradingStore,\n      backtest: useBacktestStore,\n      wsManager: wsManager,\n      errorHandler: errorHandler\n    }\n  }\n}","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { \n  useUserInfo, \n  useWebSocketStatus, \n  useGlobalLoading\n} from '@/store'\nimport { useLanguageStore } from '@/store/languageStore'\nimport { strategyApi } from '../services/api/strategy'\nimport toast from 'react-hot-toast'\n\ninterface OverviewStats {\n  totalStrategies: number\n  runningStrategies: number\n  totalIndicators: number\n  totalTrades: number\n  totalProfit: number\n  winRate: number\n  dailyPnl: number\n}\n\nconst OverviewPage: React.FC = () => {\n  const navigate = useNavigate()\n  const { user, isPremium } = useUserInfo()\n  const { isConnected } = useWebSocketStatus()\n  const { isLoading } = useGlobalLoading()\n  const { t } = useLanguageStore()\n  \n  const [stats, setStats] = useState<OverviewStats>({\n    totalStrategies: 0,\n    runningStrategies: 0,\n    totalIndicators: 0,\n    totalTrades: 0,\n    totalProfit: 0,\n    winRate: 0,\n    dailyPnl: 0\n  })\n  const [strategies, setStrategies] = useState<any[]>([])\n  const [loading, setLoading] = useState(false)\n\n  // 加载概览数据\n  const loadOverviewData = async () => {\n    if (!isPremium) return\n    \n    try {\n      setLoading(true)\n      const response = await strategyApi.getStrategies()\n      \n      let strategiesList: any[] = []\n      if (response && typeof response === 'object') {\n        strategiesList = Array.isArray(response) ? response : response.strategies || []\n      }\n      \n      setStrategies(strategiesList)\n      \n      // 按照业务逻辑计算统计数据\n      // 1. 筛选出AI策略（排除指标）\n      const aiStrategies = strategiesList.filter(s => \n        !s.name.includes('指标') && \n        !s.name.includes('RSI') && \n        !s.name.includes('MACD') &&\n        !s.description?.includes('指标')\n      )\n      \n      // 2. 筛选出指标\n      const indicators = strategiesList.filter(s =>\n        s.name.includes('指标') || \n        s.name.includes('RSI') || \n        s.name.includes('MACD') ||\n        s.description?.includes('指标')\n      )\n      \n      setStats({\n        totalStrategies: aiStrategies.length, // AI生成的策略总数\n        runningStrategies: 3, // 运行中的实盘数量（从实盘交易数据获取）\n        totalTrades: 0, // 暂时模拟数据\n        totalProfit: 1234.56,\n        winRate: 68.5,\n        dailyPnl: 123.45,\n        totalIndicators: indicators.length // 新增指标数量\n      })\n      \n    } catch (error) {\n      console.error('Failed to load overview data:', error)\n      toast.error('加载概览数据失败')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    loadOverviewData()\n  }, [isPremium])\n\n  // 快捷操作\n  const quickActions = [\n    {\n      title: t('strategiesManagement'),\n      description: t('viewAndManageStrategies'),\n      icon: 'strategy',\n      color: 'blue',\n      action: () => navigate('/strategies')\n    },\n    {\n      title: t('liveTrading'),\n      description: t('startAutomatedTrading'),\n      icon: 'trading',\n      color: 'green',\n      action: () => navigate('/trading')\n    },\n    {\n      title: t('strategyBacktest'),\n      description: t('testStrategyPerformance'),\n      icon: 'backtest',\n      color: 'purple',\n      action: () => navigate('/backtest')\n    },\n    {\n      title: t('aiAssistant'),\n      description: t('getIntelligentTradingAdvice'),\n      icon: 'ai',\n      color: 'orange',\n      action: () => navigate('/ai-chat')\n    }\n  ]\n\n  const getIcon = (iconName: string) => {\n    const icons: Record<string, React.ReactNode> = {\n      strategy: (\n        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\n        </svg>\n      ),\n      trading: (\n        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\n        </svg>\n      ),\n      backtest: (\n        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" clipRule=\"evenodd\" />\n        </svg>\n      ),\n      ai: (\n        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n        </svg>\n      )\n    }\n    return icons[iconName] || icons.strategy\n  }\n\n  const getColorClasses = (color: string) => {\n    const colorMap: Record<string, { bg: string; text: string; icon: string; hover: string }> = {\n      blue: { bg: 'from-blue-50 to-blue-100', text: 'text-blue-900', icon: 'bg-blue-200 text-blue-600', hover: 'hover:from-blue-100 hover:to-blue-200' },\n      green: { bg: 'from-green-50 to-green-100', text: 'text-green-900', icon: 'bg-green-200 text-green-600', hover: 'hover:from-green-100 hover:to-green-200' },\n      purple: { bg: 'from-purple-50 to-purple-100', text: 'text-purple-900', icon: 'bg-purple-200 text-purple-600', hover: 'hover:from-purple-100 hover:to-purple-200' },\n      orange: { bg: 'from-orange-50 to-orange-100', text: 'text-orange-900', icon: 'bg-orange-200 text-orange-600', hover: 'hover:from-orange-100 hover:to-orange-200' }\n    }\n    return colorMap[color] || colorMap.blue\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 页面标题 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t('tradingOverview')}</h1>\n          <p className=\"text-gray-600 mt-1\">{t('welcomeBack')}，{user?.username}！{t('checkTradingDataAndQuickActions')}</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-600\">\n            {isConnected ? t('realTimeConnected') : t('connectionLost')}\n          </span>\n        </div>\n      </div>\n\n      {/* 统计卡片 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n        <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-xl p-4 border border-blue-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-blue-600\">{t('totalStrategies')}</p>\n              <p className=\"text-2xl font-bold text-blue-900\">{stats.totalStrategies}</p>\n            </div>\n            <div className=\"w-10 h-10 rounded-full bg-blue-200 flex items-center justify-center\">\n              {getIcon('strategy')}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-xl p-4 border border-green-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-green-600\">{t('running')}</p>\n              <p className=\"text-2xl font-bold text-green-900\">{stats.runningStrategies}</p>\n            </div>\n            <div className=\"w-10 h-10 rounded-full bg-green-200 flex items-center justify-center\">\n              {getIcon('trading')}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gradient-to-r from-indigo-50 to-indigo-100 rounded-xl p-4 border border-indigo-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-indigo-600\">指标数量</p>\n              <p className=\"text-2xl font-bold text-indigo-900\">{stats.totalIndicators}</p>\n            </div>\n            <div className=\"w-10 h-10 rounded-full bg-indigo-200 flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-indigo-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-xl p-4 border border-purple-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-purple-600\">{t('totalProfit')}</p>\n              <p className=\"text-2xl font-bold text-purple-900\">+{stats.totalProfit.toFixed(2)}</p>\n            </div>\n            <div className=\"w-10 h-10 rounded-full bg-purple-200 flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-purple-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-xl p-4 border border-orange-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-orange-600\">{t('winRate')}</p>\n              <p className=\"text-2xl font-bold text-orange-900\">{stats.winRate}%</p>\n            </div>\n            <div className=\"w-10 h-10 rounded-full bg-orange-200 flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-orange-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 快捷操作 */}\n      <div>\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">{t('quickActions')}</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {quickActions.map((action) => {\n            const colors = getColorClasses(action.color)\n            return (\n              <div\n                key={action.title}\n                onClick={action.action}\n                className={`bg-gradient-to-r ${colors.bg} rounded-xl p-6 border cursor-pointer transition-all ${colors.hover} hover:shadow-md`}\n              >\n                <div className=\"flex items-start space-x-4\">\n                  <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${colors.icon}`}>\n                    {getIcon(action.icon)}\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className={`font-semibold ${colors.text} mb-1`}>{action.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{action.description}</p>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n\n      {/* 最近策略 */}\n      <div>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">{t('recentStrategies')}</h2>\n          <button\n            onClick={() => navigate('/strategies')}\n            className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n          >\n            {t('viewAll')} →\n          </button>\n        </div>\n\n        {loading ? (\n          <div className=\"text-center py-8\">\n            <div className=\"w-12 h-12 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center animate-spin\">\n              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n              </svg>\n            </div>\n            <p className=\"text-gray-500\">{t('loadingStrategies')}</p>\n          </div>\n        ) : strategies.length > 0 ? (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {strategies.slice(0, 4).map((strategy) => (\n              <div key={strategy.id} className=\"bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-shadow p-4\">\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <h3 className=\"font-semibold text-gray-900\">{strategy.name}</h3>\n                      <span className={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${\n                        strategy.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {strategy.is_active ? t('running') : t('stopped')}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-2\">{strategy.description}</p>\n                    <div className=\"flex items-center text-xs text-gray-500\">\n                      <span>{t('tradingPair')}: {strategy.parameters?.symbol || 'N/A'}</span>\n                      <span className=\"mx-2\">•</span>\n                      <span>{t('timeframe')}: {strategy.parameters?.timeframe || 'N/A'}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex justify-end\">\n                  <button\n                    onClick={() => navigate(`/strategies`)}\n                    className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    {t('viewDetails')}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n              <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{t('noStrategies')}</h3>\n            <p className=\"text-gray-500 mb-4\">{t('createFirstStrategy')}</p>\n            {isPremium ? (\n              <button\n                onClick={() => navigate('/strategies')}\n                className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                {t('createStrategy')}\n              </button>\n            ) : (\n              <button\n                onClick={() => toast.error(t('createStrategyRequiresPremium'))}\n                className=\"inline-flex items-center px-4 py-2 bg-gray-300 text-gray-500 font-medium rounded-lg cursor-not-allowed\"\n              >\n                {t('upgradeToCreate')}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default OverviewPage","import { tradingServiceClient, handleApiResponse, handleApiError } from './client'\n\n// 实盘策略接口\nexport interface LiveStrategy {\n  id: string\n  name: string\n  description?: string\n  trading_pair: string\n  exchange: string\n  status: 'running' | 'paused' | 'stopped'\n  profit_rate: number\n  signal_count: number\n  created_at: string\n  updated_at?: string\n  win_rate?: number\n  total_trades?: number\n  max_drawdown?: number\n  sharpe_ratio?: number\n  parameters?: Record<string, any>\n}\n\n// 实盘策略统计\nexport interface LiveStrategyStats {\n  active_strategies: number\n  total_return: number\n  max_drawdown: number\n  last_trade_time: string\n  total_trades: number\n  win_rate: number\n}\n\n// 实盘策略详情\nexport interface LiveStrategyDetails extends LiveStrategy {\n  total_return: number\n  trades: TradeRecord[]\n  equity_curve: { date: string; value: number }[]\n  daily_stats: DailyStats[]\n}\n\n// 交易记录\nexport interface TradeRecord {\n  id: string\n  timestamp: string\n  side: 'buy' | 'sell'\n  price: number\n  quantity: number\n  profit_rate?: number\n  signal: string\n  pnl?: number\n}\n\n// 日统计\nexport interface DailyStats {\n  date: string\n  profit: number\n  trades: number\n  win_rate: number\n}\n\n// 实盘策略操作请求\nexport interface StrategyActionRequest {\n  action: 'start' | 'pause' | 'stop' | 'restart'\n  parameters?: Record<string, any>\n}\n\nexport const liveTradingApi = {\n  // 获取实盘策略列表\n  async getLiveStrategies(params?: {\n    page?: number\n    per_page?: number\n    status?: string\n    exchange?: string\n  }): Promise<{\n    strategies: LiveStrategy[]\n    total: number\n    page: number\n    per_page: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get('/strategies', { params })\n      const data = handleApiResponse(response)\n      \n      // 将后端数据格式转换为前端格式\n      const convertedStrategies: LiveStrategy[] = data.strategies.map((strategy: any) => ({\n        id: strategy.id.toString(),\n        name: strategy.name,\n        description: strategy.description,\n        trading_pair: strategy.parameters?.symbol || 'BTC/USDT',\n        exchange: strategy.parameters?.exchange || 'binance',\n        status: strategy.is_active ? 'running' : 'stopped',\n        profit_rate: Math.random() * 20 - 5, // 模拟收益率\n        signal_count: Math.floor(Math.random() * 50),\n        created_at: strategy.created_at,\n        win_rate: Math.random() * 100,\n        total_trades: Math.floor(Math.random() * 100),\n        parameters: strategy.parameters\n      }))\n      \n      return {\n        strategies: convertedStrategies,\n        total: data.total,\n        page: params?.page || 1,\n        per_page: params?.per_page || 20\n      }\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取实盘策略统计\n  async getLiveStrategyStats(): Promise<LiveStrategyStats> {\n    try {\n      const response = await tradingServiceClient.get('/trading/stats')\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取实盘策略详情\n  async getLiveStrategyDetails(strategyId: string): Promise<LiveStrategyDetails> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/live-details`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 执行策略操作\n  async executeStrategyAction(strategyId: string, actionRequest: StrategyActionRequest): Promise<{\n    success: boolean\n    message: string\n    new_status?: string\n  }> {\n    try {\n      const response = await tradingServiceClient.post(`/strategies/${strategyId}/action`, actionRequest)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 创建实盘策略\n  async createLiveStrategy(strategyData: {\n    name: string\n    description?: string\n    code: string\n    trading_pair: string\n    exchange: string\n    parameters: Record<string, any>\n  }): Promise<LiveStrategy> {\n    try {\n      const response = await tradingServiceClient.post('/strategies', {\n        ...strategyData,\n        type: 'live'\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 更新策略参数\n  async updateStrategyParameters(strategyId: string, parameters: Record<string, any>): Promise<{\n    success: boolean\n    message: string\n  }> {\n    try {\n      const response = await tradingServiceClient.put(`/strategies/${strategyId}/parameters`, { parameters })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取策略交易记录\n  async getStrategyTrades(strategyId: string, params?: {\n    page?: number\n    per_page?: number\n    start_date?: string\n    end_date?: string\n  }): Promise<{\n    trades: TradeRecord[]\n    total: number\n    page: number\n    per_page: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/trades`, { params })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取实盘策略性能\n  async getStrategyPerformance(strategyId: string, period?: string): Promise<{\n    profit_rate: number\n    win_rate: number\n    max_drawdown: number\n    sharpe_ratio: number\n    total_trades: number\n    avg_trade_size: number\n  }> {\n    try {\n      const response = await tradingServiceClient.get(`/strategies/${strategyId}/performance`, {\n        params: { period }\n      })\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 获取用户的实盘策略列表 (新API)\n  async getUserLiveStrategies(params?: {\n    status?: 'running' | 'paused' | 'stopped'\n  }): Promise<LiveStrategy[]> {\n    try {\n      const response = await tradingServiceClient.get('/trading/live-strategies', { params })\n      const strategies = handleApiResponse(response)\n      \n      // 转换后端数据格式为前端格式\n      return strategies.map((strategy: any) => ({\n        id: strategy.id.toString(),\n        name: strategy.name,\n        description: strategy.description || '',\n        trading_pair: strategy.parameters?.symbol || 'BTC/USDT',\n        exchange: strategy.parameters?.exchange || 'binance',\n        status: strategy.status,\n        profit_rate: strategy.profit_loss || 0,\n        signal_count: strategy.total_trades || 0,\n        created_at: strategy.created_at,\n        total_trades: strategy.total_trades || 0,\n        win_rate: Math.random() * 100, // 模拟胜率，待后端提供\n        parameters: strategy.parameters\n      }))\n    } catch (error) {\n      handleApiError(error)\n    }\n  },\n\n  // 删除已停止的实盘策略\n  async deleteLiveStrategy(liveStrategyId: string): Promise<{\n    success: boolean\n    message: string\n    deleted_id: number\n  }> {\n    try {\n      const response = await tradingServiceClient.delete(`/trading/live-strategies/${liveStrategyId}`)\n      return handleApiResponse(response)\n    } catch (error) {\n      handleApiError(error)\n    }\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useUserInfo, useWebSocketStatus, useGlobalLoading } from '../store'\nimport { useLanguageStore } from '../store/languageStore'\nimport { strategyApi } from '../services/api/strategy'\nimport { liveTradingApi } from '../services/api/liveTrading'\nimport toast from 'react-hot-toast'\n\ninterface Strategy {\n  id: number\n  name: string\n  description: string\n  code: string\n  parameters: {\n    symbol?: string\n    timeframe?: string\n    [key: string]: any\n  }\n  is_active: boolean\n  user_id: number\n  created_at: string\n  // 派生属性（用于显示）\n  status?: 'running' | 'stopped' | 'paused'\n  profit?: string\n  profitPercent?: number\n  lastUpdate?: string\n  runningTime?: string\n  totalTrades?: number\n  winRate?: number\n}\n\nconst StrategiesPage: React.FC = () => {\n  const navigate = useNavigate()\n  const { user, isPremium } = useUserInfo()\n  const { isConnected } = useWebSocketStatus()\n  const { isLoading } = useGlobalLoading()\n  const { t } = useLanguageStore()\n  \n  const [selectedStrategy, setSelectedStrategy] = useState<Strategy | null>(null)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [statusFilter, setStatusFilter] = useState<'all' | 'running' | 'stopped' | 'paused'>('all')\n  \n  // 真实策略数据\n  const [strategies, setStrategies] = useState<Strategy[]>([])\n  const [loading, setLoading] = useState(false)\n\n  // 加载策略数据\n  const loadStrategies = async () => {\n    if (!isPremium) return\n    \n    try {\n      setLoading(true)\n      // 使用新的实盘交易API\n      const liveStrategies = await liveTradingApi.getUserLiveStrategies()\n      \n      // 转换为策略页面所需的数据格式\n      const processedStrategies: Strategy[] = liveStrategies.map(liveStrategy => {\n        const profitPercent = (liveStrategy.profit_rate / 1000) || 0 // 转换为百分比\n        \n        return {\n          id: parseInt(liveStrategy.id),\n          name: liveStrategy.name,\n          description: liveStrategy.description,\n          code: '', // 实盘策略不需要显示代码\n          parameters: {\n            symbol: liveStrategy.trading_pair,\n            exchange: liveStrategy.exchange,\n            ...liveStrategy.parameters\n          },\n          is_active: liveStrategy.status !== 'stopped',\n          user_id: 9, // 当前用户ID\n          created_at: liveStrategy.created_at,\n          status: liveStrategy.status,\n          profit: profitPercent >= 0 ? `+${profitPercent.toFixed(2)}` : profitPercent.toFixed(2),\n          profitPercent,\n          lastUpdate: liveStrategy.created_at,\n          runningTime: liveStrategy.status === 'running' ? '运行中' : \n                      liveStrategy.status === 'paused' ? '已暂停' : '已停止',\n          totalTrades: liveStrategy.total_trades || 0,\n          winRate: liveStrategy.win_rate || 0\n        }\n      })\n      \n      setStrategies(processedStrategies)\n      toast.success(`加载了 ${processedStrategies.length} 个实盘策略`)\n    } catch (error) {\n      console.error('Failed to load live strategies:', error)\n      toast.error('加载实盘策略失败')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // 页面加载时获取数据\n  useEffect(() => {\n    loadStrategies()\n  }, [isPremium])\n\n  // 计算统计信息\n  const stats = {\n    total: strategies.length,\n    running: strategies.filter(s => s.status === 'running').length,\n    stopped: strategies.filter(s => s.status === 'stopped').length,\n    paused: strategies.filter(s => s.status === 'paused').length,\n  }\n\n  // 过滤策略\n  const filteredStrategies = strategies.filter(strategy => {\n    const symbol = strategy.parameters?.symbol || ''\n    const matchesSearch = strategy.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         strategy.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         symbol.toLowerCase().includes(searchQuery.toLowerCase())\n    const matchesStatus = statusFilter === 'all' || strategy.status === statusFilter\n    return matchesSearch && matchesStatus\n  })\n\n\n  const handleStartStrategy = (strategy: Strategy) => {\n    if (!isPremium) {\n      toast.error(t('startStrategyRequiresPremium'))\n      return\n    }\n    \n    setStrategies(prev => prev.map(s => \n      s.id === strategy.id \n        ? { ...s, status: 'running' as const, lastUpdate: new Date().toLocaleString('zh-CN') }\n        : s\n    ))\n    toast.success(`${strategy.name} ${t('strategyStarted')}`)\n  }\n\n  const handleStopStrategy = (strategy: Strategy) => {\n    setStrategies(prev => prev.map(s => \n      s.id === strategy.id \n        ? { ...s, status: 'stopped' as const, lastUpdate: new Date().toLocaleString('zh-CN') }\n        : s\n    ))\n    toast.success(`${strategy.name} ${t('strategyStopped')}`)\n  }\n\n  const handlePauseStrategy = (strategy: Strategy) => {\n    setStrategies(prev => prev.map(s => \n      s.id === strategy.id \n        ? { ...s, status: 'paused' as const, lastUpdate: new Date().toLocaleString('zh-CN') }\n        : s\n    ))\n    toast.success(`${strategy.name} ${t('strategyPaused')}`)\n  }\n\n  const handleDeleteStrategy = async (strategy: Strategy) => {\n    // 只允许删除已停止的实盘\n    if (strategy.status !== 'stopped') {\n      toast.error('只能删除已停止的实盘策略')\n      return\n    }\n\n    if (window.confirm(`确认删除实盘策略 \"${strategy.name}\"?\\n此操作不可撤销。`)) {\n      try {\n        await liveTradingApi.deleteLiveStrategy(strategy.id.toString())\n        setStrategies(prev => prev.filter(s => s.id !== strategy.id))\n        toast.success(`实盘策略 \"${strategy.name}\" 删除成功`)\n      } catch (error) {\n        console.error('Delete strategy failed:', error)\n        toast.error('删除实盘策略失败')\n      }\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'running': return t('runningLive')\n      case 'stopped': return t('stoppedLive')\n      case 'paused': return t('pausedLive')\n      default: return 'Unknown'\n    }\n  }\n\n\n  const handleViewLiveDetails = (strategy: Strategy) => {\n    // 跳转到实盘详情页面\n    navigate(`/strategy/${strategy.id}/live`)\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">{t('liveTrading')}</h1>\n        <p className=\"text-gray-600\">{t('monitorRunningStrategies')}</p>\n      </div>\n\n      {/* 实盘运行区域 */}\n      <div className=\"space-y-6\">\n\n        {/* 实盘统计卡片 */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-4 gap-4\">\n          <div \n            className={`bg-gradient-to-r from-blue-50 to-blue-100 rounded-xl p-4 border border-blue-200 cursor-pointer transition-all hover:shadow-md ${\n              statusFilter === 'all' ? 'ring-2 ring-blue-500 shadow-md' : ''\n            }`}\n            onClick={() => setStatusFilter('all')}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-blue-600\">{t('totalLiveStrategies')}</p>\n                <p className=\"text-2xl font-bold text-blue-900\">{stats.total}</p>\n              </div>\n              <div className=\"w-10 h-10 rounded-full bg-blue-200 flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n            {statusFilter === 'all' && (\n              <div className=\"mt-2\">\n                <p className=\"text-xs text-blue-600 font-medium\">{t('selected')}</p>\n              </div>\n            )}\n          </div>\n\n          <div \n            className={`bg-gradient-to-r from-green-50 to-green-100 rounded-xl p-4 border border-green-200 cursor-pointer transition-all hover:shadow-md ${\n              statusFilter === 'running' ? 'ring-2 ring-green-500 shadow-md' : ''\n            }`}\n            onClick={() => setStatusFilter('running')}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-green-600\">{t('runningLive')}</p>\n                <p className=\"text-2xl font-bold text-green-900\">{stats.running}</p>\n              </div>\n              <div className=\"w-10 h-10 rounded-full bg-green-200 flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n            {statusFilter === 'running' && (\n              <div className=\"mt-2\">\n                <p className=\"text-xs text-green-600 font-medium\">{t('selected')}</p>\n              </div>\n            )}\n          </div>\n\n          <div \n            className={`bg-gradient-to-r from-yellow-50 to-yellow-100 rounded-xl p-4 border border-yellow-200 cursor-pointer transition-all hover:shadow-md ${\n              statusFilter === 'paused' ? 'ring-2 ring-yellow-500 shadow-md' : ''\n            }`}\n            onClick={() => setStatusFilter('paused')}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-yellow-600\">{t('pausedLive')}</p>\n                <p className=\"text-2xl font-bold text-yellow-900\">{stats.paused}</p>\n              </div>\n              <div className=\"w-10 h-10 rounded-full bg-yellow-200 flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-yellow-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n            {statusFilter === 'paused' && (\n              <div className=\"mt-2\">\n                <p className=\"text-xs text-yellow-600 font-medium\">{t('selected')}</p>\n              </div>\n            )}\n          </div>\n\n          <div \n            className={`bg-gradient-to-r from-red-50 to-red-100 rounded-xl p-4 border border-red-200 cursor-pointer transition-all hover:shadow-md ${\n              statusFilter === 'stopped' ? 'ring-2 ring-red-500 shadow-md' : ''\n            }`}\n            onClick={() => setStatusFilter('stopped')}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-red-600\">{t('stoppedLive')}</p>\n                <p className=\"text-2xl font-bold text-red-900\">{stats.stopped}</p>\n              </div>\n              <div className=\"w-10 h-10 rounded-full bg-red-200 flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-red-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n            {statusFilter === 'stopped' && (\n              <div className=\"mt-2\">\n                <p className=\"text-xs text-red-600 font-medium\">{t('selected')}</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 实盘搜索和筛选 */}\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"relative flex-1\">\n            <input\n              type=\"text\"\n              placeholder={t('searchStrategies')}\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n            />\n            <svg className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n\n          <select\n            value={statusFilter}\n            onChange={(e) => setStatusFilter(e.target.value as any)}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n          >\n            <option value=\"all\">{t('allStatus')}</option>\n            <option value=\"running\">{t('runningLive')}</option>\n            <option value=\"paused\">{t('pausedLive')}</option>\n            <option value=\"stopped\">{t('stoppedLive')}</option>\n          </select>\n        </div>\n\n        {/* 当前筛选状态显示 */}\n        {statusFilter !== 'all' && (\n          <div className=\"mb-4\">\n            <div className=\"inline-flex items-center px-3 py-2 rounded-lg bg-gray-100 text-gray-700\">\n              <span className=\"text-sm\">{t('currentFilter')}: </span>\n              <span className={`ml-2 px-2 py-1 rounded text-xs font-medium ${\n                statusFilter === 'running' ? 'bg-green-100 text-green-800' :\n                statusFilter === 'paused' ? 'bg-yellow-100 text-yellow-800' :\n                'bg-red-100 text-red-800'\n              }`}>\n                {statusFilter === 'running' ? t('runningLive') : \n                 statusFilter === 'paused' ? t('pausedLive') : t('stoppedLive')}\n              </span>\n              <button\n                onClick={() => setStatusFilter('all')}\n                className=\"ml-2 text-gray-500 hover:text-gray-700\"\n                title={t('clearFilter')}\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* 实盘列表 */}\n        <div>\n          {loading ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-20 h-20 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center animate-spin\">\n                <svg className=\"w-10 h-10 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{t('loadingStrategies')}</h3>\n              <p className=\"text-gray-500\">{t('monitorRunningStrategies')}</p>\n            </div>\n          ) : filteredStrategies.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-20 h-20 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{t('noStrategiesMessage')}</h3>\n              <p className=\"text-gray-500 mb-6\">{t('createFirstStrategyMessage')}</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {filteredStrategies.map((strategy) => (\n                <div \n                  key={strategy.id} \n                  className=\"bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-shadow cursor-pointer\"\n                  onClick={() => handleViewLiveDetails(strategy)}\n                >\n                  <div className=\"p-6\">\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-3 mb-2\">\n                          <h3 className=\"text-lg font-semibold text-gray-900\">{strategy.name}</h3>\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            strategy.status === 'running' ? 'bg-green-100 text-green-800' :\n                            strategy.status === 'paused' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-red-100 text-red-800'\n                          }`}>\n                            {getStatusText(strategy.status)}\n                          </span>\n                        </div>\n                        <p className=\"text-gray-600 text-sm mb-3\">{strategy.description}</p>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                      <div>\n                        <p className=\"text-xs text-gray-500 mb-1\">{t('tradingPair')}</p>\n                        <p className=\"font-medium\">{strategy.parameters?.symbol || 'N/A'}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs text-gray-500 mb-1\">{t('profitLoss')}</p>\n                        <p className={`font-medium ${strategy.profitPercent >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                          {strategy.profit} ({strategy.profitPercent >= 0 ? '+' : ''}{strategy.profitPercent}%)\n                        </p>\n                      </div>\n                      {strategy.runningTime && (\n                        <div>\n                          <p className=\"text-xs text-gray-500 mb-1\">{t('runningTime')}</p>\n                          <p className=\"font-medium\">{strategy.runningTime}</p>\n                        </div>\n                      )}\n                      {strategy.totalTrades !== undefined && (\n                        <div>\n                          <p className=\"text-xs text-gray-500 mb-1\">{t('totalTrades')}</p>\n                          <p className=\"font-medium\">{strategy.totalTrades}次</p>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                      <div className=\"flex items-center space-x-2\">\n                        {strategy.status === 'stopped' ? (\n                          <>\n                            <button\n                              onClick={(e) => {e.stopPropagation(); handleStartStrategy(strategy)}}\n                              disabled={!isPremium}\n                              className={`px-3 py-1.5 rounded text-sm font-medium transition-colors ${\n                                isPremium\n                                  ? 'bg-green-100 text-green-700 hover:bg-green-200'\n                                  : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                              }`}\n                            >\n                              {t('start')}\n                            </button>\n                            <button\n                              onClick={(e) => {e.stopPropagation(); handleDeleteStrategy(strategy)}}\n                              className=\"px-3 py-1.5 bg-red-100 text-red-700 rounded text-sm font-medium hover:bg-red-200 transition-colors\"\n                              title=\"删除实盘策略\"\n                            >\n                              删除\n                            </button>\n                          </>\n                        ) : (\n                          <>\n                            <button\n                              onClick={(e) => {e.stopPropagation(); handleStopStrategy(strategy)}}\n                              className=\"px-3 py-1.5 bg-red-100 text-red-700 rounded text-sm font-medium hover:bg-red-200 transition-colors\"\n                            >\n                              {t('stop')}\n                            </button>\n                            {strategy.status === 'running' && (\n                              <button\n                                onClick={(e) => {e.stopPropagation(); handlePauseStrategy(strategy)}}\n                                className=\"px-3 py-1.5 bg-yellow-100 text-yellow-700 rounded text-sm font-medium hover:bg-yellow-200 transition-colors\"\n                              >\n                                {t('pause')}\n                              </button>\n                            )}\n                            {strategy.status === 'paused' && (\n                              <button\n                                onClick={(e) => {e.stopPropagation(); handleStartStrategy(strategy)}}\n                                disabled={!isPremium}\n                                className={`px-3 py-1.5 rounded text-sm font-medium transition-colors ${\n                                  isPremium\n                                    ? 'bg-green-100 text-green-700 hover:bg-green-200'\n                                    : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                                }`}\n                              >\n                                {t('start')}\n                              </button>\n                            )}\n                          </>\n                        )}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {t('viewDetails')}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StrategiesPage","import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useUserInfo } from '../store'\nimport { strategyApi } from '../services/api/strategy'\nimport type { TradeRecord, Strategy as ApiStrategy } from '@/types/strategy'\nimport toast from 'react-hot-toast'\n\n// Using TradeRecord from types/strategy.ts directly\n\ninterface LiveStats {\n  total_trades: number\n  buy_volume: number\n  sell_volume: number\n  total_fees: number\n  profit_loss: number\n  profit_percentage: number\n  avg_price: number\n  first_trade: string | null\n  last_trade: string | null\n}\n\ninterface Performance {\n  total_return: number\n  win_rate: number\n  max_drawdown: number\n  sharpe_ratio: number\n}\n\n// Using ApiStrategy from types/strategy.ts\n\ninterface LiveDetails {\n  strategy: ApiStrategy\n  live_stats: LiveStats\n  trades: TradeRecord[]\n  performance: Performance\n  status: string\n}\n\nconst StrategyLiveDetailsPage: React.FC = () => {\n  const { strategyId } = useParams<{ strategyId: string }>()\n  const navigate = useNavigate()\n  const { user, isPremium } = useUserInfo()\n\n  const [liveDetails, setLiveDetails] = useState<LiveDetails | null>(null)\n  const [allTrades, setAllTrades] = useState<TradeRecord[]>([])\n  const [loading, setLoading] = useState(true)\n  const [tradesLoading, setTradesLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [hasMoreTrades, setHasMoreTrades] = useState(true)\n\n  const pageSize = 20\n\n  // 加载实盘详情\n  const loadLiveDetails = async () => {\n    if (!strategyId) return\n\n    try {\n      setLoading(true)\n      const response = await strategyApi.getStrategyLiveDetails(parseInt(strategyId))\n      setLiveDetails(response)\n    } catch (error) {\n      console.error('Failed to load live details:', error)\n      toast.error('加载实盘详情失败')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // 加载交易记录\n  const loadTrades = async (page: number = 0, append: boolean = false) => {\n    if (!strategyId) return\n\n    try {\n      setTradesLoading(true)\n      const response = await strategyApi.getStrategyTrades(\n        strategyId,\n        {\n          page: page + 1, // API expects 1-based pagination\n          per_page: pageSize\n        }\n      )\n      \n      if (append) {\n        setAllTrades(prev => [...prev, ...response.items])\n      } else {\n        setAllTrades(response.items)\n      }\n      \n      // Handle pagination response structure\n      const hasMore = response.items ? response.items.length === pageSize : false\n      setHasMoreTrades(hasMore)\n    } catch (error) {\n      console.error('Failed to load trades:', error)\n      toast.error('加载交易记录失败')\n    } finally {\n      setTradesLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (!isPremium) {\n      toast.error('查看实盘详情需要高级版本')\n      navigate('/strategies')\n      return\n    }\n\n    loadLiveDetails()\n    loadTrades()\n  }, [strategyId, isPremium, navigate])\n\n  // 加载更多交易记录\n  const handleLoadMoreTrades = () => {\n    const nextPage = currentPage + 1\n    setCurrentPage(nextPage)\n    loadTrades(nextPage, true)\n  }\n\n  // 格式化数字\n  const formatNumber = (num: number, decimals: number = 2) => {\n    return num.toFixed(decimals)\n  }\n\n  // 格式化时间\n  const formatTime = (dateString: string) => {\n    return new Date(dateString).toLocaleString('zh-CN')\n  }\n\n  // 获取交易类型样式\n  const getTradeSideStyle = (side: string) => {\n    return side === 'BUY' \n      ? 'bg-green-100 text-green-800'\n      : 'bg-red-100 text-red-800'\n  }\n\n  // 获取收益样式\n  const getProfitStyle = (profit: number) => {\n    return profit >= 0 \n      ? 'text-green-600'\n      : 'text-red-600'\n  }\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center py-12\">\n          <div className=\"w-20 h-20 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center animate-spin\">\n            <svg className=\"w-10 h-10 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">加载实盘详情中...</h3>\n          <p className=\"text-gray-500\">正在获取策略运行数据</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!liveDetails) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center py-12\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">实盘详情不存在</h3>\n          <button\n            onClick={() => navigate('/strategies')}\n            className=\"text-blue-600 hover:text-blue-800\"\n          >\n            返回策略列表\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  const { strategy, live_stats, performance, status } = liveDetails\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* 页面标题和导航 */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center space-x-4 mb-4\">\n          <button\n            onClick={() => navigate('/strategies')}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">{strategy.name}</h1>\n            <p className=\"text-gray-600\">实盘运行详情</p>\n          </div>\n          <div className=\"flex-1\"></div>\n          <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n            status === 'running' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n          }`}>\n            {status === 'running' ? '运行中' : '已停止'}\n          </span>\n        </div>\n        <p className=\"text-gray-600\">{strategy.description}</p>\n      </div>\n\n      {/* 统计数据卡片 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">总收益</p>\n              <p className={`text-2xl font-bold ${getProfitStyle(live_stats.profit_loss)}`}>\n                {formatNumber(live_stats.profit_loss, 4)}\n              </p>\n              <p className={`text-sm ${getProfitStyle(live_stats.profit_percentage)}`}>\n                {live_stats.profit_percentage >= 0 ? '+' : ''}{formatNumber(live_stats.profit_percentage)}%\n              </p>\n            </div>\n            <div className=\"w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">交易次数</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{live_stats.total_trades}</p>\n              <p className=\"text-sm text-gray-500\">总成交量</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-full bg-green-100 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">买入量</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{formatNumber(live_stats.buy_volume, 4)}</p>\n              <p className=\"text-sm text-gray-500\">总买入金额</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-full bg-yellow-100 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-yellow-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">手续费</p>\n              <p className=\"text-2xl font-bold text-red-600\">{formatNumber(live_stats.total_fees, 4)}</p>\n              <p className=\"text-sm text-gray-500\">总费用</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-full bg-red-100 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-red-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 性能指标 */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">性能指标</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">总回报率</p>\n            <p className={`text-xl font-bold ${getProfitStyle(performance.total_return)}`}>\n              {performance.total_return >= 0 ? '+' : ''}{formatNumber(performance.total_return)}%\n            </p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">胜率</p>\n            <p className=\"text-xl font-bold text-gray-900\">{formatNumber(performance.win_rate)}%</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">最大回撤</p>\n            <p className=\"text-xl font-bold text-red-600\">{formatNumber(performance.max_drawdown)}%</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">夏普比率</p>\n            <p className=\"text-xl font-bold text-gray-900\">{formatNumber(performance.sharpe_ratio, 3)}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* 交易记录 */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">交易记录</h3>\n          <p className=\"text-sm text-gray-600\">最近的实盘交易明细</p>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  时间\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  交易对\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  方向\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  数量\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  价格\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  总额\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  手续费\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  订单ID\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {allTrades.length === 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-6 py-12 text-center text-gray-500\">\n                    暂无交易记录\n                  </td>\n                </tr>\n              ) : (\n                allTrades.map((trade) => (\n                  <tr key={trade.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatTime(trade.timestamp)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {trade.symbol}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getTradeSideStyle(trade.side)}`}>\n                        {trade.side}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatNumber(trade.quantity, 6)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatNumber(trade.price, 4)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatNumber(trade.total_amount, 4)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-600\">\n                      {formatNumber(trade.fee, 6)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {trade.order_id || 'N/A'}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* 加载更多按钮 */}\n        {hasMoreTrades && allTrades.length > 0 && (\n          <div className=\"p-6 border-t border-gray-200 text-center\">\n            <button\n              onClick={handleLoadMoreTrades}\n              disabled={tradesLoading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-blue-300 disabled:cursor-not-allowed\"\n            >\n              {tradesLoading ? '加载中...' : '加载更多'}\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* 策略信息 */}\n      {live_stats.first_trade && (\n        <div className=\"mt-8 bg-gray-50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">运行信息</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <p className=\"text-sm text-gray-600\">首次交易</p>\n              <p className=\"font-medium\">{formatTime(live_stats.first_trade)}</p>\n            </div>\n            {live_stats.last_trade && (\n              <div>\n                <p className=\"text-sm text-gray-600\">最新交易</p>\n                <p className=\"font-medium\">{formatTime(live_stats.last_trade)}</p>\n              </div>\n            )}\n            <div>\n              <p className=\"text-sm text-gray-600\">平均成交价</p>\n              <p className=\"font-medium\">{formatNumber(live_stats.avg_price, 4)}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default StrategyLiveDetailsPage","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useUserInfo, useWebSocketStatus, useGlobalLoading } from '../store'\nimport { liveTradingApi, LiveStrategy, LiveStrategyStats, StrategyActionRequest } from '../services/api'\nimport toast from 'react-hot-toast'\n\nconst LiveStrategiesPage: React.FC = () => {\n  const navigate = useNavigate()\n  const { user, isPremium } = useUserInfo()\n  const { isConnected } = useWebSocketStatus()\n  const { isLoading } = useGlobalLoading()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const [selectedStrategy, setSelectedStrategy] = useState<string | null>(null)\n  const [showParametersModal, setShowParametersModal] = useState(false)\n  const [liveStrategies, setLiveStrategies] = useState<LiveStrategy[]>([])\n  const [strategyStats, setStrategyStats] = useState<LiveStrategyStats | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  // 加载实盘策略数据\n  useEffect(() => {\n    const loadLiveStrategiesData = async () => {\n      try {\n        setLoading(true)\n        \n        // 并行加载策略列表和统计数据\n        const [strategiesResponse, statsResponse] = await Promise.all([\n          liveTradingApi.getLiveStrategies({ per_page: 100 }),\n          liveTradingApi.getLiveStrategyStats()\n        ])\n        \n        setLiveStrategies(strategiesResponse.strategies)\n        setStrategyStats(statsResponse)\n        \n      } catch (error) {\n        console.error('加载实盘策略数据失败:', error)\n        toast.error('加载实盘策略数据失败，使用模拟数据')\n        \n        // 加载失败时使用模拟数据\n        setLiveStrategies([\n          {\n            id: '1',\n            name: 'EMA交叉策略',\n            trading_pair: 'BTC/USDT',\n            exchange: 'binance',\n            status: 'running',\n            profit_rate: 8.2,\n            signal_count: 16,\n            created_at: '2024-05-10',\n            win_rate: 68.4,\n            total_trades: 16\n          },\n          {\n            id: '2',\n            name: 'RSI超买超卖策略',\n            trading_pair: 'ETH/USDT',\n            exchange: 'okx',\n            status: 'paused',\n            profit_rate: 5.7,\n            signal_count: 12,\n            created_at: '2024-05-12'\n          }\n        ])\n        setStrategyStats({\n          active_strategies: 1,\n          total_return: 15.8,\n          max_drawdown: -6.3,\n          last_trade_time: '2小时前',\n          total_trades: 28,\n          win_rate: 65.2\n        })\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadLiveStrategiesData()\n  }, [])\n\n  // 策略操作处理\n  const handleStrategyAction = async (strategyId: string, action: 'pause' | 'stop' | 'start') => {\n    try {\n      const actionRequest: StrategyActionRequest = { action: action === 'start' ? 'start' : action }\n      const response = await liveTradingApi.executeStrategyAction(strategyId, actionRequest)\n      \n      if (response.success) {\n        toast.success(`策略${action === 'pause' ? '已暂停' : action === 'stop' ? '已停止' : '已启动'}`)\n        \n        // 更新本地状态\n        setLiveStrategies(prev => prev.map(strategy => \n          strategy.id === strategyId \n            ? { ...strategy, status: response.new_status as any || action }\n            : strategy\n        ))\n      } else {\n        toast.error(response.message || '操作失败')\n      }\n    } catch (error) {\n      console.error('策略操作失败:', error)\n      toast.error('策略操作失败，请稍后重试')\n    }\n  }\n\n  // 获取状态样式\n  const getStatusBadge = (status: string) => {\n    const styles = {\n      running: 'bg-green-50 text-green-700 border-green-200',\n      paused: 'bg-yellow-50 text-yellow-700 border-yellow-200',\n      stopped: 'bg-gray-50 text-gray-700 border-gray-200'\n    }\n    const labels = {\n      running: '运行中',\n      paused: '已暂停',\n      stopped: '已停止'\n    }\n    return (\n      <span className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium border ${styles[status as keyof typeof styles]}`}>\n        {labels[status as keyof typeof labels]}\n      </span>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 页面容器 - 基于原型设计 */}\n      <div className=\"w-full max-w-7xl min-h-screen bg-white rounded-xl shadow-xl border border-gray-200 mx-auto\">\n        \n        {/* 头部导航 */}\n        <header className=\"py-4 px-8 flex justify-between border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-7 h-7 mr-3 flex items-center justify-center\">\n              <svg viewBox=\"0 0 24 24\" className=\"w-full h-full\" style={{color: '#1a3d7c'}}>\n                <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                <path d=\"M8 12h8M12 8v8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n              </svg>\n            </div>\n            <h1 className=\"text-xl font-bold\" style={{ color: '#1a3d7c' }}>Trademe</h1>\n          </div>\n          \n          <nav className=\"flex gap-2\">\n            <button onClick={() => navigate('/')} className=\"px-4 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-lg\">首页</button>\n            <button className=\"px-4 py-2 bg-blue-600 text-white font-medium rounded-lg\">策略交易</button>\n            <button onClick={() => navigate('/trading')} className=\"px-4 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-lg\">图表交易</button>\n            <button onClick={() => navigate('/api-keys')} className=\"px-4 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-lg\">API管理</button>\n            <button className=\"px-4 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-lg\">交易心得</button>\n            <button onClick={() => navigate('/profile')} className=\"px-4 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-lg\">账户中心</button>\n          </nav>\n          \n          <div className=\"flex items-center\">\n            <div className=\"w-9 h-9 rounded-full bg-gray-200 overflow-hidden\">\n              {user?.avatar_url ? (\n                <img src={user.avatar_url} alt=\"User avatar\" className=\"w-full h-full object-cover\" />\n              ) : (\n                <div className=\"w-full h-full flex items-center justify-center bg-blue-100 text-blue-600 font-medium\">\n                  {user?.username?.charAt(0).toUpperCase() || 'U'}\n                </div>\n              )}\n            </div>\n          </div>\n        </header>\n\n        <div className=\"p-8\">\n          {/* 加载状态 */}\n          {loading && (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n              <span className=\"ml-2 text-gray-600\">加载实盘策略数据中...</span>\n            </div>\n          )}\n          \n          {!loading && (\n            <>\n          {/* 面包屑导航 - 基于原型 */}\n          <div className=\"flex items-center mb-6\">\n            <button onClick={() => navigate('/strategies')} className=\"text-blue-600 hover:underline flex items-center mr-2\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n              返回策略列表\n            </button>\n            <span className=\"text-gray-500\">/ 实盘管理</span>\n          </div>\n\n          <div className=\"mb-6\">\n            <h2 className=\"text-2xl font-bold mb-2\" style={{ color: '#1a3d7c' }}>实盘策略管理</h2>\n            <p className=\"text-gray-500\">管理您当前运行中的实盘策略</p>\n          </div>\n          \n          {/* 策略概览卡片 - 基于原型的4列布局 */}\n          <div className=\"grid grid-cols-4 gap-6 mb-8\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex items-center\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4\" style={{backgroundColor: '#e9f1fe'}}>\n                <svg className=\"w-6 h-6\" style={{color: '#1a3d7c'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 mb-1\">活跃策略</h3>\n                <p className=\"text-2xl font-bold\">{strategyStats?.active_strategies || 0}</p>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex items-center\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4\" style={{backgroundColor: '#e9faf3'}}>\n                <svg className=\"w-6 h-6\" style={{color: '#21ce90'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 mb-1\">总收益率</h3>\n                <p className=\"text-2xl font-bold\">\n                  <span className=\"bg-green-50 text-green-600 px-2 py-1 rounded\">+{strategyStats?.total_return || 0}%</span>\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex items-center\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4\" style={{backgroundColor: '#f8f3d6'}}>\n                <svg className=\"w-6 h-6\" style={{color: '#f0b90b'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 mb-1\">最大回撤</h3>\n                <p className=\"text-2xl font-bold\">\n                  <span className=\"bg-red-50 text-red-600 px-2 py-1 rounded\">{strategyStats?.max_drawdown || 0}%</span>\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex items-center\">\n              <div className=\"w-12 h-12 rounded-lg flex items-center justify-center mr-4\" style={{backgroundColor: '#fef1f1'}}>\n                <svg className=\"w-6 h-6\" style={{color: '#f53d3d'}} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-sm text-gray-500 mb-1\">上次交易</h3>\n                <p className=\"text-lg font-bold\">{strategyStats?.last_trade_time || '暂无'}</p>\n              </div>\n            </div>\n          </div>\n          \n          {/* 实盘策略表格 */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-bold\" style={{ color: '#1a3d7c' }}>实盘策略列表</h2>\n              <div className=\"flex\">\n                <button className=\"bg-blue-600 text-white rounded-lg px-4 py-2 font-medium hover:bg-blue-700 transition-colors flex items-center mr-2\">\n                  <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  添加策略\n                </button>\n                <input \n                  type=\"text\" \n                  className=\"border border-gray-200 bg-gray-50 rounded-lg px-4 py-2 w-64 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\" \n                  placeholder=\"搜索策略...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">策略名称</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">交易对</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">交易所</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">状态</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">收益率</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">信号数量</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">创建时间</th>\n                    <th className=\"bg-gray-50 border-b border-gray-200 px-4 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider\">操作</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {liveStrategies.filter(strategy => \n                    strategy.name.toLowerCase().includes(searchQuery.toLowerCase())\n                  ).map((strategy) => (\n                    <tr \n                      key={strategy.id} \n                      className=\"cursor-pointer hover:bg-blue-50 border-b border-gray-100\"\n                      onClick={() => setSelectedStrategy(selectedStrategy === strategy.id ? null : strategy.id)}\n                    >\n                      <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">{strategy.name}</td>\n                      <td className=\"px-4 py-3 text-sm text-gray-600\">{strategy.trading_pair}</td>\n                      <td className=\"px-4 py-3 text-sm text-gray-600\">{strategy.exchange}</td>\n                      <td className=\"px-4 py-3 text-sm\">{getStatusBadge(strategy.status)}</td>\n                      <td className=\"px-4 py-3 text-sm\">\n                        <span className={`px-2 py-1 rounded ${\n                          strategy.profit_rate > 0 ? 'bg-green-50 text-green-600' : 'bg-red-50 text-red-600'\n                        }`}>\n                          {strategy.profit_rate > 0 ? '+' : ''}{strategy.profit_rate}%\n                        </span>\n                      </td>\n                      <td className=\"px-4 py-3 text-sm text-gray-600\">{strategy.signal_count}</td>\n                      <td className=\"px-4 py-3 text-sm text-gray-600\">{strategy.created_at}</td>\n                      <td className=\"px-4 py-3 text-sm\">\n                        <div className=\"flex space-x-2\">\n                          {strategy.status === 'running' ? (\n                            <button\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                handleStrategyAction(strategy.id, 'pause')\n                              }}\n                              className=\"text-blue-600 hover:text-blue-800\"\n                            >\n                              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6\" />\n                              </svg>\n                            </button>\n                          ) : (\n                            <button\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                handleStrategyAction(strategy.id, 'start')\n                              }}\n                              className=\"text-green-600 hover:text-green-800\"\n                            >\n                              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293H15\" />\n                              </svg>\n                            </button>\n                          )}\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleStrategyAction(strategy.id, 'stop')\n                            }}\n                            className=\"text-red-600 hover:text-red-800\"\n                          >\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 10h6v4H9z\" />\n                            </svg>\n                          </button>\n                          <button className=\"text-gray-600 hover:text-gray-800\">\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* 策略详情区域 - 当选中策略时显示 */}\n          {selectedStrategy && (\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex justify-between items-start mb-6\">\n                <div>\n                  <h2 className=\"text-xl font-bold mb-2\" style={{ color: '#1a3d7c' }}>\n                    {liveStrategies.find(s => s.id === selectedStrategy)?.name} 详情\n                  </h2>\n                  <div className=\"flex items-center space-x-4\">\n                    <span className=\"text-sm text-gray-600\">\n                      {liveStrategies.find(s => s.id === selectedStrategy)?.trading_pair}\n                    </span>\n                    <span className=\"text-sm text-gray-600\">\n                      {liveStrategies.find(s => s.id === selectedStrategy)?.exchange}\n                    </span>\n                    {getStatusBadge(liveStrategies.find(s => s.id === selectedStrategy)?.status || 'stopped')}\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button className=\"border border-blue-600 text-blue-600 rounded-lg px-4 py-2 text-sm font-medium hover:bg-blue-50\">\n                    暂停\n                  </button>\n                  <button className=\"border border-red-600 text-red-600 rounded-lg px-4 py-2 text-sm font-medium hover:bg-red-50\">\n                    终止\n                  </button>\n                </div>\n              </div>\n              \n              {/* 策略统计卡片 */}\n              <div className=\"grid grid-cols-3 gap-6 mb-6\">\n                <div className=\"p-4 border border-gray-200 rounded-lg\">\n                  <p className=\"text-gray-500 mb-2 text-sm\">总收益率</p>\n                  <p className=\"text-2xl font-bold\">\n                    <span className=\"bg-green-50 text-green-600 px-2 py-1 rounded\">\n                      +{liveStrategies.find(s => s.id === selectedStrategy)?.profit_rate}%\n                    </span>\n                  </p>\n                </div>\n                <div className=\"p-4 border border-gray-200 rounded-lg\">\n                  <p className=\"text-gray-500 mb-2 text-sm\">胜率</p>\n                  <p className=\"text-2xl font-bold\">\n                    {liveStrategies.find(s => s.id === selectedStrategy)?.win_rate || 0}%\n                  </p>\n                </div>\n                <div className=\"p-4 border border-gray-200 rounded-lg\">\n                  <p className=\"text-gray-500 mb-2 text-sm\">交易次数</p>\n                  <p className=\"text-2xl font-bold\">\n                    {liveStrategies.find(s => s.id === selectedStrategy)?.total_trades || 0}\n                  </p>\n                </div>\n              </div>\n              \n              {/* 策略收益图表占位符 */}\n              <div className=\"mb-6\">\n                <h3 className=\"font-bold mb-4\">策略收益曲线</h3>\n                <div className=\"h-64 bg-gray-50 rounded-lg border border-gray-200 flex items-center justify-center\">\n                  <p className=\"text-gray-500\">📈 收益曲线图表（需要ECharts集成）</p>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* 策略参数设置 */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h2 className=\"text-xl font-bold mb-6\" style={{ color: '#1a3d7c' }}>策略参数设置</h2>\n            \n            <div className=\"grid grid-cols-2 gap-6\">\n              <div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">策略类型</label>\n                  <select className=\"w-full border border-gray-200 bg-gray-50 rounded-lg px-4 py-3 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\">\n                    <option>EMA交叉策略</option>\n                    <option>RSI超买超卖策略</option>\n                    <option>布林带突破策略</option>\n                    <option>MACD背离策略</option>\n                  </select>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">交易对</label>\n                  <select className=\"w-full border border-gray-200 bg-gray-50 rounded-lg px-4 py-3 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\">\n                    <option>BTC/USDT</option>\n                    <option>ETH/USDT</option>\n                    <option>SOL/USDT</option>\n                    <option>DOGE/USDT</option>\n                  </select>\n                </div>\n                \n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">交易所</label>\n                  <select className=\"w-full border border-gray-200 bg-gray-50 rounded-lg px-4 py-3 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\">\n                    <option>币安</option>\n                    <option>OKX</option>\n                    <option>火币</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">EMA短周期</label>\n                  <input \n                    type=\"number\" \n                    className=\"w-full border border-gray-200 bg-gray-50 rounded-lg px-4 py-3 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\" \n                    defaultValue=\"10\"\n                  />\n                </div>\n                \n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">EMA长周期</label>\n                  <input \n                    type=\"number\" \n                    className=\"w-full border border-gray-200 bg-gray-50 rounded-lg px-4 py-3 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\" \n                    defaultValue=\"50\"\n                  />\n                </div>\n                \n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">止损比例</label>\n                  <div className=\"relative\">\n                    <input \n                      type=\"number\" \n                      className=\"w-full border border-gray-200 bg-gray-50 rounded-lg px-4 py-3 pr-8 text-sm focus:border-blue-600 focus:outline-none focus:bg-white\" \n                      defaultValue=\"1.5\"\n                    />\n                    <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 text-sm\">%</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"border-t border-gray-200 pt-6 mt-6 flex justify-end\">\n              <button className=\"border border-gray-300 rounded-lg px-4 py-2 text-gray-700 font-medium mr-3 hover:bg-gray-50\">\n                取消\n              </button>\n              <button className=\"bg-blue-600 text-white rounded-lg px-4 py-2 font-medium hover:bg-blue-700 transition-colors\">\n                更新策略参数\n              </button>\n            </div>\n          </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LiveStrategiesPage","import React, { ReactNode, useEffect } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\nimport { useAuthStore } from '../../store/authStore'\nimport LoadingSpinner from './LoadingSpinner'\n\ninterface ProtectedRouteProps {\n  children: ReactNode\n  requireMembership?: 'basic' | 'premium' | 'professional'\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  children, \n  requireMembership \n}) => {\n  const location = useLocation()\n  const { isAuthenticated, isLoading, user, checkAuth } = useAuthStore()\n\n  useEffect(() => {\n    // 如果没有认证状态，尝试检查认证\n    if (!isAuthenticated && !isLoading) {\n      checkAuth()\n    }\n  }, [isAuthenticated, isLoading, checkAuth])\n\n  // 正在加载中\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    )\n  }\n\n  // 未认证，重定向到登录页\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />\n  }\n\n  // 检查会员等级要求\n  if (requireMembership && user) {\n    const membershipLevels = {\n      basic: 1,\n      premium: 2,\n      professional: 3\n    }\n    \n    const userLevel = membershipLevels[user.membership_level] || 0\n    const requiredLevel = membershipLevels[requireMembership] || 0\n    \n    if (userLevel < requiredLevel) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n          <div className=\"text-center\">\n            <div className=\"mb-4\">\n              <div className=\"w-16 h-16 mx-auto bg-yellow-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-8 h-8 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">需要升级会员</h3>\n            <p className=\"text-gray-500 mb-4\">\n              此功能需要 {requireMembership === 'premium' ? '高级版' : '专业版'} 会员权限\n            </p>\n            <button \n              onClick={() => window.location.href = '/profile/membership'}\n              className=\"btn btn-primary btn-md\"\n            >\n              升级会员\n            </button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return <>{children}</>\n}\n\nexport default ProtectedRoute","import React, { InputHTMLAttributes, forwardRef } from 'react'\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  icon?: React.ReactNode\n  iconPosition?: 'left' | 'right'\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(({\n  label,\n  error,\n  helperText,\n  icon,\n  iconPosition = 'left',\n  className = '',\n  ...props\n}, ref) => {\n  const hasIcon = !!icon\n  const isError = !!error\n  \n  const inputClasses = `\n    input\n    ${hasIcon && iconPosition === 'left' ? 'pl-10' : ''}\n    ${hasIcon && iconPosition === 'right' ? 'pr-10' : ''}\n    ${isError ? 'border-red-300 focus-visible:ring-red-500' : ''}\n    ${className}\n  `\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          {label}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        {hasIcon && iconPosition === 'left' && (\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <span className=\"text-gray-400 sm:text-sm\">\n              {icon}\n            </span>\n          </div>\n        )}\n        \n        <input\n          ref={ref}\n          className={inputClasses}\n          {...props}\n        />\n        \n        {hasIcon && iconPosition === 'right' && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <span className=\"text-gray-400 sm:text-sm\">\n              {icon}\n            </span>\n          </div>\n        )}\n      </div>\n      \n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">\n          {error}\n        </p>\n      )}\n      \n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-500\">\n          {helperText}\n        </p>\n      )}\n    </div>\n  )\n})\n\nInput.displayName = 'Input'\n\nexport default Input","/**\n * 格式化数字为货币格式\n * @param value 数字值\n * @param currency 货币符号，默认为空\n * @param decimals 小数位数，默认为2\n * @returns 格式化后的货币字符串\n */\nexport const formatCurrency = (\n  value: number,\n  currency = '',\n  decimals = 2\n): string => {\n  const formatted = new Intl.NumberFormat('zh-CN', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value)\n  \n  return currency ? `${currency}${formatted}` : formatted\n}\n\n/**\n * 格式化数字为百分比\n * @param value 数字值（0-1之间或已经是百分比数值）\n * @param decimals 小数位数，默认为1\n * @param isAlreadyPercent 是否已经是百分比数值（如传入12.5表示12.5%）\n * @returns 格式化后的百分比字符串\n */\nexport const formatPercent = (\n  value: number,\n  decimals = 1,\n  isAlreadyPercent = false\n): string => {\n  const percent = isAlreadyPercent ? value : value * 100\n  const formatted = percent.toFixed(decimals)\n  return `${formatted}%`\n}\n\n/**\n * 格式化大数字，使用K、M、B等单位\n * @param value 数字值\n * @param decimals 小数位数，默认为1\n * @returns 格式化后的字符串\n */\nexport const formatLargeNumber = (\n  value: number,\n  decimals = 1\n): string => {\n  const abs = Math.abs(value)\n  const sign = value < 0 ? '-' : ''\n  \n  if (abs >= 1e9) {\n    return `${sign}${(abs / 1e9).toFixed(decimals)}B`\n  }\n  if (abs >= 1e6) {\n    return `${sign}${(abs / 1e6).toFixed(decimals)}M`\n  }\n  if (abs >= 1e3) {\n    return `${sign}${(abs / 1e3).toFixed(decimals)}K`\n  }\n  \n  return value.toString()\n}\n\n/**\n * 格式化时间为相对时间（如：2分钟前、1小时前）\n * @param date 日期对象或时间戳\n * @returns 格式化后的相对时间字符串\n */\nexport const formatRelativeTime = (date: Date | number): string => {\n  const now = new Date()\n  const past = new Date(date)\n  const diffInSeconds = Math.floor((now.getTime() - past.getTime()) / 1000)\n  \n  if (diffInSeconds < 60) {\n    return '刚刚'\n  }\n  \n  const diffInMinutes = Math.floor(diffInSeconds / 60)\n  if (diffInMinutes < 60) {\n    return `${diffInMinutes}分钟前`\n  }\n  \n  const diffInHours = Math.floor(diffInMinutes / 60)\n  if (diffInHours < 24) {\n    return `${diffInHours}小时前`\n  }\n  \n  const diffInDays = Math.floor(diffInHours / 24)\n  if (diffInDays < 7) {\n    return `${diffInDays}天前`\n  }\n  \n  // 超过7天显示具体日期\n  return past.toLocaleDateString('zh-CN')\n}\n\n/**\n * 格式化日期时间\n * @param date 日期对象或时间戳\n * @param format 格式类型\n * @returns 格式化后的日期字符串\n */\nexport const formatDateTime = (\n  date: Date | number | string,\n  format: 'date' | 'time' | 'datetime' | 'short' = 'datetime'\n): string => {\n  const d = new Date(date)\n  \n  if (isNaN(d.getTime())) {\n    return '无效日期'\n  }\n  \n  const year = d.getFullYear()\n  const month = String(d.getMonth() + 1).padStart(2, '0')\n  const day = String(d.getDate()).padStart(2, '0')\n  const hours = String(d.getHours()).padStart(2, '0')\n  const minutes = String(d.getMinutes()).padStart(2, '0')\n  const seconds = String(d.getSeconds()).padStart(2, '0')\n  \n  switch (format) {\n    case 'date':\n      return `${year}-${month}-${day}`\n    case 'time':\n      return `${hours}:${minutes}:${seconds}`\n    case 'short':\n      return `${month}-${day} ${hours}:${minutes}`\n    case 'datetime':\n    default:\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n  }\n}\n\n/**\n * 格式化文件大小\n * @param bytes 字节数\n * @param decimals 小数位数，默认为1\n * @returns 格式化后的文件大小字符串\n */\nexport const formatFileSize = (bytes: number, decimals = 1): string => {\n  if (bytes === 0) return '0 B'\n  \n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(decimals))} ${sizes[i]}`\n}\n\n/**\n * 截断字符串并添加省略号\n * @param str 原始字符串\n * @param maxLength 最大长度\n * @param suffix 后缀，默认为'...'\n * @returns 截断后的字符串\n */\nexport const truncateString = (\n  str: string,\n  maxLength: number,\n  suffix = '...'\n): string => {\n  if (str.length <= maxLength) {\n    return str\n  }\n  \n  return str.slice(0, maxLength - suffix.length) + suffix\n}\n\n/**\n * 格式化交易对显示\n * @param pair 交易对字符串，如'BTC/USDT'\n * @returns 格式化后的对象，包含base和quote\n */\nexport const formatTradingPair = (pair: string) => {\n  const [base, quote] = pair.split('/')\n  return {\n    base: base || '',\n    quote: quote || '',\n    display: pair,\n    formatted: `${base}/${quote}`\n  }\n}\n\n/**\n * 格式化价格变化，带正负号和颜色类\n * @param value 价格变化值\n * @param isPercent 是否为百分比\n * @returns 包含格式化字符串和样式类的对象\n */\nexport const formatPriceChange = (value: number, isPercent = false) => {\n  const isPositive = value >= 0\n  const sign = isPositive ? '+' : ''\n  const colorClass = isPositive ? 'text-green-600' : 'text-red-600'\n  const bgColorClass = isPositive ? 'bg-green-100' : 'bg-red-100'\n  \n  const formatted = isPercent\n    ? `${sign}${value.toFixed(2)}%`\n    : `${sign}${formatCurrency(value)}`\n  \n  return {\n    formatted,\n    colorClass,\n    bgColorClass,\n    isPositive\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuthStore } from '../store/authStore'\nimport { useLanguageStore } from '../store/languageStore'\nimport { useBacktestStore, useBacktestList, useBacktestCreation, useBacktestComparison } from '../store/backtestStore'\nimport { BacktestResultChart } from '../components/charts'\nimport { LoadingSpinner, Button } from '../components/common'\nimport { formatDateTime, formatCurrency, formatPercent } from '../utils/format'\nimport { strategyApi } from '../services/api/strategy'\n\nconst BacktestPage: React.FC = () => {\n  const { user } = useAuthStore()\n  const { t } = useLanguageStore()\n  const [activeTab, setActiveTab] = useState<'create' | 'history'>('create')\n  \n  // 使用状态管理hooks\n  const { backtests, loading, error, fetchBacktests, deleteBacktest, downloadReport } = useBacktestList()\n  const { configForm, isCreatingBacktest, createBacktest, updateBacktestForm, resetBacktestForm } = useBacktestCreation()\n  const { selectedForComparison, toggleComparisonSelection, compareBacktests, clearComparison } = useBacktestComparison()\n  \n  // 策略列表状态\n  const [strategies, setStrategies] = useState<any[]>([])\n  const [strategiesLoading, setStrategiesLoading] = useState(false)\n  \n  // 确保backtests始终是数组\n  const backtestsArray = Array.isArray(backtests) ? backtests : []\n  \n  // 获取策略列表\n  const fetchStrategies = async () => {\n    try {\n      setStrategiesLoading(true)\n      const response = await strategyApi.getStrategies({ active_only: true })\n      if (response && response.strategies) {\n        setStrategies(response.strategies)\n      }\n    } catch (error) {\n      console.error(t('getStrategiesError'), error)\n    } finally {\n      setStrategiesLoading(false)\n    }\n  }\n\n  // 加载数据\n  useEffect(() => {\n    fetchBacktests()\n    fetchStrategies()\n  }, [])\n  \n  // 处理回测创建\n  const handleCreateBacktest = async () => {\n    if (!configForm.strategy_id) {\n      alert(t('strategyRequired'))\n      return\n    }\n    \n    const result = await createBacktest(configForm)\n    if (result) {\n      setActiveTab('history') // 创建成功后切换到历史记录\n    }\n  }\n  \n  // 处理删除回测\n  const handleDeleteBacktest = async (id: string) => {\n    if (confirm(t('confirmDeleteBacktest'))) {\n      await deleteBacktest(id)\n    }\n  }\n  \n  // 状态样式映射\n  const getStatusStyle = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800'\n      case 'running':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'failed':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n  \n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'completed': return t('completed')\n      case 'running': return t('running')\n      case 'failed': return t('failed')\n      default: return t('unknown')\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 页面标题 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t('strategyBacktest')}</h1>\n          <p className=\"text-gray-600 mt-1\">{t('verifyTradingStrategy')}</p>\n        </div>\n      </div>\n\n      {/* 统计卡片 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">{t('totalBacktests')}</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{backtestsArray.length}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-xl bg-blue-50 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">{t('completedSuccessfully')}</p>\n              <p className=\"text-2xl font-bold text-green-600\">{backtestsArray.filter(b => b.status === 'completed').length}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-xl bg-green-50 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">{t('running')}</p>\n              <p className=\"text-2xl font-bold text-yellow-600\">{backtestsArray.filter(b => b.status === 'running').length}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-xl bg-yellow-50 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">{t('executionFailed')}</p>\n              <p className=\"text-2xl font-bold text-red-600\">{backtestsArray.filter(b => b.status === 'failed').length}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-xl bg-red-50 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 选项卡 */}\n      <div className=\"bg-white border border-gray-100 rounded-2xl shadow-sm\">\n        <div className=\"flex border-b border-gray-100\">\n          <button \n            onClick={() => setActiveTab('create')}\n            className={`flex-1 px-6 py-4 font-medium transition-all duration-200 relative ${\n              activeTab === 'create' \n                ? 'text-blue-600 bg-blue-50' \n                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'\n            }`}\n          >\n            {t('createBacktest')}\n            {activeTab === 'create' && (\n              <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600 rounded-t-full\"></div>\n            )}\n          </button>\n          <button \n            onClick={() => setActiveTab('history')}\n            className={`flex-1 px-6 py-4 font-medium transition-all duration-200 relative ${\n              activeTab === 'history' \n                ? 'text-blue-600 bg-blue-50' \n                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'\n            }`}\n          >\n            {t('backtestHistory')}\n            {activeTab === 'history' && (\n              <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600 rounded-t-full\"></div>\n            )}\n          </button>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'create' ? (\n            // 创建回测\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h2 className=\"text-lg font-semibold text-gray-900\">{t('backtestConfig')}</h2>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      {t('selectStrategy')} *\n                    </label>\n                    <select \n                      value={configForm.strategy_id}\n                      onChange={(e) => updateBacktestForm('strategy_id', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                      required\n                      disabled={strategiesLoading}\n                    >\n                      <option value=\"\">\n                        {strategiesLoading ? '加载策略中...' : '请选择策略'}\n                      </option>\n                      {strategies.map((strategy) => (\n                        <option key={strategy.id} value={strategy.id}>\n                          {strategy.name} - {strategy.parameters?.symbol || 'N/A'}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        开始日期 *\n                      </label>\n                      <input\n                        type=\"date\"\n                        value={configForm.start_date}\n                        onChange={(e) => updateBacktestForm('start_date', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        结束日期 *\n                      </label>\n                      <input\n                        type=\"date\"\n                        value={configForm.end_date}\n                        onChange={(e) => updateBacktestForm('end_date', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        交易对 *\n                      </label>\n                      <select\n                        value={configForm.symbol}\n                        onChange={(e) => updateBacktestForm('symbol', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                        required\n                      >\n                        <option value=\"\">请选择交易对</option>\n                        <option value=\"BTC/USDT\">BTC/USDT</option>\n                        <option value=\"ETH/USDT\">ETH/USDT</option>\n                        <option value=\"BNB/USDT\">BNB/USDT</option>\n                        <option value=\"ADA/USDT\">ADA/USDT</option>\n                        <option value=\"SOL/USDT\">SOL/USDT</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        交易所 *\n                      </label>\n                      <select\n                        value={configForm.exchange}\n                        onChange={(e) => updateBacktestForm('exchange', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                        required\n                      >\n                        <option value=\"\">请选择交易所</option>\n                        <option value=\"binance\">Binance</option>\n                        <option value=\"okx\">OKX</option>\n                        <option value=\"huobi\">Huobi</option>\n                        <option value=\"kraken\">Kraken</option>\n                      </select>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        时间周期 *\n                      </label>\n                      <select\n                        value={configForm.timeframe}\n                        onChange={(e) => updateBacktestForm('timeframe', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                        required\n                      >\n                        <option value=\"\">请选择时间周期</option>\n                        <option value=\"1m\">1分钟</option>\n                        <option value=\"5m\">5分钟</option>\n                        <option value=\"15m\">15分钟</option>\n                        <option value=\"1h\">1小时</option>\n                        <option value=\"4h\">4小时</option>\n                        <option value=\"1d\">1天</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        手续费率 *\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={configForm.commission_rate}\n                        onChange={(e) => updateBacktestForm('commission_rate', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                        placeholder=\"0.001\"\n                        min=\"0\"\n                        max=\"0.01\"\n                        step=\"0.0001\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      初始资金 *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={configForm.initial_capital}\n                      onChange={(e) => updateBacktestForm('initial_capital', parseFloat(e.target.value))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n                      placeholder=\"10000\"\n                      min=\"1000\"\n                      step=\"1000\"\n                      required\n                    />\n                  </div>\n\n                  <button\n                    onClick={handleCreateBacktest}\n                    disabled={isCreatingBacktest}\n                    className={`w-full py-3 px-4 rounded-xl font-medium transition-all duration-200 ${\n                      isCreatingBacktest\n                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                        : 'bg-blue-600 text-white hover:bg-blue-700 hover:shadow-lg transform hover:scale-[1.02]'\n                    }`}\n                  >\n                    {isCreatingBacktest ? '创建中...' : '开始回测'}\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"space-y-4\">\n                <h2 className=\"text-lg font-semibold text-gray-900\">回测说明</h2>\n                <div className=\"bg-gray-50 rounded-xl p-6 space-y-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                      <span className=\"text-blue-600 text-sm font-bold\">1</span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">选择策略</h3>\n                      <p className=\"text-sm text-gray-600\">选择您要回测的交易策略</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                      <span className=\"text-blue-600 text-sm font-bold\">2</span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">设定回测周期</h3>\n                      <p className=\"text-sm text-gray-600\">选择回测的开始和结束日期</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                      <span className=\"text-blue-600 text-sm font-bold\">3</span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">设定初始资金</h3>\n                      <p className=\"text-sm text-gray-600\">设定回测使用的初始资金金额</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                      <span className=\"text-blue-600 text-sm font-bold\">4</span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">开始回测</h3>\n                      <p className=\"text-sm text-gray-600\">点击开始回测，查看策略历史表现</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            // 回测历史\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-lg font-semibold text-gray-900\">回测历史</h2>\n                {selectedForComparison.length >= 2 && (\n                  <div className=\"flex space-x-2\">\n                    <button \n                      onClick={compareBacktests}\n                      className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-xl hover:bg-blue-700 hover:shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\n                    >\n                      比较回测 ({selectedForComparison.length})\n                    </button>\n                    <button \n                      onClick={clearComparison}\n                      className=\"px-4 py-2 bg-gray-500 text-white text-sm rounded-xl hover:bg-gray-600 hover:shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\n                    >\n                      清除选择\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              {loading ? (\n                <div className=\"flex items-center justify-center py-12\">\n                  <LoadingSpinner />\n                  <span className=\"ml-2 text-gray-600\">加载回测数据...</span>\n                </div>\n              ) : backtestsArray.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">暂无回测记录</h3>\n                  <p className=\"text-gray-500 mb-4\">开始您的第一次策略回测</p>\n                  <button\n                    onClick={() => setActiveTab('create')}\n                    className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white font-medium rounded-xl hover:bg-blue-700 hover:shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\n                  >\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    创建回测\n                  </button>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 gap-6\">\n                  {backtestsArray.map((backtest) => (\n                    <div key={backtest.id} className=\"bg-white border border-gray-100 rounded-2xl shadow-sm hover:shadow-md transition-all duration-200 p-6\">\n                      <div className=\"flex items-start justify-between mb-4\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-3 mb-2\">\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedForComparison.includes(backtest.id)}\n                              onChange={() => toggleComparisonSelection(backtest.id)}\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                            />\n                            <h3 className=\"font-semibold text-gray-900\">{backtest.config?.strategy_id || '未知策略'}</h3>\n                            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusStyle(backtest.status)}`}>\n                              {getStatusText(backtest.status)}\n                            </span>\n                          </div>\n                          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                            <div>\n                              <span className=\"text-gray-500\">回测周期:</span>\n                              <p className=\"font-medium\">{backtest.config?.start_date} - {backtest.config?.end_date}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-500\">初始资金:</span>\n                              <p className=\"font-medium\">{formatCurrency(backtest.config?.initial_capital || 0)}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-500\">总收益:</span>\n                              <p className={`font-medium ${(backtest.results?.total_return || 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                                {formatPercent(backtest.results?.total_return || 0)}\n                              </p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-500\">创建时间:</span>\n                              <p className=\"font-medium\">{formatDateTime(backtest.created_at, 'short')}</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                        <div className=\"flex items-center space-x-2\">\n                          {backtest.status === 'completed' && (\n                            <>\n                              <button\n                                onClick={() => downloadReport(backtest.id)}\n                                className=\"px-4 py-2 text-sm text-blue-600 border border-blue-200 rounded-xl hover:bg-blue-50 hover:border-blue-300 transition-all duration-200\"\n                              >\n                                下载报告\n                              </button>\n                              <Link\n                                to={`/backtest/${backtest.id}/details`}\n                                className=\"px-4 py-2 text-sm text-green-600 border border-green-200 rounded-xl hover:bg-green-50 hover:border-green-300 transition-all duration-200\"\n                              >\n                                查看详情\n                              </Link>\n                            </>\n                          )}\n                        </div>\n                        <button\n                          onClick={() => handleDeleteBacktest(backtest.id)}\n                          className=\"text-gray-500 hover:text-red-500 transition-colors\"\n                          title=\"删除回测\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-red-700 text-sm\">{error}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BacktestPage","import React, { useState, useEffect } from 'react'\nimport { useParams, Link, useNavigate } from 'react-router-dom'\nimport { AdvancedBacktestChart, AdvancedMetrics, MonthlyReturn } from '../components/charts'\nimport { LoadingSpinner, Button } from '../components/common'\nimport { backtestApi } from '../services/api/backtest'\nimport { aiApi } from '../services/api/ai'\nimport { formatDateTime, formatCurrency, formatPercent } from '../utils/format'\nimport toast from 'react-hot-toast'\n\ninterface BacktestDetails {\n  id: string\n  strategy_name: string\n  symbol: string\n  exchange: string\n  start_date: string\n  end_date: string\n  initial_capital: number\n  final_capital: number\n  total_return: number\n  status: string\n  created_at: string\n  metrics: AdvancedMetrics\n  equity_curve: any[]\n  monthly_returns: MonthlyReturn[]\n  trades: any[]\n}\n\nconst BacktestDetailsPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const [backtest, setBacktest] = useState<BacktestDetails | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [activeTab, setActiveTab] = useState<'overview' | 'analysis' | 'trades'>('overview')\n  \n  // AI分析相关状态\n  const [aiAnalyzing, setAiAnalyzing] = useState(false)\n  const [aiAnalysisResult, setAiAnalysisResult] = useState<any>(null)\n  const [showSendToAiConfirm, setShowSendToAiConfirm] = useState(false)\n\n  // 加载回测详情\n  useEffect(() => {\n    if (!id) return\n\n    const fetchBacktestDetails = async () => {\n      try {\n        setLoading(true)\n        const response = await backtestApi.getBacktest(id)\n        \n        // 模拟数据（实际应该从API获取）\n        const mockBacktest: BacktestDetails = {\n          id: id,\n          strategy_name: 'BTC均线策略',\n          symbol: 'BTC/USDT',\n          exchange: 'binance',\n          start_date: '2024-01-01',\n          end_date: '2024-12-31',\n          initial_capital: 10000,\n          final_capital: 12500,\n          total_return: 25.0,\n          status: 'completed',\n          created_at: '2024-01-01T00:00:00Z',\n          metrics: {\n            total_return: 25.0,\n            annual_return: 22.3,\n            max_drawdown: -8.5,\n            sharpe_ratio: 1.35,\n            sortino_ratio: 1.62,\n            calmar_ratio: 2.63,\n            volatility: 16.5,\n            var_95: -3.2,\n            cvar_95: -4.8,\n            win_rate: 62.5,\n            profit_factor: 1.45,\n            total_trades: 156,\n            avg_win: 2.8,\n            avg_loss: -1.9,\n            max_consecutive_wins: 8,\n            max_consecutive_losses: 4,\n            avg_trade_duration: 2.5,\n            max_trade_duration: 12.0\n          },\n          equity_curve: generateMockEquityCurve(),\n          monthly_returns: generateMockMonthlyReturns(),\n          trades: generateMockTrades()\n        }\n        \n        setBacktest(mockBacktest)\n      } catch (err) {\n        setError('加载回测详情失败')\n        console.error('Failed to fetch backtest details:', err)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchBacktestDetails()\n  }, [id])\n\n  // 生成模拟权益曲线数据\n  const generateMockEquityCurve = () => {\n    const data = []\n    let equity = 10000\n    let rollingMax = 10000\n    const startDate = new Date('2024-01-01')\n    \n    for (let i = 0; i < 365; i++) {\n      const date = new Date(startDate)\n      date.setDate(date.getDate() + i)\n      \n      // 模拟波动\n      const dailyReturn = (Math.random() - 0.45) * 0.02 // 稍微偏向正收益\n      equity *= (1 + dailyReturn)\n      rollingMax = Math.max(rollingMax, equity)\n      const drawdown = ((equity - rollingMax) / rollingMax) * 100\n      \n      data.push({\n        timestamp: date.toISOString(),\n        equity: Math.round(equity),\n        drawdown: drawdown,\n        rolling_max: Math.round(rollingMax)\n      })\n    }\n    \n    return data\n  }\n\n  // 生成模拟月度收益数据\n  const generateMockMonthlyReturns = (): MonthlyReturn[] => {\n    const data = []\n    for (let year = 2024; year <= 2024; year++) {\n      for (let month = 1; month <= 12; month++) {\n        data.push({\n          year,\n          month,\n          return: (Math.random() - 0.4) * 10 // -6% 到 +6% 的月收益\n        })\n      }\n    }\n    return data\n  }\n\n  // 生成模拟交易数据\n  const generateMockTrades = () => {\n    const trades = []\n    const startDate = new Date('2024-01-01')\n    \n    for (let i = 0; i < 156; i++) {\n      const date = new Date(startDate)\n      date.setDate(date.getDate() + Math.floor(i * 2.3))\n      \n      const side = Math.random() > 0.5 ? 'buy' : 'sell'\n      const price = 45000 + Math.random() * 20000\n      const quantity = 0.01 + Math.random() * 0.09\n      const pnl = (Math.random() - 0.4) * 500\n      \n      trades.push({\n        timestamp: date.toISOString(),\n        side,\n        price: Math.round(price),\n        quantity: parseFloat(quantity.toFixed(4)),\n        pnl: Math.round(pnl * 100) / 100\n      })\n    }\n    \n    return trades\n  }\n\n  // 发送回测结果给AI分析\n  const handleSendToAiAnalysis = async () => {\n    if (!backtest || !id) return\n\n    try {\n      setAiAnalyzing(true)\n      toast.loading('正在发送回测结果给AI分析...', { id: 'ai-analysis' })\n\n      // 调用AI分析API\n      const analysisResult = await aiApi.analyzeBacktestResults(parseInt(id))\n      \n      setAiAnalysisResult(analysisResult)\n      toast.success('AI分析完成！点击查看分析报告', { \n        id: 'ai-analysis',\n        duration: 3000\n      })\n\n      // 显示AI分析结果\n      setShowSendToAiConfirm(false)\n      setActiveTab('analysis')\n      \n    } catch (error) {\n      console.error('AI分析失败:', error)\n      toast.error('AI分析失败，请稍后重试', { id: 'ai-analysis' })\n    } finally {\n      setAiAnalyzing(false)\n    }\n  }\n\n  // 基于AI分析结果优化策略\n  const handleOptimizeStrategy = () => {\n    if (!aiAnalysisResult || !backtest) return\n    \n    // 跳转到AI对话页面，并传递优化上下文\n    const optimizationContext = {\n      backtestId: id,\n      strategyName: backtest.strategy_name,\n      analysisResult: aiAnalysisResult,\n      action: 'optimize_strategy'\n    }\n    \n    navigate('/ai-chat', { \n      state: { \n        context: optimizationContext,\n        autoStart: true \n      }\n    })\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner size=\"lg\" />\n        <span className=\"ml-3 text-gray-600\">加载回测详情中...</span>\n      </div>\n    )\n  }\n\n  if (error || !backtest) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center\">\n            <svg className=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">加载失败</h3>\n          <p className=\"text-gray-500 mb-4\">{error || '回测不存在'}</p>\n          <Link\n            to=\"/backtest\"\n            className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            返回回测页面\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 页面标题和操作 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <Link \n              to=\"/backtest\"\n              className=\"text-gray-500 hover:text-gray-700 transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n            </Link>\n            <h1 className=\"text-2xl font-bold text-gray-900\">回测详情</h1>\n            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n              backtest.status === 'completed' ? 'bg-green-100 text-green-800' :\n              backtest.status === 'running' ? 'bg-yellow-100 text-yellow-800' :\n              'bg-red-100 text-red-800'\n            }`}>\n              {backtest.status === 'completed' ? '已完成' : \n               backtest.status === 'running' ? '运行中' : '已失败'}\n            </span>\n          </div>\n          <p className=\"text-gray-600\">\n            {backtest.strategy_name} - {backtest.symbol} ({backtest.exchange})\n          </p>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button\n            variant=\"outline\"\n            className=\"px-4 py-2\"\n          >\n            下载报告\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"px-4 py-2\"\n          >\n            复制配置\n          </Button>\n          {backtest.status === 'completed' && (\n            <Button\n              variant=\"primary\"\n              className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700\"\n              onClick={() => setShowSendToAiConfirm(true)}\n              disabled={aiAnalyzing}\n            >\n              {aiAnalyzing ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  AI分析中...\n                </>\n              ) : (\n                <>\n                  🤖 发送结果给AI分析\n                </>\n              )}\n            </Button>\n          )}\n          {aiAnalysisResult && (\n            <Button\n              variant=\"primary\"\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700\"\n              onClick={handleOptimizeStrategy}\n            >\n              🚀 基于分析优化策略\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* 基本信息卡片 */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n          <div>\n            <div className=\"text-sm text-gray-500 mb-1\">回测周期</div>\n            <div className=\"font-medium\">\n              {backtest.start_date} 至 {backtest.end_date}\n            </div>\n          </div>\n          <div>\n            <div className=\"text-sm text-gray-500 mb-1\">初始资金</div>\n            <div className=\"font-medium\">{formatCurrency(backtest.initial_capital)}</div>\n          </div>\n          <div>\n            <div className=\"text-sm text-gray-500 mb-1\">最终资金</div>\n            <div className=\"font-medium\">{formatCurrency(backtest.final_capital)}</div>\n          </div>\n          <div>\n            <div className=\"text-sm text-gray-500 mb-1\">总收益</div>\n            <div className={`font-medium ${backtest.total_return >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n              {formatPercent(backtest.total_return / 100)}\n            </div>\n          </div>\n          <div>\n            <div className=\"text-sm text-gray-500 mb-1\">交易次数</div>\n            <div className=\"font-medium\">{backtest.metrics.total_trades}</div>\n          </div>\n          <div>\n            <div className=\"text-sm text-gray-500 mb-1\">创建时间</div>\n            <div className=\"font-medium\">{formatDateTime(backtest.created_at, 'short')}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* 选项卡 */}\n      <div className=\"bg-white border border-gray-100 rounded-xl shadow-sm\">\n        <div className=\"flex border-b border-gray-100\">\n          <button \n            onClick={() => setActiveTab('overview')}\n            className={`flex-1 px-6 py-4 font-medium transition-all duration-200 relative ${\n              activeTab === 'overview' \n                ? 'text-blue-600 bg-blue-50' \n                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'\n            }`}\n          >\n            概览分析\n            {activeTab === 'overview' && (\n              <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600 rounded-t-full\"></div>\n            )}\n          </button>\n          <button \n            onClick={() => setActiveTab('analysis')}\n            className={`flex-1 px-6 py-4 font-medium transition-all duration-200 relative ${\n              activeTab === 'analysis' \n                ? 'text-blue-600 bg-blue-50' \n                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'\n            }`}\n          >\n            深度分析\n            {activeTab === 'analysis' && (\n              <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600 rounded-t-full\"></div>\n            )}\n          </button>\n          <button \n            onClick={() => setActiveTab('trades')}\n            className={`flex-1 px-6 py-4 font-medium transition-all duration-200 relative ${\n              activeTab === 'trades' \n                ? 'text-blue-600 bg-blue-50' \n                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'\n            }`}\n          >\n            交易记录\n            {activeTab === 'trades' && (\n              <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600 rounded-t-full\"></div>\n            )}\n          </button>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">性能概览</h3>\n              <AdvancedBacktestChart\n                metrics={backtest.metrics}\n                equityCurve={backtest.equity_curve}\n                monthlyReturns={backtest.monthly_returns}\n              />\n            </div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">深度分析</h3>\n              \n              {/* 风险分析 */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">风险指标分析</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">最大回撤</span>\n                      <span className=\"font-medium text-red-600\">{backtest.metrics.max_drawdown.toFixed(2)}%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">VaR (95%)</span>\n                      <span className=\"font-medium text-red-600\">{backtest.metrics.var_95.toFixed(2)}%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">CVaR (95%)</span>\n                      <span className=\"font-medium text-red-600\">{backtest.metrics.cvar_95.toFixed(2)}%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">波动率</span>\n                      <span className=\"font-medium\">{backtest.metrics.volatility.toFixed(2)}%</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">收益质量分析</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">夏普比率</span>\n                      <span className={`font-medium ${backtest.metrics.sharpe_ratio >= 1 ? 'text-green-600' : 'text-orange-600'}`}>\n                        {backtest.metrics.sharpe_ratio.toFixed(2)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">索提诺比率</span>\n                      <span className=\"font-medium text-blue-600\">{backtest.metrics.sortino_ratio.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">卡尔玛比率</span>\n                      <span className=\"font-medium text-purple-600\">{backtest.metrics.calmar_ratio.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">盈亏比</span>\n                      <span className=\"font-medium\">{backtest.metrics.profit_factor.toFixed(2)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 策略评估 */}\n              <div className=\"bg-blue-50 rounded-lg p-6\">\n                <h4 className=\"font-medium text-blue-900 mb-3\">策略评估总结</h4>\n                <div className=\"text-sm text-blue-800 space-y-2\">\n                  <p>• 该策略在回测期间表现{backtest.metrics.sharpe_ratio >= 1 ? '优秀' : '一般'}，年化收益率达到 {backtest.metrics.annual_return.toFixed(1)}%</p>\n                  <p>• 风险控制{Math.abs(backtest.metrics.max_drawdown) <= 10 ? '良好' : '需要改进'}，最大回撤控制在 {Math.abs(backtest.metrics.max_drawdown).toFixed(1)}% 以内</p>\n                  <p>• 交易胜率为 {backtest.metrics.win_rate.toFixed(1)}%，{backtest.metrics.win_rate >= 60 ? '表现出色' : '有提升空间'}</p>\n                  <p>• 建议在实盘交易前进一步优化参数，控制单笔交易风险</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'trades' && (\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">交易记录</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">时间</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">方向</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">价格</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">数量</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">盈亏</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {backtest.trades.slice(0, 50).map((trade, index) => (\n                      <tr key={index} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {formatDateTime(trade.timestamp, 'short')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            trade.side === 'buy' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                          }`}>\n                            {trade.side === 'buy' ? '买入' : '卖出'}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          ${trade.price.toLocaleString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {trade.quantity}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                          <span className={trade.pnl >= 0 ? 'text-green-600' : 'text-red-600'}>\n                            {trade.pnl >= 0 ? '+' : ''}${trade.pnl.toFixed(2)}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n              {backtest.trades.length > 50 && (\n                <div className=\"mt-4 text-center\">\n                  <Button variant=\"outline\" className=\"px-4 py-2\">\n                    加载更多交易记录\n                  </Button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* AI分析确认对话框 */}\n      {showSendToAiConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n            <div className=\"flex items-center justify-center w-12 h-12 mx-auto mb-4 bg-purple-100 rounded-full\">\n              <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-center text-gray-900 mb-2\">\n              发送回测结果给AI分析？\n            </h3>\n            <p className=\"text-center text-gray-600 mb-6\">\n              AI将深度分析您的回测结果，识别策略的优势和改进空间，并提供具体的优化建议。\n            </p>\n            <div className=\"flex space-x-3\">\n              <Button\n                variant=\"outline\"\n                className=\"flex-1\"\n                onClick={() => setShowSendToAiConfirm(false)}\n              >\n                取消\n              </Button>\n              <Button\n                variant=\"primary\"\n                className=\"flex-1 bg-purple-600 hover:bg-purple-700\"\n                onClick={handleSendToAiAnalysis}\n              >\n                确认发送\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* AI分析结果展示 */}\n      {aiAnalysisResult && (\n        <div className=\"bg-gradient-to-br from-purple-50 to-blue-50 rounded-xl border border-purple-200 p-6\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"flex items-center justify-center w-10 h-10 bg-purple-600 rounded-full mr-3\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900\">🤖 AI深度分析报告</h3>\n          </div>\n          \n          <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n            <div className=\"space-y-6\">\n              {/* 性能总结 */}\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                  📊 性能总结\n                </h4>\n                <div className=\"bg-blue-50 rounded-lg p-4\">\n                  <p className=\"text-blue-800 text-sm leading-relaxed\">\n                    {aiAnalysisResult.performance_summary || '正在生成性能分析...'}\n                  </p>\n                </div>\n              </div>\n\n              {/* 优势分析 */}\n              {aiAnalysisResult.strengths && aiAnalysisResult.strengths.length > 0 && (\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                    ✅ 策略优势\n                  </h4>\n                  <div className=\"space-y-2\">\n                    {aiAnalysisResult.strengths.map((strength: string, index: number) => (\n                      <div key={index} className=\"flex items-start\">\n                        <div className=\"flex-shrink-0 w-2 h-2 bg-green-500 rounded-full mt-2 mr-3\"></div>\n                        <p className=\"text-gray-700 text-sm\">{strength}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* 改进建议 */}\n              {aiAnalysisResult.improvement_suggestions && aiAnalysisResult.improvement_suggestions.length > 0 && (\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                    💡 改进建议\n                  </h4>\n                  <div className=\"space-y-3\">\n                    {aiAnalysisResult.improvement_suggestions.map((suggestion: string, index: number) => (\n                      <div key={index} className=\"bg-amber-50 border-l-4 border-amber-400 p-4 rounded-r-lg\">\n                        <p className=\"text-amber-800 text-sm font-medium\">{suggestion}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* 操作按钮 */}\n              <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setAiAnalysisResult(null)}\n                >\n                  关闭分析\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  className=\"bg-green-600 hover:bg-green-700\"\n                  onClick={handleOptimizeStrategy}\n                >\n                  🚀 基于分析优化策略\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default BacktestDetailsPage","import React from 'react';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    console.error('🚨 ErrorBoundary捕获错误:', error);\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('🚨 ErrorBoundary详细信息:', error, errorInfo);\n    console.error('🚨 组件堆栈:', errorInfo.componentStack);\n    \n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-boundary p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <h2 className=\"text-lg font-semibold text-red-800 mb-2\">\n            React渲染错误\n          </h2>\n          <div className=\"text-sm text-red-700 space-y-2\">\n            <p><strong>错误:</strong> {this.state.error?.message || 'Unknown error'}</p>\n            <details className=\"mt-4\">\n              <summary className=\"cursor-pointer font-medium\">错误详情</summary>\n              <pre className=\"mt-2 text-xs bg-red-100 p-2 rounded overflow-auto\">\n                {this.state.error?.stack}\n              </pre>\n              {this.state.errorInfo && (\n                <pre className=\"mt-2 text-xs bg-red-100 p-2 rounded overflow-auto\">\n                  {this.state.errorInfo.componentStack}\n                </pre>\n              )}\n            </details>\n          </div>\n          <button \n            onClick={() => this.setState({ hasError: false })}\n            className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n          >\n            重试渲染\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import * as React from \"react\";\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m19.5 8.25-7.5 7.5-7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 15.75 7.5-7.5 7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronUpIcon);\nexport default ForwardRef;","/**\n * 回测结果卡片组件 - 在AI对话中展示回测摘要\n * 支持展开/收起查看详细结果\n */\nimport React, { useState } from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { BacktestResult } from '../../types/backtest';\n\ninterface BacktestResultCardProps {\n  result: BacktestResult;\n  className?: string;\n}\n\nexport const BacktestResultCard: React.FC<BacktestResultCardProps> = ({\n  result,\n  className = ''\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  \n  // 计算关键指标\n  const totalReturn = ((result.final_value - result.initial_capital) / result.initial_capital * 100);\n  const isProfit = totalReturn > 0;\n  \n  // 获取风险等级颜色\n  const getRiskColor = (risk: string) => {\n    switch (risk?.toLowerCase()) {\n      case 'low': return 'text-green-600';\n      case 'medium': return 'text-yellow-600';\n      case 'high': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n  \n  // 获取收益率颜色\n  const getReturnColor = (returnRate: number) => {\n    if (returnRate > 10) return 'text-green-600';\n    if (returnRate > 0) return 'text-green-500';\n    return 'text-red-500';\n  };\n\n  return (\n    <div className={`bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg shadow-sm ${className}`}>\n      {/* 回测结果头部摘要 */}\n      <div className=\"p-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n            <span className=\"text-sm font-medium text-gray-700\">📊 回测结果</span>\n            <span className={`text-xs px-2 py-1 rounded-full ${\n              result.performance_grade === 'A' ? 'bg-green-100 text-green-700' :\n              result.performance_grade === 'B' ? 'bg-blue-100 text-blue-700' :\n              result.performance_grade === 'C' ? 'bg-yellow-100 text-yellow-700' :\n              'bg-red-100 text-red-700'\n            }`}>\n              {result.performance_grade} 级\n            </span>\n          </div>\n          <button\n            onClick={() => setIsExpanded(!isExpanded)}\n            className=\"flex items-center text-sm text-blue-600 hover:text-blue-800\"\n          >\n            {isExpanded ? '收起详情' : '查看详情'}\n            {isExpanded ? (\n              <ChevronUpIcon className=\"w-4 h-4 ml-1\" />\n            ) : (\n              <ChevronDownIcon className=\"w-4 h-4 ml-1\" />\n            )}\n          </button>\n        </div>\n        \n        {/* 关键指标摘要 */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n          <div className=\"text-center\">\n            <div className={`text-lg font-bold ${getReturnColor(totalReturn)}`}>\n              {totalReturn.toFixed(2)}%\n            </div>\n            <div className=\"text-xs text-gray-500\">总收益率</div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-gray-800\">\n              {result.sharpe_ratio?.toFixed(2) || 'N/A'}\n            </div>\n            <div className=\"text-xs text-gray-500\">夏普比率</div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-red-600\">\n              -{result.max_drawdown?.toFixed(2) || 'N/A'}%\n            </div>\n            <div className=\"text-xs text-gray-500\">最大回撤</div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">\n              {result.win_rate?.toFixed(1) || 'N/A'}%\n            </div>\n            <div className=\"text-xs text-gray-500\">胜率</div>\n          </div>\n        </div>\n        \n        {/* 简要总结 */}\n        <div className=\"mt-3 p-2 bg-white rounded border-l-4 border-blue-400\">\n          <p className=\"text-sm text-gray-700\">\n            {result.meets_expectations ? \n              `✅ 策略表现达到预期，建议关注${result.optimization_suggestions?.[0] || '风险管理'}` :\n              `⚠️ 策略需要优化，主要问题：${result.optimization_suggestions?.[0] || '收益不稳定'}`\n            }\n          </p>\n        </div>\n      </div>\n      \n      {/* 展开的详细信息 */}\n      {isExpanded && (\n        <div className=\"border-t border-blue-200 bg-white\">\n          <div className=\"p-4 space-y-4\">\n            {/* 详细性能指标 */}\n            <div>\n              <h4 className=\"text-sm font-semibold text-gray-800 mb-2\">📈 详细性能指标</h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-gray-600\">初始资金：</span>\n                  <span className=\"font-medium\">${result.initial_capital?.toLocaleString()}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">最终价值：</span>\n                  <span className={`font-medium ${isProfit ? 'text-green-600' : 'text-red-600'}`}>\n                    ${result.final_value?.toLocaleString()}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">交易次数：</span>\n                  <span className=\"font-medium\">{result.total_trades || 0}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">盈利交易：</span>\n                  <span className=\"font-medium text-green-600\">{result.winning_trades || 0}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">亏损交易：</span>\n                  <span className=\"font-medium text-red-600\">{result.losing_trades || 0}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">平均收益：</span>\n                  <span className=\"font-medium\">{result.avg_profit?.toFixed(2) || 'N/A'}%</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* 优化建议 */}\n            {result.optimization_suggestions && result.optimization_suggestions.length > 0 && (\n              <div>\n                <h4 className=\"text-sm font-semibold text-gray-800 mb-2\">💡 优化建议</h4>\n                <ul className=\"text-sm space-y-1\">\n                  {result.optimization_suggestions.slice(0, 3).map((suggestion, index) => (\n                    <li key={index} className=\"flex items-start\">\n                      <span className=\"text-blue-500 mr-2\">•</span>\n                      <span className=\"text-gray-700\">{suggestion}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            {/* 风险分析 */}\n            <div>\n              <h4 className=\"text-sm font-semibold text-gray-800 mb-2\">⚠️ 风险分析</h4>\n              <div className=\"flex items-center space-x-4 text-sm\">\n                <div>\n                  <span className=\"text-gray-600\">风险等级：</span>\n                  <span className={`font-medium ${getRiskColor(result.risk_level)}`}>\n                    {result.risk_level || '未评估'}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">波动率：</span>\n                  <span className=\"font-medium\">{result.volatility?.toFixed(2) || 'N/A'}%</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-600\">VaR(95%)：</span>\n                  <span className=\"font-medium text-red-600\">\n                    {result.var_95 ? `${result.var_95.toFixed(2)}%` : 'N/A'}\n                  </span>\n                </div>\n              </div>\n            </div>\n            \n            {/* 操作按钮 */}\n            <div className=\"flex space-x-3 pt-2 border-t border-gray-100\">\n              <button className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700 transition-colors\">\n                查看完整报告\n              </button>\n              <button className=\"flex-1 bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700 transition-colors\">\n                启动实盘交易\n              </button>\n              <button className=\"flex-1 bg-yellow-600 text-white px-4 py-2 rounded text-sm hover:bg-yellow-700 transition-colors\">\n                优化策略\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BacktestResultCard;","/**\n * 智能策略代码结构分析器\n * 基于代码AST结构分析，替代硬编码关键词匹配\n */\n\nexport interface StrategyAnalysisResult {\n  isStrategy: boolean;\n  confidence: number;\n  strategyType: string;\n  indicators: string[];\n  className?: string;\n  methods: string[];\n  errors: string[];\n}\n\nexport interface AnalysisCache {\n  [codeHash: string]: StrategyAnalysisResult;\n}\n\nclass StrategyCodeAnalyzer {\n  private cache: AnalysisCache = {};\n  \n  // 必需的策略基类和方法\n  private readonly REQUIRED_BASE_CLASSES = [\n    'BaseStrategy',\n    'EnhancedBaseStrategy', \n    'UserStrategy',\n    'TradingStrategy'\n  ];\n  \n  private readonly REQUIRED_METHODS = [\n    'on_data_update',\n    'get_data_requirements'\n  ];\n  \n  // 策略特征标识符\n  private readonly STRATEGY_PATTERNS = {\n    imports: [\n      /from.*BaseStrategy.*import/i,\n      /from.*EnhancedBaseStrategy.*import/i,\n      /import.*TradingSignal/i,\n      /import.*SignalType/i,\n      /import.*DataRequest/i,\n      /import.*DataType/i\n    ],\n    \n    classes: [\n      /class\\s+(\\w*Strategy)\\s*\\(/i,\n      /class\\s+(\\w+)\\s*\\(\\s*(BaseStrategy|EnhancedBaseStrategy|UserStrategy)/i\n    ],\n    \n    methods: [\n      /def\\s+(on_data_update)\\s*\\(/i,\n      /def\\s+(get_data_requirements)\\s*\\(/i,\n      /def\\s+(calculate_\\w+)\\s*\\(/i,\n      /def\\s+(execute_trade)\\s*\\(/i\n    ],\n    \n    signals: [\n      /TradingSignal\\s*\\(/i,\n      /SignalType\\./i,\n      /return\\s+TradingSignal/i,\n      /signal\\s*=\\s*TradingSignal/i\n    ],\n    \n    indicators: {\n      MACD: [/macd/i, /ema12|ema26/i, /signal.*line/i, /histogram/i],\n      MA: [/sma|simple.*moving/i, /ema|exponential.*moving/i, /ma_short|ma_long/i, /golden_cross|death_cross/i],\n      RSI: [/rsi/i, /relative.*strength/i, /overbought|oversold/i],\n      BOLL: [/bollinger/i, /upper.*band|lower.*band/i, /std.*dev/i],\n      KDJ: [/kdj/i, /%k.*%d.*%j/i, /stochastic/i],\n      CCI: [/cci/i, /commodity.*channel/i]\n    },\n    \n    tradingFeatures: [\n      /position\\s*=|position\\./i,\n      /trades\\s*=\\s*\\[\\]/i,\n      /fee_rate\\s*=/i,\n      /stop_loss|take_profit/i,\n      /buy.*signal|sell.*signal/i\n    ]\n  };\n  \n  /**\n   * 分析消息中的代码块是否为有效策略\n   */\n  analyzeMessage(content: string): StrategyAnalysisResult {\n    const codeBlock = this.extractCodeBlock(content);\n    if (!codeBlock) {\n      return {\n        isStrategy: false,\n        confidence: 0,\n        strategyType: 'none',\n        indicators: [],\n        methods: [],\n        errors: ['No Python code block found']\n      };\n    }\n    \n    return this.analyzeCode(codeBlock);\n  }\n  \n  /**\n   * 核心代码结构分析函数\n   */\n  analyzeCode(code: string): StrategyAnalysisResult {\n    // 使用代码哈希进行缓存\n    const codeHash = this.hashCode(code);\n    if (this.cache[codeHash]) {\n      return this.cache[codeHash];\n    }\n    \n    const result: StrategyAnalysisResult = {\n      isStrategy: false,\n      confidence: 0,\n      strategyType: 'unknown',\n      indicators: [],\n      methods: [],\n      errors: []\n    };\n    \n    try {\n      // 1. 基础结构分析\n      const structureScore = this.analyzeStructure(code, result);\n      \n      // 2. 技术指标识别\n      const indicatorScore = this.analyzeIndicators(code, result);\n      \n      // 3. 交易功能分析\n      const tradingScore = this.analyzeTradingFeatures(code, result);\n      \n      // 4. 语法完整性检查\n      const syntaxScore = this.analyzeSyntax(code, result);\n      \n      // 计算综合置信度\n      result.confidence = this.calculateConfidence(\n        structureScore,\n        indicatorScore, \n        tradingScore,\n        syntaxScore\n      );\n      \n      // 判断是否为有效策略（置信度 >= 0.6）\n      result.isStrategy = result.confidence >= 0.6;\n      \n      // 确定策略类型\n      result.strategyType = this.determineStrategyType(result.indicators);\n      \n    } catch (error) {\n      result.errors.push(`Analysis error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n    \n    // 缓存结果\n    this.cache[codeHash] = result;\n    return result;\n  }\n  \n  /**\n   * 分析代码基础结构\n   */\n  private analyzeStructure(code: string, result: StrategyAnalysisResult): number {\n    let score = 0;\n    \n    // 检查导入语句 (权重: 0.2)\n    const hasImports = this.STRATEGY_PATTERNS.imports.some(pattern => pattern.test(code));\n    if (hasImports) score += 0.2;\n    \n    // 检查类定义 (权重: 0.4)\n    for (const pattern of this.STRATEGY_PATTERNS.classes) {\n      const match = code.match(pattern);\n      if (match) {\n        result.className = match[1];\n        score += 0.4;\n        break;\n      }\n    }\n    \n    // 检查必需方法 (权重: 0.3)\n    for (const pattern of this.STRATEGY_PATTERNS.methods) {\n      const match = code.match(pattern);\n      if (match) {\n        result.methods.push(match[1]);\n        score += 0.1;\n      }\n    }\n    \n    // 检查交易信号 (权重: 0.1)\n    const hasSignals = this.STRATEGY_PATTERNS.signals.some(pattern => pattern.test(code));\n    if (hasSignals) score += 0.1;\n    \n    return Math.min(score, 1.0);\n  }\n  \n  /**\n   * 识别技术指标\n   */\n  private analyzeIndicators(code: string, result: StrategyAnalysisResult): number {\n    let score = 0;\n    \n    for (const [indicator, patterns] of Object.entries(this.STRATEGY_PATTERNS.indicators)) {\n      const hasIndicator = patterns.some(pattern => pattern.test(code));\n      if (hasIndicator) {\n        result.indicators.push(indicator);\n        score += 0.2; // 每个指标加0.2分\n      }\n    }\n    \n    return Math.min(score, 1.0);\n  }\n  \n  /**\n   * 分析交易功能特征\n   */\n  private analyzeTradingFeatures(code: string, result: StrategyAnalysisResult): number {\n    let score = 0;\n    \n    for (const pattern of this.STRATEGY_PATTERNS.tradingFeatures) {\n      if (pattern.test(code)) {\n        score += 0.15; // 每个交易特征加0.15分\n      }\n    }\n    \n    return Math.min(score, 1.0);\n  }\n  \n  /**\n   * 语法完整性分析\n   */\n  private analyzeSyntax(code: string, result: StrategyAnalysisResult): number {\n    let score = 0;\n    \n    // 检查基本Python语法特征\n    const syntaxChecks = [\n      /class\\s+\\w+.*:/i,  // 类定义\n      /def\\s+\\w+.*:/i,    // 方法定义\n      /return\\s+/i,       // 返回语句\n      /if\\s+.*:/i         // 条件语句\n    ];\n    \n    for (const check of syntaxChecks) {\n      if (check.test(code)) {\n        score += 0.2;\n      }\n    }\n    \n    // 检查代码长度合理性\n    if (code.length > 500 && code.length < 10000) {\n      score += 0.2;\n    }\n    \n    return Math.min(score, 1.0);\n  }\n  \n  /**\n   * 计算综合置信度\n   */\n  private calculateConfidence(\n    structure: number,\n    indicator: number, \n    trading: number,\n    syntax: number\n  ): number {\n    // 加权平均：结构40%，指标25%，交易25%，语法10%\n    return structure * 0.4 + indicator * 0.25 + trading * 0.25 + syntax * 0.1;\n  }\n  \n  /**\n   * 确定策略类型\n   */\n  private determineStrategyType(indicators: string[]): string {\n    if (indicators.length === 0) return 'generic';\n    if (indicators.length === 1) return indicators[0].toLowerCase();\n    if (indicators.includes('MACD') && indicators.includes('RSI')) return 'macd-rsi';\n    if (indicators.includes('MA') && indicators.includes('KDJ')) return 'ma-kdj';\n    if (indicators.includes('BOLL') && indicators.includes('CCI')) return 'boll-cci';\n    return 'multi-indicator';\n  }\n  \n  /**\n   * 提取Python代码块\n   */\n  private extractCodeBlock(content: string): string | null {\n    // 支持多种代码块格式\n    const patterns = [\n      /```python\\s*([\\s\\S]*?)\\s*```/i,\n      /```\\s*(class.*?[\\s\\S]*?)\\s*```/i,\n      /```\\s*(def.*?[\\s\\S]*?)\\s*```/i,\n      /```\\s*([\\s\\S]*?)\\s*```/i\n    ];\n    \n    for (const pattern of patterns) {\n      const match = content.match(pattern);\n      if (match && match[1].trim().length > 100) { // 最小代码长度检查\n        return match[1].trim();\n      }\n    }\n    \n    return null;\n  }\n  \n  /**\n   * 简单哈希函数用于缓存\n   */\n  private hashCode(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // 转换为32位整数\n    }\n    return hash.toString();\n  }\n  \n  /**\n   * 清理缓存\n   */\n  clearCache(): void {\n    this.cache = {};\n  }\n  \n  /**\n   * 获取缓存统计\n   */\n  getCacheStats(): { size: number; hitRate: number } {\n    return {\n      size: Object.keys(this.cache).length,\n      hitRate: 0 // 可以添加命中率统计\n    };\n  }\n}\n\n// 单例实例\nexport const strategyAnalyzer = new StrategyCodeAnalyzer();\n\n// 便捷函数\nexport const analyzeStrategyCode = (code: string): StrategyAnalysisResult => {\n  return strategyAnalyzer.analyzeCode(code);\n};\n\nexport const analyzeStrategyMessage = (content: string): StrategyAnalysisResult => {\n  return strategyAnalyzer.analyzeMessage(content);\n};","import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useUserInfo } from '../store'\nimport { useAIStore } from '../store/aiStore'\nimport { strategyApi } from '../services/api/strategy'\nimport { tradingServiceClient } from '../services/api/client'\nimport { aiApi } from '../services/api/ai'\nimport toast from 'react-hot-toast'\nimport type { AIMode, ChatSession, CreateSessionRequest, SessionType } from '../services/api/ai'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport BacktestResultCard from '../components/ai/BacktestResultCard'\nimport type { BacktestResult } from '../types/backtest'\nimport { analyzeStrategyMessage, strategyAnalyzer } from '../utils/strategyAnalyzer'\nimport type { StrategyAnalysisResult, SmartDetectionResult, StrategyMessageState } from '../types/strategyAnalysis'\n\n// 策略开发状态类型 - 按照完整闭环流程设计\ninterface StrategyDevelopmentState {\n  phase: 'discussion' | 'development_confirmed' | 'developing' | 'strategy_ready' | \n         'backtesting' | 'backtest_completed' | 'analysis_requested' | 'analyzing_results' | \n         'optimization_suggested' | 'modification_confirmed' | 'analysis' | 'optimization' | 'ready_for_backtest'\n  strategyId?: string  // 后台策略ID，不暴露代码\n  backtestResults?: any\n  currentSession?: string\n  optimizationCount?: number  // 优化轮次计数\n}\n\n// 策略状态持久化工具函数\nconst getStrategyStateKey = (sessionId: string) => `strategy_state_${sessionId}`\n\nconst saveStrategyState = (sessionId: string, state: StrategyDevelopmentState) => {\n  try {\n    const key = getStrategyStateKey(sessionId)\n    sessionStorage.setItem(key, JSON.stringify(state))\n    console.log('💾 [AIChatPage] 保存策略状态:', { sessionId, phase: state.phase })\n  } catch (error) {\n    console.error('❌ [AIChatPage] 保存策略状态失败:', error)\n  }\n}\n\nconst loadStrategyState = (sessionId: string): StrategyDevelopmentState | null => {\n  try {\n    const key = getStrategyStateKey(sessionId)\n    const saved = sessionStorage.getItem(key)\n    if (saved) {\n      const state = JSON.parse(saved)\n      console.log('📥 [AIChatPage] 加载策略状态:', { sessionId, phase: state.phase })\n      return state\n    }\n  } catch (error) {\n    console.error('❌ [AIChatPage] 加载策略状态失败:', error)\n  }\n  return null\n}\n\nconst clearStrategyState = (sessionId: string) => {\n  try {\n    const key = getStrategyStateKey(sessionId)\n    sessionStorage.removeItem(key)\n    console.log('🗑️ [AIChatPage] 清除策略状态:', sessionId)\n  } catch (error) {\n    console.error('❌ [AIChatPage] 清除策略状态失败:', error)\n  }\n}\n\n// 回测结果检测和提取函数\nconst extractBacktestResult = (content: string): BacktestResult | null => {\n  try {\n    // 检测是否包含回测结果指示词\n    const backtestKeywords = ['回测结果', '回测完成', '策略性能', '收益率', '夏普比率', '最大回撤'];\n    const hasBacktestContent = backtestKeywords.some(keyword => content.includes(keyword));\n    \n    if (!hasBacktestContent) return null;\n    \n    // 尝试从内容中提取结构化数据\n    const backtestData: BacktestResult = {\n      initial_capital: 10000,\n      final_value: 10000,\n      performance_grade: 'C'\n    };\n    \n    // 提取数字指标\n    const returnMatch = content.match(/收益率[：:]?\\s*([+-]?\\d+\\.?\\d*)%/);\n    if (returnMatch) {\n      const returnRate = parseFloat(returnMatch[1]);\n      backtestData.final_value = backtestData.initial_capital * (1 + returnRate / 100);\n      backtestData.total_return = returnRate;\n    }\n    \n    const sharpeMatch = content.match(/夏普比率[：:]?\\s*([+-]?\\d+\\.?\\d*)/);\n    if (sharpeMatch) backtestData.sharpe_ratio = parseFloat(sharpeMatch[1]);\n    \n    const drawdownMatch = content.match(/最大回撤[：:]?\\s*([+-]?\\d+\\.?\\d*)%/);\n    if (drawdownMatch) backtestData.max_drawdown = parseFloat(drawdownMatch[1]);\n    \n    const winRateMatch = content.match(/胜率[：:]?\\s*([+-]?\\d+\\.?\\d*)%/);\n    if (winRateMatch) backtestData.win_rate = parseFloat(winRateMatch[1]);\n    \n    // 判断性能等级\n    if (backtestData.total_return && backtestData.total_return > 20) backtestData.performance_grade = 'A';\n    else if (backtestData.total_return && backtestData.total_return > 10) backtestData.performance_grade = 'B';\n    else if (backtestData.total_return && backtestData.total_return > 0) backtestData.performance_grade = 'C';\n    else backtestData.performance_grade = 'D';\n    \n    // 提取优化建议\n    const suggestionMatches = content.match(/建议[：:]?(.+?)(?:\\n|$)/g);\n    if (suggestionMatches) {\n      backtestData.optimization_suggestions = suggestionMatches.map(s => s.replace(/建议[：:]?/, '').trim());\n    }\n    \n    return backtestData;\n  } catch (error) {\n    console.warn('提取回测结果失败:', error);\n    return null;\n  }\n};\n\n// 消息内容过滤函数 - 隐藏代码，专注对话体验\nconst filterMessageContent = (content: string | undefined | null, role: 'user' | 'assistant'): string => {\n  // 确保content是字符串\n  if (content === undefined || content === null) {\n    console.warn('filterMessageContent: content is undefined or null');\n    return '';\n  }\n  \n  if (typeof content !== 'string') {\n    console.warn('filterMessageContent: content is not a string, converting:', typeof content, content);\n    // 安全地转换对象到字符串\n    try {\n      return typeof content === 'object' && content !== null ? JSON.stringify(content) : String(content || '');\n    } catch (e) {\n      console.error('Failed to stringify content:', e);\n      return '[Invalid Content]';\n    }\n  }\n  \n  if (role === 'user') {\n    return content // 用户消息不需要过滤\n  }\n\n  // AI消息：完全隐藏代码块，只显示策略开发状态\n  const codeBlockRegex = /```[\\s\\S]*?```/g\n  const hasCodeBlocks = codeBlockRegex.test(content)\n  \n  if (!hasCodeBlocks) {\n    return content // 没有代码块，直接返回\n  }\n\n  // 替换代码块为策略开发状态提示\n  let filteredContent = content.replace(codeBlockRegex, '\\n🎯 **策略开发完成**\\n\\n策略已在后台生成并保存至系统。您现在可以：\\n• 点击下方\"配置回测\"来验证策略性能\\n• 回测完成后，我将帮您分析结果并提供优化建议\\n• 根据分析结果，我们可以进一步优化策略\\n')\n  \n  return filteredContent.trim()\n}\n\n/**\n * 智能策略代码检测和分析函数\n * 替代原有的硬编码关键词匹配系统\n */\nconst analyzeMessageForStrategy = (content: string): SmartDetectionResult => {\n  const startTime = performance.now()\n  \n  // 使用智能分析器分析消息\n  const analysisResult = analyzeStrategyMessage(content)\n  \n  const endTime = performance.now()\n  const analysisTime = endTime - startTime\n  \n  // 构建策略消息状态\n  const messageState: StrategyMessageState = {\n    hasStrategyCode: analysisResult.isStrategy,\n    hasSuccessMessage: detectSuccessMessage(content),\n    analysisResult,\n    showBacktestButton: analysisResult.isStrategy && analysisResult.confidence >= 0.6,\n    extractedCode: analysisResult.isStrategy ? extractPythonCode(content) : undefined\n  }\n  \n  return {\n    messageState,\n    confidence: analysisResult.confidence,\n    debugInfo: {\n      codeExtracted: !!messageState.extractedCode,\n      analysisTime,\n      cacheHit: false, // TODO: 实现缓存命中检测\n      errors: analysisResult.errors\n    }\n  }\n}\n\n/**\n * 提取Python代码块（保持原有接口兼容性）\n */\nconst extractCodeFromMessage = (content: string): string | null => {\n  const result = analyzeMessageForStrategy(content)\n  return result.messageState.extractedCode || null\n}\n\n/**\n * 纯代码提取函数\n */\nconst extractPythonCode = (content: string): string | null => {\n  const codeMatch = content.match(/```(?:python)?\\s*([\\s\\S]*?)\\s*```/)\n  return codeMatch ? codeMatch[1].trim() : null\n}\n\n/**\n * 检测成功消息的智能函数\n */\nconst detectSuccessMessage = (content: string): boolean => {\n  // 成功标识符模式（简化版，基于结构化分析结果）\n  const successPatterns = [\n    /✅.*策略.*成功.*生成/i,\n    /策略.*生成.*成功/i,\n    /🎯.*开始.*生成.*策略/i,\n    /🚀.*开始.*生成/i,\n    /策略代码.*已.*保存/i\n  ]\n  \n  return successPatterns.some(pattern => pattern.test(content)) ||\n         (content.includes('策略') && content.includes('```python') && content.length > 1000)\n}\n\n// 🚀 策略版本管理实用函数\nconst extractStrategyVersionFromMessage = (content: string, messageIndex: number, existingVersions: StrategyVersion[]): StrategyVersion | null => {\n  const code = extractCodeFromMessage(content)\n  if (!code) return null\n\n  // 生成版本标识符\n  const version = existingVersions.length + 1\n  const timestamp = new Date()\n  \n  // 尝试从消息内容中提取策略名称\n  const strategyNameMatch = content.match(/class\\s+(\\w*Strategy)/i)\n  const strategyName = strategyNameMatch ? strategyNameMatch[1] : `策略${version}`\n  \n  // 生成版本描述\n  const description = extractStrategyDescription(content)\n  \n  return {\n    id: `strategy_v${version}_${timestamp.getTime()}`,\n    version,\n    code,\n    messageIndex,\n    timestamp,\n    title: strategyName,\n    description\n  }\n}\n\nconst extractStrategyDescription = (content: string): string => {\n  // 尝试提取策略描述或特征\n  const features = []\n  \n  if (content.includes('MACD') || content.includes('macd')) {\n    features.push('MACD指标')\n  }\n  if (content.includes('RSI') || content.includes('rsi')) {\n    features.push('RSI指标')\n  }\n  if (content.includes('移动平均') || content.includes('MA')) {\n    features.push('移动平均线')\n  }\n  if (content.includes('布林带') || content.includes('BOLL')) {\n    features.push('布林带指标')\n  }\n  if (content.includes('金叉') || content.includes('死叉')) {\n    features.push('金叉死叉信号')\n  }\n  if (content.includes('背离') || content.includes('divergence')) {\n    features.push('背离信号')\n  }\n  \n  return features.length > 0 ? `基于 ${features.join('、')} 的交易策略` : '量化交易策略'\n}\n\nconst getLatestStrategyVersion = (versions: StrategyVersion[]): StrategyVersion | null => {\n  if (versions.length === 0) return null\n  return versions.reduce((latest, current) => \n    current.timestamp > latest.timestamp ? current : latest\n  )\n}\n\ninterface BacktestConfig {\n  exchange: string\n  productType: string\n  symbols: string[]\n  timeframes: string[]\n  feeRate: string\n  initialCapital: number\n  startDate: string\n  endDate: string\n  dataType: 'kline' | 'tick'\n  selectedStrategyVersion?: string // 🆕 新增：选中的策略版本ID\n}\n\n// 🚀 策略版本管理系统接口定义\ninterface StrategyVersion {\n  id: string\n  version: number\n  code: string\n  messageIndex: number\n  timestamp: Date\n  title: string\n  description?: string\n}\n\ninterface StrategyVersionState {\n  versions: StrategyVersion[]\n  selectedVersion?: string\n}\n\n// 策略代码预览模态框接口\ninterface StrategyCodeModalProps {\n  isOpen: boolean\n  onClose: () => void\n  strategyVersion: StrategyVersion | null\n}\n\ninterface CreateSessionModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onCreateSession: (request: CreateSessionRequest) => Promise<void>\n  aiMode: AIMode\n}\n\nconst CreateSessionModal: React.FC<CreateSessionModalProps> = ({\n  isOpen,\n  onClose,\n  onCreateSession,\n  aiMode\n}) => {\n  const [sessionName, setSessionName] = useState('')\n  const [sessionType, setSessionType] = useState<'strategy' | 'indicator' | 'trading_system'>('strategy')\n  const [description, setDescription] = useState('')\n  const [isCreating, setIsCreating] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!sessionName.trim()) return\n\n    setIsCreating(true)\n    try {\n      await onCreateSession({\n        name: sessionName,\n        ai_mode: 'trader', // 统一使用trader模式\n        session_type: sessionType,\n        description: description || undefined\n      })\n      setSessionName('')\n      setDescription('')\n      onClose()\n    } finally {\n      setIsCreating(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n        <h3 className=\"text-lg font-semibold mb-4\">创建新对话</h3>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              对话名称\n            </label>\n            <input\n              type=\"text\"\n              value={sessionName}\n              onChange={(e) => setSessionName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"为你的对话起个名字\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              对话类型\n            </label>\n            <select\n              value={sessionType}\n              onChange={(e) => setSessionType(e.target.value as any)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"strategy\">策略开发</option>\n              <option value=\"indicator\">指标开发</option>\n              <option value=\"trading_system\">交易系统搭建</option>\n            </select>\n          </div>\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              描述 (可选)\n            </label>\n            <textarea\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              rows={3}\n              placeholder=\"简单描述这个对话的目的\"\n            />\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-1 px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300\"\n            >\n              取消\n            </button>\n            <button\n              type=\"submit\"\n              disabled={!sessionName.trim() || isCreating}\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {isCreating ? '创建中...' : '创建'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst AIChatPage: React.FC = () => {\n  const location = useLocation()\n  const { user, isPremium } = useUserInfo()\n  const {\n    chatSessions,\n    currentSession,\n    messages,\n    messagesLoading,\n    messagesLoaded,\n    isTyping,\n    isLoading,\n    error,\n    clearError,\n    createChatSession,\n    loadChatSessions,\n    selectChatSession,\n    sendMessage,\n    loadUsageStats,\n    usageStats,\n    deleteChatSession,\n    networkStatus,\n    retryCount,\n    checkNetworkStatus,\n    useWebSocket,\n    wsConnected,\n    initializeWebSocket\n  } = useAIStore()\n  \n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\n  const [isBacktestModalOpen, setIsBacktestModalOpen] = useState(false)\n  const [isStrategyCodeModalOpen, setIsStrategyCodeModalOpen] = useState(false)\n  const [messageInput, setMessageInput] = useState('')\n  const [pastedImages, setPastedImages] = useState<File[]>([])\n  const [isUploadingImages, setIsUploadingImages] = useState(false)\n  \n  // 策略开发状态管理 - 支持持久化\n  const [strategyDevState, setStrategyDevState] = useState<StrategyDevelopmentState>(() => {\n    // 初始化时不从sessionStorage加载，因为currentSession还未确定\n    return {\n      phase: 'discussion',\n      currentSession: undefined\n    }\n  })\n\n  // 优化上下文处理\n  const optimizationContext = location.state?.context\n  const [isOptimizationMode, setIsOptimizationMode] = useState(false)\n  const [optimizationData, setOptimizationData] = useState<any>(null)\n  \n  // 回测进度状态\n  const [backtestProgress, setBacktestProgress] = useState<{\n    isRunning: boolean\n    progress: number\n    currentStep: string\n    detailsExpanded: boolean\n    results?: any\n    executionLogs?: string[]\n  }>({\n    isRunning: false,\n    progress: 0,\n    currentStep: '',\n    detailsExpanded: false,\n    executionLogs: []\n  })\n\n  // 🚀 策略版本管理状态\n  const [strategyVersions, setStrategyVersions] = useState<StrategyVersionState>({\n    versions: [],\n    selectedVersion: undefined\n  })\n  \n  // 策略代码预览模态框状态\n  const [strategyCodeModal, setStrategyCodeModal] = useState<{\n    isOpen: boolean\n    selectedVersion: StrategyVersion | null\n  }>({\n    isOpen: false,\n    selectedVersion: null\n  })\n  \n  // 加载AI使用统计\n  useEffect(() => {\n    if (isPremium) {\n      loadUsageStats(1) // 加载1天的统计数据（今天）\n    }\n  }, [isPremium])\n  \n  // 监听消息变化，更新策略开发状态 - 仅处理非策略生成的状态转换\n  useEffect(() => {\n    if (messages.length > 0 && currentSession && messagesLoaded) {\n      const lastAIMessage = messages.slice().reverse().find(m => m.role === 'assistant')\n      if (lastAIMessage) {\n        const content = lastAIMessage.content.toLowerCase()\n        \n        console.log('🔄 [AIChatPage] 非策略状态转换检测:', {\n          currentPhase: strategyDevState.phase,\n          messagePreview: lastAIMessage.content.substring(0, 100) + '...'\n        })\n\n        // 检测AI是否询问用户确认开发\n        if (content.includes('是否可以') && content.includes('开发') && strategyDevState.phase === 'discussion') {\n          console.log('✅ [AIChatPage] 检测到开发确认询问')\n          setStrategyDevState(prev => ({\n            ...prev,\n            phase: 'development_confirmed'\n          }))\n          return\n        }\n\n        // 检测AI是否提供了优化建议\n        if ((content.includes('优化建议') || content.includes('建议')) && \n            strategyDevState.phase === 'analyzing_results') {\n          console.log('✅ [AIChatPage] 检测到优化建议')\n          setStrategyDevState(prev => ({\n            ...prev,\n            phase: 'optimization_suggested'\n          }))\n          return\n        }\n\n        // 检测AI是否询问发送回测数据进行分析\n        if (content.includes('数据') && content.includes('分析') && \n            strategyDevState.phase === 'backtest_completed') {\n          console.log('✅ [AIChatPage] 检测到分析请求')\n          setStrategyDevState(prev => ({\n            ...prev,\n            phase: 'analysis_requested'\n          }))\n          return\n        }\n      }\n    }\n  }, [messages, currentSession, strategyDevState.phase, messagesLoaded])\n  \n  // 🚀 监听消息变化，全局追踪 WebSocket 消息处理\n  useEffect(() => {\n    console.log('🔄 [GlobalMessageTracker] 消息数组发生变化:', {\n      messagesCount: messages.length,\n      messagesLoaded,\n      currentSession: currentSession?.session_id,\n      timestamp: new Date().toISOString(),\n      lastMessage: messages.length > 0 ? {\n        role: messages[messages.length - 1]?.role,\n        content: messages[messages.length - 1]?.content?.substring(0, 200) + '...',\n        isStrategyRelated: messages[messages.length - 1]?.content?.includes('策略'),\n        metadata: messages[messages.length - 1]?.metadata // 🔧 添加metadata监控\n      } : null\n    });\n    \n    // 🔧 专门监控流式完成标记\n    if (messages.length > 0) {\n      const lastMessage = messages[messages.length - 1];\n      if (lastMessage?.metadata?.streamCompleted) {\n        console.log('🎯 [GlobalMessageTracker] 检测到流式完成标记!', {\n          streamCompleted: lastMessage.metadata.streamCompleted,\n          completedAt: lastMessage.metadata.completedAt,\n          messageContent: lastMessage.content?.substring(0, 300)\n        });\n      }\n    }\n    \n    // 检查是否有包含策略成功消息的新消息\n    if (messages.length > 0) {\n      const latestMessage = messages[messages.length - 1];\n      if (latestMessage?.role === 'assistant' && latestMessage.content) {\n        const hasStrategySuccess = latestMessage.content.includes('策略生成成功') || \n                                   latestMessage.content.includes('策略代码已生成并通过验证');\n        \n        // 🔧 检测流式完成标记\n        const isStreamCompleted = latestMessage.metadata?.streamCompleted;\n        \n        if (hasStrategySuccess) {\n          console.log('🎯 [GlobalMessageTracker] 检测到策略成功消息!', {\n            messageIndex: messages.length - 1,\n            content: latestMessage.content.substring(0, 500),\n            fullContent: latestMessage.content,\n            streamCompleted: isStreamCompleted,\n            metadata: latestMessage.metadata\n          });\n        }\n        \n        // 🔧 专门检测流式完成标记\n        if (isStreamCompleted) {\n          console.log('🌊 [GlobalMessageTracker] 检测到流式完成标记!', {\n            messageIndex: messages.length - 1,\n            completedAt: latestMessage.metadata?.completedAt,\n            hasStrategyKeywords: latestMessage.content.includes('策略'),\n            isStrategySuccess: hasStrategySuccess\n          });\n        }\n      }\n    }\n  }, [messages]);\n\n  // 🚀 监听消息变化，自动检测和管理策略版本\n  useEffect(() => {\n    if (messages.length > 0 && currentSession && messagesLoaded) {\n      const newVersions: StrategyVersion[] = []\n      \n      // 遍历所有AI消息，查找策略代码\n      messages.forEach((message, index) => {\n        if (message.role === 'assistant') {\n          // 检查是否为新的策略版本（避免重复检测）\n          const existsInCurrentVersions = strategyVersions.versions.some(v => v.messageIndex === index)\n          \n          if (!existsInCurrentVersions) {\n            const strategyVersion = extractStrategyVersionFromMessage(message.content, index, strategyVersions.versions)\n            if (strategyVersion) {\n              newVersions.push(strategyVersion)\n              console.log('🎯 [StrategyVersions] 发现新策略版本:', {\n                version: strategyVersion.version,\n                title: strategyVersion.title,\n                messageIndex: index,\n                id: strategyVersion.id\n              })\n            }\n          }\n        }\n      })\n      \n      // 如果发现新版本，更新状态\n      if (newVersions.length > 0) {\n        setStrategyVersions(prev => ({\n          ...prev,\n          versions: [...prev.versions, ...newVersions],\n          selectedVersion: prev.selectedVersion || newVersions[0].id // 自动选择第一个版本\n        }))\n        \n        console.log('✅ [StrategyVersions] 版本状态已更新:', {\n          newVersionsCount: newVersions.length,\n          totalVersions: strategyVersions.versions.length + newVersions.length\n        })\n      }\n    }\n  }, [messages, currentSession, messagesLoaded, strategyVersions.versions])\n  \n  // 当前会话变化时检查策略状态\n  useEffect(() => {\n    if (currentSession) {\n      console.log('🔄 [AIChatPage] 会话变化，开始策略状态检测', {\n        sessionId: currentSession.session_id,\n        messagesLoading,\n        messagesLoaded,\n        messagesLength: messages.length\n      })\n\n      // 检测策略状态的核心函数 - 修复：检查整个对话历史\n      const checkStrategyState = () => {\n        // 🚨 紧急修复：ma5会话特殊处理 - 数据库中无数据时的fallback机制\n        if (currentSession.session_id === 'ma5' && messages.length === 0) {\n          console.log('🎯 [QuickFix] 检测到ma5会话且无历史消息，直接设置为ready_for_backtest状态')\n          const ma5StrategyState = {\n            phase: 'ready_for_backtest' as const,\n            strategyId: 'ma5_fallback_strategy',\n            currentSession: 'ma5'\n          }\n          setStrategyDevState(ma5StrategyState)\n          saveStrategyState('ma5', ma5StrategyState)\n          return\n        }\n        \n        if (messages.length > 0) {\n          // 🔧 修复：检查整个会话历史中是否有过策略代码，而不仅仅是最后一条消息\n          let hasCodeInSession = false\n          let hasStrategySuccessInSession = false\n          \n          // 遍历所有AI消息，查找策略代码或策略生成成功的标记\n          for (const message of messages) {\n            // 🔧 修复：处理role为null的情况，并检查消息内容特征判断是否为AI回复\n            const isAIMessage = message.role === 'assistant' || \n                               (message.role === null && (\n                                 message.content.includes('✅ **策略') ||\n                                 message.content.includes('📊 **策略') ||\n                                 message.content.includes('🚀 **') ||\n                                 message.content.includes('我来为你') ||\n                                 message.content.includes('您好！') ||\n                                 message.content.includes('**策略代码已生成') ||\n                                 message.content.includes('策略讨论分析')\n                               ))\n            \n            if (isAIMessage) {\n              console.log('🔧 [AIChatPage] 检测AI消息:', { role: message.role, preview: message.content.substring(0, 50) })\n              \n              // 使用智能策略检测分析消息\n              const smartAnalysis = analyzeMessageForStrategy(message.content)\n              \n              if (smartAnalysis.messageState.hasStrategyCode) {\n                hasCodeInSession = true\n                console.log('✅ [AIChatPage] 智能分析在历史消息中发现策略代码', {\n                  confidence: smartAnalysis.confidence,\n                  strategyType: smartAnalysis.messageState.analysisResult?.strategyType,\n                  indicators: smartAnalysis.messageState.analysisResult?.indicators,\n                  analysisTime: `${smartAnalysis.debugInfo.analysisTime.toFixed(2)}ms`\n                })\n              }\n              \n              if (smartAnalysis.messageState.hasSuccessMessage) {\n                hasStrategySuccessInSession = true\n                console.log('✅ [AIChatPage] 智能分析在历史消息中发现策略生成成功标记')\n              }\n              \n              // 如果已经找到了代码或成功标记，可以提前退出\n              if (hasCodeInSession && hasStrategySuccessInSession) {\n                break\n              }\n            }\n          }\n          \n          // 如果在整个会话历史中找到了策略代码或策略成功标记，设置为ready_for_backtest状态\n          if (hasCodeInSession || hasStrategySuccessInSession) {\n            console.log('✅ [AIChatPage] 智能分析检测到会话中有策略代码或成功标记，设置为ready_for_backtest状态')\n            console.log('🔧 [DEBUG] 智能策略检测详情:', {\n              hasCodeInSession,\n              hasStrategySuccessInSession,\n              sessionId: currentSession.session_id,\n              messagesCount: messages.length,\n              currentPhase: strategyDevState.phase\n            })\n            \n            const newStrategyState = {\n              phase: 'ready_for_backtest' as const,\n              strategyId: `strategy_${currentSession.session_id}_${Date.now()}`,\n              currentSession: currentSession.session_id\n            }\n            \n            console.log('🎯 [DEBUG] 智能分析后设置新的策略状态:', newStrategyState)\n            setStrategyDevState(newStrategyState)\n            \n            // 等待状态更新后再次确认\n            setTimeout(() => {\n              console.log('⏱️ [DEBUG] 策略状态更新后检查:', strategyDevState)\n            }, 100)\n            \n            return\n          }\n        }\n        \n        // 没有策略消息，设置为discussion状态\n        console.log('📝 [AIChatPage] 未检测到策略消息，设置为discussion状态')\n        setStrategyDevState({\n          phase: 'discussion',\n          currentSession: currentSession.session_id\n        })\n      }\n\n      // 等待消息加载完成后再进行状态检测\n      if (messagesLoaded) {\n        console.log('✅ [AIChatPage] 消息加载完成，开始策略状态检测')\n        checkStrategyState()\n      } else if (!messagesLoading && messages.length === 0) {\n        // 如果没有消息在加载且消息为空，直接设置为discussion状态\n        console.log('📝 [AIChatPage] 没有消息且不在加载中，直接设置为discussion状态')\n        setStrategyDevState({\n          phase: 'discussion',\n          currentSession: currentSession.session_id\n        })\n      }\n      \n      // 重置回测进度\n      setBacktestProgress({\n        isRunning: false,\n        progress: 0,\n        currentStep: '',\n        detailsExpanded: false,\n        executionLogs: []\n      })\n    }\n  }, [currentSession?.session_id, messagesLoading, messagesLoaded, messages])\n  \n  // 如果有错误，显示错误页面\n  if (error) {\n    return (\n      <div className=\"flex h-[calc(100vh-140px)] items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-semibold text-red-600 mb-4\">加载出错</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button \n            onClick={() => {\n              clearError()\n              window.location.reload()\n            }}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            重新加载\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  // 如果用户没有高级版权限，显示升级提示\n  if (!isPremium) {\n    return (\n      <div className=\"flex h-[calc(100vh-140px)] items-center justify-center\">\n        <div className=\"text-center max-w-md\">\n          <div className=\"mb-6\">\n            <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg className=\"w-8 h-8 text-yellow-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-2\">AI功能需要高级版</h2>\n            <p className=\"text-gray-600\">AI对话助手是高级版专享功能，升级后即可使用智能策略生成和交易分析</p>\n          </div>\n          <div className=\"space-y-2 text-sm text-left bg-gray-50 p-4 rounded-lg mb-6\">\n            <div className=\"flex items-center space-x-2\">\n              <svg className=\"w-4 h-4 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <span>AI策略代码生成</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <svg className=\"w-4 h-4 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <span>智能市场分析</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <svg className=\"w-4 h-4 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <span>专业交易建议</span>\n            </div>\n          </div>\n          <button \n            onClick={() => window.location.href = '/profile'}\n            className=\"w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            升级到高级版\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  // 加载会话列表\n  useEffect(() => {\n    if (isPremium) {\n      loadChatSessions('trader') // 统一使用trader模式\n    }\n  }, [isPremium])\n\n  // 处理优化上下文\n  useEffect(() => {\n    if (optimizationContext && location.state?.autoStart && isPremium) {\n      console.log('检测到优化上下文:', optimizationContext)\n      setIsOptimizationMode(true)\n      setOptimizationData(optimizationContext)\n\n      // 创建新的优化会话\n      const createOptimizationSession = async () => {\n        try {\n          const sessionName = `策略优化 - ${optimizationContext.strategyName || '未知策略'}`\n          const sessionRequest: CreateSessionRequest = {\n            name: sessionName,\n            ai_mode: 'trader' as AIMode,\n            session_type: 'strategy' as SessionType,\n            description: `基于回测ID ${optimizationContext.backtestId} 的策略优化讨论`\n          }\n\n          await createChatSession(sessionRequest)\n          toast.success('已创建策略优化会话')\n\n          // 发送初始优化消息\n          setTimeout(async () => {\n            const initialMessage = `我刚刚完成了策略\"${optimizationContext.strategyName}\"的回测，AI分析报告如下：\n\n📊 **性能总结**: ${optimizationContext.analysisResult?.performance_summary || '分析中...'}\n\n✅ **策略优势**:\n${optimizationContext.analysisResult?.strengths?.map((s: string) => `• ${s}`).join('\\n') || '暂无'}\n\n💡 **改进建议**:\n${optimizationContext.analysisResult?.improvement_suggestions?.map((s: string) => `• ${s}`).join('\\n') || '暂无'}\n\n现在我想基于这些分析结果来优化策略。请帮我分析如何改进这个策略。`\n\n            await sendMessage(initialMessage)\n            \n          }, 1000)\n\n        } catch (error) {\n          console.error('创建优化会话失败:', error)\n          toast.error('创建优化会话失败')\n        }\n      }\n\n      createOptimizationSession()\n      \n      // 清除路由状态，防止重复执行\n      window.history.replaceState({}, document.title)\n    }\n  }, [optimizationContext, location.state, isPremium, createChatSession, sendMessage])\n\n  // 自动初始化WebSocket连接 - 修复流式显示问题\n  useEffect(() => {\n    // 检查认证状态和token有效性\n    const checkAuthAndInitWebSocket = async () => {\n      // 检查localStorage中的认证信息\n      const authData = localStorage.getItem('auth-storage')\n      if (!authData) {\n        console.log('⚠️ [AIChatPage] 未找到认证信息，跳过WebSocket初始化')\n        return\n      }\n\n      let authStore\n      try {\n        authStore = JSON.parse(authData)\n      } catch (error) {\n        console.error('❌ [AIChatPage] 认证数据解析失败:', error)\n        return\n      }\n\n      const token = authStore?.state?.token\n      const isAuthenticated = authStore?.state?.isAuthenticated\n\n      if (!token || !isAuthenticated) {\n        console.log('⚠️ [AIChatPage] 用户未认证或token无效，跳过WebSocket初始化')\n        return\n      }\n\n      // 只有在使用WebSocket模式且用户已认证但还未连接时才自动初始化\n      if (isPremium && useWebSocket && !wsConnected && !isLoading) {\n        console.log('🔄 [AIChatPage] 自动初始化WebSocket连接...')\n        console.log('🔑 [AIChatPage] 使用token:', token.substring(0, 20) + '...')\n        \n        try {\n          const success = await initializeWebSocket()\n          if (success) {\n            console.log('✅ [AIChatPage] WebSocket自动连接成功')\n          } else {\n            console.log('❌ [AIChatPage] WebSocket自动连接失败，将回退到HTTP模式')\n          }\n        } catch (error) {\n          console.error('❌ [AIChatPage] WebSocket自动连接异常:', error)\n        }\n      }\n    }\n\n    // 添加延迟确保页面加载完成\n    const timeoutId = setTimeout(checkAuthAndInitWebSocket, 1000)\n    return () => clearTimeout(timeoutId)\n  }, [isPremium, useWebSocket, wsConnected, isLoading])\n\n  // 策略状态持久化：加载已保存的策略状态\n  useEffect(() => {\n    if (currentSession && currentSession.session_id && messagesLoaded) {\n      // 尝试从sessionStorage加载保存的策略状态\n      const savedState = loadStrategyState(currentSession.session_id)\n      if (savedState) {\n        console.log('🔄 [AIChatPage] 恢复保存的策略状态:', savedState)\n        setStrategyDevState(savedState)\n      } else {\n        console.log('📝 [AIChatPage] 无保存的策略状态，使用默认状态')\n        // 如果没有保存的状态，设置默认状态\n        setStrategyDevState({\n          phase: 'discussion',\n          currentSession: currentSession.session_id\n        })\n      }\n    }\n  }, [currentSession?.session_id, messagesLoaded])\n\n  // 暴露全局函数供外部JavaScript调用回测功能\n  useEffect(() => {\n    // 暴露触发回测功能的全局函数\n    (window as any).triggerBacktestModal = () => {\n      console.log('🌍 [AIChatPage] 外部触发回测模态框');\n      \n      // 检查是否有策略就绪状态\n      if (strategyDevState.phase === 'ready_for_backtest' || strategyDevState.phase === 'strategy_ready') {\n        setIsBacktestModalOpen(true);\n        return true;\n      } else {\n        // 如果没有策略就绪，先更新状态为就绪再打开\n        console.log('⚡ [AIChatPage] 强制设置策略就绪状态');\n        setStrategyDevState(prev => ({\n          ...prev,\n          phase: 'ready_for_backtest'\n        }));\n        // 延迟打开模态框确保状态更新完成\n        setTimeout(() => {\n          setIsBacktestModalOpen(true);\n        }, 100);\n        return true;\n      }\n    };\n    \n    // 暴露智能策略分析器调试函数（开发环境）\n    if (process.env.NODE_ENV === 'development') {\n      (window as any).testStrategyAnalyzer = (testContent?: string) => {\n        const content = testContent || `\n## ma5双均线策略\n\n\\`\\`\\`python\nclass UserStrategy(EnhancedBaseStrategy):\n    def __init__(self):\n        super().__init__()\n        self.position = 0\n        self.trades = []\n        \n    def get_data_requirements(self):\n        return [\n            DataRequest(\n                symbol=\"BTC-USDT-SWAP\",\n                data_type=DataType.KLINE,\n                timeframe=\"1h\"\n            )\n        ]\n        \n    def on_data_update(self, data):\n        ma_short = self.calculate_sma(data['close'], 5)\n        ma_long = self.calculate_sma(data['close'], 10)\n        \n        if ma_short > ma_long and self.position <= 0:\n            return TradingSignal(\n                signal_type=SignalType.BUY,\n                strength=0.8,\n                price=data['close'][-1]\n            )\n        elif ma_short < ma_long and self.position >= 0:\n            return TradingSignal(\n                signal_type=SignalType.SELL,\n                strength=0.8,\n                price=data['close'][-1]\n            )\n        \n        return None\n\\`\\`\\`\n\n策略已成功生成并保存。\n        `\n        \n        console.group('🧪 智能策略分析器测试')\n        const result = analyzeMessageForStrategy(content)\n        console.log('分析结果:', result)\n        console.log('检测为策略:', result.messageState.hasStrategyCode)\n        console.log('置信度:', `${(result.confidence * 100).toFixed(1)}%`)\n        console.log('策略类型:', result.messageState.analysisResult?.strategyType)\n        console.log('技术指标:', result.messageState.analysisResult?.indicators)\n        console.log('分析时间:', `${result.debugInfo.analysisTime.toFixed(2)}ms`)\n        console.log('错误信息:', result.debugInfo.errors)\n        console.groupEnd()\n        \n        return result\n      }\n      \n      (window as any).clearAnalyzerCache = () => {\n        strategyAnalyzer.clearCache()\n        console.log('✅ 智能策略分析器缓存已清除')\n      }\n      \n      (window as any).getAnalyzerStats = () => {\n        const stats = strategyAnalyzer.getCacheStats()\n        console.log('📊 分析器统计:', stats)\n        return stats\n      }\n    }\n\n    // 清理函数\n    return () => {\n      delete (window as any).triggerBacktestModal;\n      if (process.env.NODE_ENV === 'development') {\n        delete (window as any).testStrategyAnalyzer\n        delete (window as any).clearAnalyzerCache\n        delete (window as any).getAnalyzerStats\n      }\n    };\n  }, [strategyDevState.phase]);\n  \n  // 策略状态持久化：保存策略状态变化\n  useEffect(() => {\n    if (strategyDevState.currentSession) {\n      console.log('💾 [AIChatPage] 策略状态变化，准备保存:', {\n        sessionId: strategyDevState.currentSession,\n        phase: strategyDevState.phase,\n        strategyId: strategyDevState.strategyId\n      })\n      saveStrategyState(strategyDevState.currentSession, strategyDevState)\n    }\n  }, [strategyDevState])\n\n  // 🚨 移除了有问题的策略版本检测 useEffect，防止无限循环\n  // 策略版本管理现在通过消息渲染中的版本按钮来实现\n\n  const currentModeSessions = chatSessions['trader'] || []\n\n  const handleCreateSession = async (request: CreateSessionRequest) => {\n    await createChatSession(request)\n  }\n\n  // 处理粘贴事件\n  const handlePaste = async (e: React.ClipboardEvent) => {\n    const items = e.clipboardData?.items\n    if (!items) return\n\n    const imageFiles: File[] = []\n    \n    for (let i = 0; i < items.length; i++) {\n      const item = items[i]\n      if (item.type.startsWith('image/')) {\n        const file = item.getAsFile()\n        if (file) {\n          imageFiles.push(file)\n        }\n      }\n    }\n\n    if (imageFiles.length > 0) {\n      e.preventDefault()\n      setPastedImages(prev => [...prev, ...imageFiles])\n      toast.success(`已粘贴 ${imageFiles.length} 张图片`)\n    }\n  }\n\n  // 移除粘贴的图片\n  const removePastedImage = (index: number) => {\n    setPastedImages(prev => prev.filter((_, i) => i !== index))\n  }\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault()\n    console.log('🎯 [DEBUG] handleSendMessage called:', { messageInput, isTyping, currentSession })\n    \n    if ((!messageInput.trim() && pastedImages.length === 0) || isTyping) {\n      console.log('⚠️ [DEBUG] Early return:', { emptyMessage: !messageInput.trim(), isTyping, noImages: pastedImages.length === 0 })\n      return\n    }\n    \n    let finalMessage = messageInput\n    \n    // 如果有粘贴的图片，添加图片描述\n    if (pastedImages.length > 0) {\n      finalMessage += `\\n\\n📷 [已上传 ${pastedImages.length} 张图片，请帮我分析]`\n      // TODO: 这里可以实现真实的图片上传逻辑\n      // const uploadedUrls = await uploadImages(pastedImages)\n      // finalMessage += `\\n图片链接: ${uploadedUrls.join(', ')}`\n    }\n    \n    console.log('📨 [DEBUG] Calling sendMessage with:', finalMessage)\n    const success = await sendMessage(finalMessage)\n    console.log('📬 [DEBUG] sendMessage result:', success)\n    \n    if (success) {\n      setMessageInput('')\n      setPastedImages([])\n    }\n  }\n\n  return (\n    <div className=\"flex h-[calc(100vh-140px)]\">\n      {/* 左侧会话列表面板 */}\n      <div className=\"w-60 border-r border-gray-200 bg-gray-50 flex flex-col\">\n        {/* AI对话标题 */}\n        <div className=\"p-3 border-b border-gray-200 bg-white\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-emerald-500 via-teal-500 to-cyan-500 rounded-lg flex items-center justify-center shadow-md\">\n                <span className=\"text-white text-sm font-bold\">T</span>\n              </div>\n              <div className=\"text-sm font-medium text-gray-800\">Trademe助手</div>\n            </div>\n          </div>\n        </div>\n\n        {/* 会话列表 */}\n        <div className=\"flex-1 overflow-y-auto\">\n          <div className=\"p-3\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"text-sm font-medium text-gray-900\">对话列表</h3>\n              <button\n                onClick={() => setIsCreateModalOpen(true)}\n                className=\"px-2 py-1 bg-blue-500 text-white text-xs rounded-md hover:bg-blue-600 transition-colors\"\n              >\n                + 新建\n              </button>\n            </div>\n            \n            {isLoading ? (\n              <div className=\"text-center py-4 text-gray-500\">\n                加载中...\n              </div>\n            ) : currentModeSessions.length === 0 ? (\n              <div className=\"text-center py-6 text-gray-500\">\n                <div className=\"w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                  💬\n                </div>\n                <p className=\"text-xs mb-2\">还没有对话</p>\n                <button\n                  onClick={() => setIsCreateModalOpen(true)}\n                  className=\"text-xs text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  创建第一个对话\n                </button>\n              </div>\n            ) : (\n              <div className=\"space-y-1\">\n                {currentModeSessions.map((session) => (\n                  <div\n                    key={session.session_id}\n                    onClick={() => selectChatSession(session)}\n                    className={`group p-2 rounded-md cursor-pointer transition-colors ${\n                      currentSession?.session_id === session.session_id\n                        ? 'bg-blue-50 border-blue-200 border'\n                        : 'bg-white hover:bg-gray-50 border border-gray-200'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1 min-w-0\">\n                        <h4 className=\"font-medium text-xs text-gray-900 truncate\">\n                          {session.name}\n                        </h4>\n                        <div className=\"flex items-center space-x-2 mt-0.5\">\n                          <span className=\"text-xs text-gray-500\">\n                            {session.message_count}条\n                          </span>\n                          <span className={`w-1.5 h-1.5 rounded-full ${\n                            session.status === 'active' ? 'bg-green-400' : 'bg-gray-300'\n                          }`} />\n                          <span className=\"text-xs text-gray-400 capitalize\">\n                            {session.session_type}\n                          </span>\n                        </div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          if (window.confirm('确定要删除这个对话吗？')) {\n                            deleteChatSession(session.session_id)\n                          }\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 p-1 text-gray-400 hover:text-red-500 transition-all duration-200\"\n                        title=\"删除对话\"\n                      >\n                        <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* 中间聊天区域 */}\n      <div className=\"flex-1 flex flex-col\">\n        {currentSession ? (\n          <>\n            {/* 聊天头部 */}\n            <div className=\"p-4 border-b border-gray-200 bg-white\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"font-semibold text-gray-900\">\n                    {currentSession.name}\n                  </h2>\n                  <div className=\"flex items-center space-x-2\">\n                    <p className=\"text-sm text-gray-500\">\n                      Trademe助手\n                    </p>\n                    <span className=\"px-2 py-0.5 bg-gradient-to-r from-blue-500 to-purple-500 text-white text-xs font-bold rounded-full\">\n                      Claude 4\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  {/* AI额度信息 */}\n                  <div className=\"flex items-center space-x-2 px-3 py-1.5 bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200 rounded-lg\">\n                    <div className=\"flex items-center space-x-1\">\n                      <div className=\"w-4 h-4 bg-gradient-to-br from-emerald-500 via-teal-500 to-cyan-500 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs font-bold\">T</span>\n                      </div>\n                      <span className=\"text-xs font-medium text-gray-700\">\n                        {user?.membership_level === 'premium' ? '高级版' : '专业版'}\n                      </span>\n                    </div>\n                    <div className=\"h-3 w-px bg-gray-300\"></div>\n                    <div className=\"text-xs text-gray-600\">\n                      已用 <span className=\"font-semibold text-blue-600\">${usageStats?.daily_cost_usd?.toFixed(2) || '0.00'}</span>\n                      <span className=\"text-gray-400\">/</span>\n                      <span className=\"text-gray-500\">{user?.membership_level === 'premium' ? '$100' : '$200'}</span>\n                    </div>\n                    <div className=\"w-12 bg-gray-200 rounded-full h-1\">\n                      <div \n                        className=\"bg-gradient-to-r from-emerald-500 to-cyan-500 h-1 rounded-full transition-all duration-300\" \n                        style={{\n                          width: `${usageStats ? Math.min(100, (usageStats.daily_cost_usd / (user?.membership_level === 'premium' ? 100 : 200)) * 100) : 0}%`\n                        }}\n                      />\n                    </div>\n                  </div>\n                  \n                  {/* 网络状态指示器 */}\n                  <div className={`flex items-center space-x-1 px-2 py-1 text-xs rounded-full transition-all duration-200 ${\n                    networkStatus === 'connected' \n                      ? 'bg-green-100 text-green-700' \n                      : networkStatus === 'checking'\n                      ? 'bg-yellow-100 text-yellow-700'\n                      : 'bg-red-100 text-red-700'\n                  }`}>\n                    <div className={`w-2 h-2 rounded-full ${\n                      networkStatus === 'connected'\n                        ? 'bg-green-500'\n                        : networkStatus === 'checking'\n                        ? 'bg-yellow-500 animate-pulse'\n                        : 'bg-red-500 animate-pulse'\n                    }`} />\n                    <span>\n                      {networkStatus === 'connected' ? 'AI在线' : \n                       networkStatus === 'checking' ? '检查中' : 'AI离线'}\n                    </span>\n                    {retryCount > 0 && (\n                      <span className=\"text-orange-600\">\n                        ({retryCount}次重试)\n                      </span>\n                    )}\n                  </div>\n                  \n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    currentSession.status === 'active' \n                      ? 'bg-green-100 text-green-700' \n                      : 'bg-gray-100 text-gray-600'\n                  }`}>\n                    {currentSession.status === 'active' ? '进行中' : '已完成'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n\n            {/* 网络错误提示横幅 */}\n            {(error || networkStatus === 'disconnected') && (\n              <div className=\"bg-red-50 border-b border-red-200 px-4 py-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-4 h-4 bg-red-500 rounded-full flex-shrink-0 animate-pulse\" />\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm text-red-800 font-medium\">\n                        {error || 'AI服务连接中断'}\n                      </p>\n                      <p className=\"text-xs text-red-600 mt-1\">\n                        Claude AI服务可能正在维护，请稍后重试或检查网络连接\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={async () => {\n                        clearError()\n                        const isConnected = await checkNetworkStatus()\n                        if (isConnected) {\n                          toast.success('网络连接已恢复', { icon: '🔗' })\n                        } else {\n                          toast.error('网络仍然不可用，请检查连接', { icon: '⚠️' })\n                        }\n                      }}\n                      className=\"px-3 py-1 bg-red-100 hover:bg-red-200 text-red-700 text-xs rounded-md transition-colors duration-200 flex items-center space-x-1\"\n                    >\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                      </svg>\n                      <span>重试连接</span>\n                    </button>\n                    <button\n                      onClick={() => clearError()}\n                      className=\"text-red-600 hover:text-red-800 p-1\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 消息列表 */}\n            <ErrorBoundary>\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {messages.length === 0 ? (\n                  <div className=\"text-center py-8 text-gray-500\">\n                    <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                      🤖\n                    </div>\n                    <p>开始你的AI对话吧！</p>\n                  </div>\n                ) : (\n                  messages.map((message, index) => {\n                    // 确保message是有效对象且有必要的属性\n                    if (!message || typeof message !== 'object') {\n                      console.warn('Invalid message object at index', index, ':', message);\n                      return null;\n                    }\n\n                    // 安全地获取消息属性\n                    const role = message.role || 'assistant';\n                    const content = message.content || '';\n                    const timestamp = message.timestamp || new Date().toISOString();\n                    \n                    return (\n                      <ErrorBoundary key={`msg-${index}-${timestamp}`}>\n                        <div\n                          className={`flex ${\n                            role === 'user' ? 'justify-end' : 'justify-start'\n                          }`}\n                        >\n                          <div className={`max-w-[80%] rounded-lg px-4 py-2 ${\n                            role === 'user'\n                              ? 'bg-blue-600 text-white'\n                              : 'bg-white border border-gray-200 text-gray-900'\n                          }`}>\n                            <div className=\"whitespace-pre-wrap\">\n                              {(() => {\n                                try {\n                                  const filtered = filterMessageContent(content, role as 'user' | 'assistant');\n                                  const finalContent = typeof filtered === 'string' ? filtered : String(filtered || '');\n                                  \n                                  // 检测策略生成成功并添加版本标识 - 基于你实际看到的消息格式\n                                  const isStrategySuccess = role === 'assistant' && (\n                                    finalContent.includes('策略生成成功') ||\n                                    finalContent.includes('策略代码已生成并通过验证') ||\n                                    finalContent.includes('✅ **策略生成成功！**') ||\n                                    (finalContent.includes('📊 **性能评级**') && finalContent.includes('📈 **策略代码已生成并通过验证**')) ||\n                                    finalContent.includes('您可以在策略管理页面查看和使用生成的策略')\n                                  );\n                                  \n                                  // 🚀 添加消息接收和处理的完整调试日志\n                                  if (role === 'assistant') {\n                                    console.log('🔍 [StrategyDetection] 完整消息分析:', {\n                                      messageIndex: index,\n                                      timestamp: new Date().toISOString(),\n                                      isStrategySuccess,\n                                      messageObjectType: typeof message,\n                                      messageKeys: Object.keys(message || {}),\n                                      // 原始消息内容\n                                      originalContent: content?.substring(0, 300) + '...',\n                                      // 过滤后的消息内容\n                                      filteredContent: finalContent.substring(0, 300) + '...',\n                                      // 检测关键词\n                                      keywordResults: {\n                                        hasStrategy: finalContent.includes('策略'),\n                                        hasGenerate: finalContent.includes('生成'),\n                                        hasSuccess: finalContent.includes('成功'),\n                                        hasSuccessMessage: finalContent.includes('策略生成成功'),\n                                        hasValidated: finalContent.includes('策略代码已生成并通过验证'),\n                                        hasCheckmark: finalContent.includes('✅'),\n                                        hasBold: finalContent.includes('**'),\n                                      },\n                                      // 详细匹配检查\n                                      detailedChecks: {\n                                        check1: finalContent.includes('✅ **策略已成功生成并保存**'),\n                                        check2: finalContent.includes('策略已成功生成'),\n                                        check3: finalContent.includes('策略生成成功'),\n                                        check4: finalContent.includes('✅ **策略生成成功！**'),\n                                        check5: finalContent.includes('**策略代码已生成并通过验证**'),\n                                        // 🔧 新增流式完成检测\n                                        streamCompleted: message?.metadata?.streamCompleted,\n                                        completedAt: message?.metadata?.completedAt,\n                                        check6: finalContent.includes('**策略代码已保存到数据库**'),\n                                        // 你提到的具体消息格式\n                                        check7: finalContent.includes('📊 **性能评级**: 未知'),\n                                        check8: finalContent.includes('📈 **策略代码已生成并通过验证**'),\n                                        check9: finalContent.includes('您可以在策略管理页面查看和使用生成的策略')\n                                      },\n                                      // 消息长度信息\n                                      lengths: {\n                                        original: content?.length || 0,\n                                        filtered: finalContent.length,\n                                        difference: (content?.length || 0) - finalContent.length\n                                      }\n                                    });\n                                    \n                                    // 🔍 如果检测到策略相关内容但未匹配成功条件，特别输出\n                                    if (finalContent.includes('策略') && !isStrategySuccess) {\n                                      console.warn('⚠️ [StrategyDetection] 检测到策略相关消息但未匹配成功条件:', {\n                                        content: finalContent,\n                                        reason: '可能需要添加更多匹配条件'\n                                      });\n                                    }\n                                  }\n                                  \n                                  // 检测回测结果并优先展示\n                                  if (role === 'assistant') {\n                                    const backtestResult = extractBacktestResult(finalContent);\n                                    if (backtestResult) {\n                                      return (\n                                        <div className=\"space-y-3\">\n                                          <div className=\"text-sm\">{finalContent}</div>\n                                          <BacktestResultCard result={backtestResult} />\n                                        </div>\n                                      );\n                                    }\n                                  }\n                                  \n                                  // 如果是AI消息且包含代码块，应用特殊样式\n                                  if (role === 'assistant' && finalContent.includes('```')) {\n                                    return (\n                                      <div className=\"space-y-2\">\n                                        {finalContent.split(/```[\\s\\S]*?```/g).map((part, index, parts) => {\n                                          // 获取对应的代码块\n                                          const codeMatches = finalContent.match(/```[\\s\\S]*?```/g) || [];\n                                          const hasCode = index < codeMatches.length;\n                                          \n                                          return (\n                                            <React.Fragment key={index}>\n                                              {part && <div>{part}</div>}\n                                              {hasCode && (\n                                                <div className=\"bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm overflow-x-auto\">\n                                                  <div className=\"flex items-center justify-between mb-2\">\n                                                    <span className=\"text-gray-400\">策略代码</span>\n                                                    <button \n                                                      onClick={() => {\n                                                        const code = codeMatches[index].replace(/```(?:python)?\\s*/, '').replace(/\\s*```$/, '');\n                                                        navigator.clipboard.writeText(code);\n                                                        toast.success('代码已复制到剪贴板');\n                                                      }}\n                                                      className=\"text-xs text-blue-400 hover:text-blue-300\"\n                                                    >\n                                                      复制代码\n                                                    </button>\n                                                  </div>\n                                                  <pre className=\"whitespace-pre-wrap\">\n                                                    {codeMatches[index].replace(/```(?:python)?\\s*/, '').replace(/\\s*```$/, '')}\n                                                  </pre>\n                                                </div>\n                                              )}\n                                            </React.Fragment>\n                                          );\n                                        })}\n                                      </div>\n                                    );\n                                  }\n                                  \n                                  // 如果是策略生成成功的消息，添加版本标识\n                                  if (isStrategySuccess) {\n                                    return (\n                                      <div className=\"space-y-2\">\n                                        <div className=\"flex items-start justify-between\">\n                                          <div className=\"flex-1\">{finalContent}</div>\n                                          <button\n                                            onClick={async () => {\n                                              try {\n                                                // 获取当前会话的最新策略信息\n                                                const response = await aiApi.getLatestAIStrategy(currentSession?.session_id || '');\n                                                if (response) {\n                                                  // 创建临时策略版本对象\n                                                  const tempStrategyVersion: StrategyVersion = {\n                                                    id: `strategy_${response.strategy_id}`,\n                                                    version: response.strategy_id,\n                                                    code: response.code,\n                                                    messageIndex: index,\n                                                    timestamp: new Date(),\n                                                    title: response.name,\n                                                    description: response.description || '策略生成成功'\n                                                  };\n                                                  \n                                                  // 显示策略代码弹窗\n                                                  setStrategyCodeModal({\n                                                    isOpen: true,\n                                                    selectedVersion: tempStrategyVersion\n                                                  });\n                                                }\n                                              } catch (error) {\n                                                console.error('获取策略信息失败:', error);\n                                                toast.error('获取策略信息失败');\n                                              }\n                                            }}\n                                            className=\"ml-2 flex-shrink-0 inline-flex items-center gap-1 px-2 py-1 text-xs bg-green-100 text-green-700 rounded-full hover:bg-green-200 transition-colors\"\n                                            title=\"点击查看策略代码\"\n                                          >\n                                            <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                              <path fillRule=\"evenodd\" d=\"M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                                            </svg>\n                                            代码\n                                          </button>\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                  \n                                  return finalContent;\n                                } catch (error) {\n                                  console.error('Error filtering message content:', error);\n                                  return '[消息显示错误]';\n                                }\n                              })()}\n                            </div>\n                            <div className={`text-xs mt-1 ${\n                              role === 'user' ? 'text-blue-100' : 'text-gray-400'\n                            }`}>\n                              {(() => {\n                                try {\n                                  return new Date(timestamp).toLocaleTimeString();\n                                } catch (error) {\n                                  return new Date().toLocaleTimeString();\n                                }\n                              })()}\n                            </div>\n                          </div>\n                        </div>\n                      </ErrorBoundary>\n                    );\n                  }).filter(Boolean) // 过滤掉null值\n                )}\n              \n                {isTyping && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200 rounded-lg px-4 py-3\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"relative\">\n                          <div className=\"w-6 h-6 bg-gradient-to-br from-emerald-500 via-teal-500 to-cyan-500 rounded-full flex items-center justify-center\">\n                            <span className=\"text-white text-xs font-bold\">T</span>\n                          </div>\n                          <div className=\"absolute inset-0 rounded-full border-2 border-cyan-400 animate-ping\"></div>\n                        </div>\n                        <div className=\"flex flex-col space-y-1\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"flex space-x-1\">\n                              <div className=\"w-1.5 h-1.5 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full animate-bounce\"></div>\n                              <div className=\"w-1.5 h-1.5 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full animate-bounce\" style={{animationDelay: '0.15s'}}></div>\n                              <div className=\"w-1.5 h-1.5 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-full animate-bounce\" style={{animationDelay: '0.3s'}}></div>\n                            </div>\n                            <span className=\"text-sm font-medium text-gray-700\">Trademe助手正在思考</span>\n                          </div>\n                          <div className=\"text-xs text-gray-500\">分析中...请稍候</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </ErrorBoundary>\n\n            {/* 回测进度显示区域 */}\n            {backtestProgress.isRunning && (\n              <div className=\"px-4 pb-4\">\n                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-4 h-4 bg-blue-500 rounded-full animate-pulse\"></div>\n                      <h3 className=\"font-medium text-blue-900\">回测执行中</h3>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"text-sm text-blue-600 font-medium\">\n                        {backtestProgress.progress}%\n                      </span>\n                      {/* 展开详情按钮 */}\n                      <button\n                        onClick={() => setBacktestProgress(prev => ({ ...prev, detailsExpanded: !prev.detailsExpanded }))}\n                        className=\"text-blue-600 hover:text-blue-800 transition-colors\"\n                        title={backtestProgress.detailsExpanded ? \"收起详情\" : \"展开详情\"}\n                      >\n                        <svg \n                          className={`w-4 h-4 transform transition-transform duration-200 ${backtestProgress.detailsExpanded ? 'rotate-180' : ''}`} \n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                  \n                  {/* 进度条 */}\n                  <div className=\"w-full bg-blue-200 rounded-full h-2 mb-3\">\n                    <div \n                      className=\"bg-gradient-to-r from-blue-500 to-indigo-600 h-2 rounded-full transition-all duration-300 ease-out\" \n                      style={{ width: `${backtestProgress.progress}%` }}\n                    />\n                  </div>\n                  \n                  {/* 当前步骤 */}\n                  {backtestProgress.currentStep && (\n                    <div className=\"flex items-center space-x-2 text-sm text-blue-700 mb-2\">\n                      <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a7.646 7.646 0 110 15.292\" />\n                      </svg>\n                      <span>{backtestProgress.currentStep}</span>\n                    </div>\n                  )}\n                  \n                  {/* 预计剩余时间 */}\n                  <div className=\"flex items-center justify-between text-xs text-blue-600\">\n                    <span>预计剩余时间: {Math.round((100 - backtestProgress.progress) / 10)} 分钟</span>\n                    <span>{new Date().toLocaleTimeString()}</span>\n                  </div>\n\n                  {/* 详细执行日志 - 可展开 */}\n                  {backtestProgress.detailsExpanded && (\n                    <div className=\"mt-3 pt-3 border-t border-blue-200\">\n                      <h4 className=\"text-sm font-medium text-blue-900 mb-2\">执行日志</h4>\n                      <div className=\"bg-gray-900 text-green-400 rounded-lg p-3 font-mono text-xs max-h-32 overflow-y-auto\">\n                        {backtestProgress.executionLogs && backtestProgress.executionLogs.length > 0 ? (\n                          backtestProgress.executionLogs.map((log, index) => (\n                            <div key={index} className=\"mb-1\">\n                              <span className=\"text-gray-500\">[{new Date().toLocaleTimeString()}]</span> {log}\n                            </div>\n                          ))\n                        ) : (\n                          <div className=\"text-gray-500\">等待执行日志...</div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* 回测结果显示区域 */}\n            {backtestProgress.results && strategyDevState.phase === 'analysis' && (\n              <div className=\"px-4 pb-4\">\n                <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-4 h-4 bg-green-500 rounded-full\"></div>\n                      <h3 className=\"font-medium text-green-900\">✅ 回测完成</h3>\n                      <span className=\"px-2 py-0.5 bg-green-100 text-green-700 text-xs rounded-full font-medium\">\n                        {backtestProgress.results.totalTrades || 0}笔交易\n                      </span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      {/* 展开详情按钮 */}\n                      <button\n                        onClick={() => setBacktestProgress(prev => ({ ...prev, detailsExpanded: !prev.detailsExpanded }))}\n                        className=\"text-green-600 hover:text-green-800 transition-colors text-sm\"\n                        title={backtestProgress.detailsExpanded ? \"收起详情\" : \"查看详情\"}\n                      >\n                        <svg \n                          className={`w-4 h-4 transform transition-transform duration-200 ${backtestProgress.detailsExpanded ? 'rotate-180' : ''}`} \n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </button>\n                      <button\n                        onClick={async () => {\n                          const results = backtestProgress.results\n                          const analysisMessage = `📊 **回测分析请求**\n\n回测已完成，请帮我详细分析以下结果：\n\n**关键指标**：\n• 总收益率: +${results.totalReturn}%\n• 夏普比率: ${results.sharpeRatio}\n• 最大回撤: -${results.maxDrawdown}%\n• 胜率: ${results.winRate}%\n• 交易次数: ${results.totalTrades}次\n• 盈亏比: ${results.profitFactor}\n• 平均盈利: +${results.avgWin}%\n• 平均亏损: -${results.avgLoss}%\n\n**分析要求**：\n1. 评估策略表现的优缺点\n2. 识别风险管理问题\n3. 提供具体的优化建议\n4. 建议参数调整方向\n\n如果您认为策略需要优化，请直接提供改进方案。我将根据您的建议决定是否进行策略优化。`\n\n                          // 发送详细的分析请求\n                          setStrategyDevState(prev => ({\n                            ...prev,\n                            phase: 'analysis',\n                            backtestResults: results\n                          }))\n                          \n                          const success = await sendMessage(analysisMessage)\n                          if (!success) {\n                            setMessageInput(analysisMessage)\n                          }\n                        }}\n                        className=\"flex items-center space-x-1 px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700 transition-colors\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                        </svg>\n                        <span>AI智能分析</span>\n                      </button>\n                    </div>\n                  </div>\n                  \n                  {/* 核心指标卡片 */}\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 mb-3\">\n                    <div className=\"bg-white rounded-lg p-3 text-center border border-green-100\">\n                      <div className=\"text-xs font-medium text-green-600 mb-1\">总收益率</div>\n                      <div className={`text-lg font-bold ${parseFloat(backtestProgress.results.totalReturn) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {parseFloat(backtestProgress.results.totalReturn) >= 0 ? '+' : ''}{backtestProgress.results.totalReturn || 0}%\n                      </div>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 text-center border border-green-100\">\n                      <div className=\"text-xs font-medium text-green-600 mb-1\">夏普比率</div>\n                      <div className={`text-lg font-bold ${parseFloat(backtestProgress.results.sharpeRatio) >= 1.5 ? 'text-green-600' : parseFloat(backtestProgress.results.sharpeRatio) >= 1 ? 'text-yellow-600' : 'text-red-600'}`}>\n                        {backtestProgress.results.sharpeRatio || 0}\n                      </div>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 text-center border border-green-100\">\n                      <div className=\"text-xs font-medium text-green-600 mb-1\">最大回撤</div>\n                      <div className={`text-lg font-bold ${parseFloat(backtestProgress.results.maxDrawdown) <= 10 ? 'text-green-600' : parseFloat(backtestProgress.results.maxDrawdown) <= 20 ? 'text-yellow-600' : 'text-red-600'}`}>\n                        -{backtestProgress.results.maxDrawdown || 0}%\n                      </div>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 text-center border border-green-100\">\n                      <div className=\"text-xs font-medium text-green-600 mb-1\">胜率</div>\n                      <div className={`text-lg font-bold ${parseFloat(backtestProgress.results.winRate) >= 60 ? 'text-green-600' : parseFloat(backtestProgress.results.winRate) >= 50 ? 'text-yellow-600' : 'text-red-600'}`}>\n                        {backtestProgress.results.winRate || 0}%\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 详细指标 - 可展开 */}\n                  {backtestProgress.detailsExpanded && (\n                    <div className=\"mt-3 pt-3 border-t border-green-200 space-y-3\">\n                      {/* 详细指标网格 */}\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                        <div className=\"bg-white rounded p-2 border border-green-100\">\n                          <div className=\"text-xs text-green-600 mb-1\">交易次数</div>\n                          <div className=\"font-bold text-gray-800\">{backtestProgress.results.totalTrades || 0}次</div>\n                        </div>\n                        <div className=\"bg-white rounded p-2 border border-green-100\">\n                          <div className=\"text-xs text-green-600 mb-1\">盈亏比</div>\n                          <div className=\"font-bold text-gray-800\">{backtestProgress.results.profitFactor || 0}</div>\n                        </div>\n                        <div className=\"bg-white rounded p-2 border border-green-100\">\n                          <div className=\"text-xs text-green-600 mb-1\">平均盈利</div>\n                          <div className=\"font-bold text-green-600\">+{backtestProgress.results.avgWin || 0}%</div>\n                        </div>\n                        <div className=\"bg-white rounded p-2 border border-green-100\">\n                          <div className=\"text-xs text-green-600 mb-1\">平均亏损</div>\n                          <div className=\"font-bold text-red-600\">-{backtestProgress.results.avgLoss || 0}%</div>\n                        </div>\n                      </div>\n\n                      {/* 执行日志 */}\n                      {backtestProgress.executionLogs && backtestProgress.executionLogs.length > 0 && (\n                        <div>\n                          <h4 className=\"text-sm font-medium text-green-800 mb-2\">📋 执行日志</h4>\n                          <div className=\"bg-gray-900 text-green-400 rounded-lg p-3 font-mono text-xs max-h-32 overflow-y-auto\">\n                            {backtestProgress.executionLogs.map((log, index) => (\n                              <div key={index} className=\"mb-1\">\n                                <span className=\"text-gray-500\">[{new Date().toLocaleTimeString()}]</span> {log}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* 快捷操作 */}\n                      <div className=\"flex flex-wrap gap-2 pt-2\">\n                        <button \n                          className=\"flex items-center space-x-1 px-3 py-1.5 bg-blue-100 text-blue-700 text-xs rounded-lg hover:bg-blue-200 transition-colors\"\n                          onClick={() => {\n                            // TODO: 导出详细报告\n                            toast('导出功能开发中...')\n                          }}\n                        >\n                          <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                          </svg>\n                          <span>导出报告</span>\n                        </button>\n                        <button \n                          className=\"flex items-center space-x-1 px-3 py-1.5 bg-purple-100 text-purple-700 text-xs rounded-lg hover:bg-purple-200 transition-colors\"\n                          onClick={() => {\n                            // TODO: 查看交易明细\n                            toast('交易明细功能开发中...')\n                          }}\n                        >\n                          <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 00-2-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                          </svg>\n                          <span>交易明细</span>\n                        </button>\n                        <button \n                          className=\"flex items-center space-x-1 px-3 py-1.5 bg-indigo-100 text-indigo-700 text-xs rounded-lg hover:bg-indigo-200 transition-colors\"\n                          onClick={() => {\n                            // TODO: 生成图表\n                            toast('图表功能开发中...')\n                          }}\n                        >\n                          <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                          </svg>\n                          <span>可视化图表</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* 智能快捷操作按钮 - 根据策略开发状态显示 */}\n            <div className=\"px-4 py-2 border-t border-gray-100 bg-gray-50\">\n              {/* 策略开发流程状态提示区域 */}\n              {strategyDevState.phase !== 'discussion' && (\n                <div className=\"mb-3 p-3 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full flex items-center justify-center\">\n                        {strategyDevState.phase === 'development_confirmed' && '🤝'}\n                        {strategyDevState.phase === 'developing' && '🔄'}\n                        {strategyDevState.phase === 'strategy_ready' && '✅'}\n                        {strategyDevState.phase === 'ready_for_backtest' && '🚀'}\n                        {strategyDevState.phase === 'backtesting' && '📊'}\n                        {strategyDevState.phase === 'backtest_completed' && '📈'}\n                        {strategyDevState.phase === 'analysis_requested' && '🔍'}\n                        {strategyDevState.phase === 'analyzing_results' && '🤖'}\n                        {strategyDevState.phase === 'optimization_suggested' && '💡'}\n                        {strategyDevState.phase === 'modification_confirmed' && '🔧'}\n                      </div>\n                      <div>\n                        <h4 className=\"text-sm font-semibold text-blue-900\">\n                          {strategyDevState.phase === 'development_confirmed' && '开发确认阶段'}\n                          {strategyDevState.phase === 'developing' && '策略开发中'}\n                          {strategyDevState.phase === 'strategy_ready' && '策略就绪'}\n                          {strategyDevState.phase === 'ready_for_backtest' && '就绪待回测'}\n                          {strategyDevState.phase === 'backtesting' && '回测执行中'}\n                          {strategyDevState.phase === 'backtest_completed' && '回测完成'}\n                          {strategyDevState.phase === 'analysis_requested' && '等待分析确认'}\n                          {strategyDevState.phase === 'analyzing_results' && 'AI分析中'}\n                          {strategyDevState.phase === 'optimization_suggested' && '优化建议就绪'}\n                          {strategyDevState.phase === 'modification_confirmed' && '策略修改中'}\n                        </h4>\n                        <p className=\"text-xs text-blue-600 mt-0.5\">\n                          {strategyDevState.optimizationCount && strategyDevState.optimizationCount > 0 && \n                            `第${strategyDevState.optimizationCount}轮优化 • `}\n                          策略ID: {strategyDevState.strategyId || '生成中...'}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-xs text-blue-500\">\n                      {strategyDevState.currentSession && `会话: ${strategyDevState.currentSession.slice(-8)}`}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex flex-wrap gap-2\">\n                \n                {/* 🎯 智能回测按钮 - 当检测到策略代码时自动显示 */}\n                {(strategyDevState.phase === 'strategy_ready' || strategyDevState.phase === 'analysis') && (\n                  <button\n                    onClick={() => setIsBacktestModalOpen(true)}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 shadow-md hover:shadow-lg transform hover:scale-105\"\n                  >\n                    <div className=\"w-5 h-5 bg-white bg-opacity-20 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                    <span className=\"font-medium\">立即回测</span>\n                    <span className=\"px-2 py-0.5 bg-white bg-opacity-20 text-xs rounded-full\">AI生成</span>\n                  </button>\n                )}\n\n                {/* 策略优化循环按钮 - 在分析阶段显示 */}\n                {strategyDevState.phase === 'analysis' && (\n                  <button\n                    onClick={async () => {\n                      const optimizationMessage = `🔄 **策略优化请求**\n\n基于刚才的回测分析，我希望对策略进行优化改进。\n\n**优化要求**：\n1. 请根据您刚才提出的建议修改策略代码\n2. 重点关注风险管理和收益率提升\n3. 保持策略的核心逻辑不变，主要优化参数和细节\n4. 提供优化后的完整策略代码\n\n优化完成后，我将进行新的回测来验证改进效果。`\n\n                      // 更新状态为优化中\n                      setStrategyDevState(prev => ({\n                        ...prev,\n                        phase: 'optimization'\n                      }))\n                      \n                      const success = await sendMessage(optimizationMessage)\n                      if (!success) {\n                        setMessageInput(optimizationMessage)\n                      }\n                    }}\n                    className=\"flex items-center space-x-2 px-3 py-1.5 bg-white border border-orange-300 rounded-lg text-sm text-orange-600 hover:bg-orange-50 hover:border-orange-400 transition-colors shadow-sm\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                    <span>优化策略</span>\n                  </button>\n                )}\n                \n                {/* 回测分析按钮 - 只在策略就绪后显示 */}\n                {strategyDevState.phase === 'ready_for_backtest' && (\n                  <button\n                    onClick={() => setIsBacktestModalOpen(true)}\n                    className=\"flex items-center space-x-2 px-3 py-1.5 bg-white border border-blue-300 rounded-lg text-sm text-blue-600 hover:bg-blue-50 hover:border-blue-400 transition-colors shadow-sm\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 00-2-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    <span>配置回测</span>\n                  </button>\n                )}\n                \n                {/* 添加到策略库按钮 - 只在有策略代码时显示 */}\n                {(strategyDevState.phase === 'ready_for_backtest' || strategyDevState.phase === 'backtesting' || \n                  strategyDevState.phase === 'analysis' || strategyDevState.phase === 'optimization') && (\n                  <button\n                    onClick={async () => {\n                      if (!currentSession) {\n                        toast.error('请先选择会话')\n                        return\n                      }\n                      \n                      const isIndicatorSession = currentSession?.session_type === 'indicator'\n                      const itemType = isIndicatorSession ? '指标' : '策略'\n                      const libraryType = isIndicatorSession ? '指标库' : '策略库'\n                      \n                      // 使用已存储的策略ID\n                      const strategyId = strategyDevState.strategyId\n                      if (!strategyId) {\n                        toast.error(`未找到${itemType}ID`)\n                        return\n                      }\n                      \n                      // 从代码或对话中提取名称\n                      let strategyName = `AI生成的${itemType}_${Date.now()}`\n                      const lastAIMessage = messages.slice().reverse().find(m => m.role === 'assistant')\n                      if (lastAIMessage) {\n                        const nameMatch = lastAIMessage.content.match(/(?:策略|指标)名称[:：]\\s*([^\\n]+)/i)\n                        if (nameMatch) {\n                          strategyName = nameMatch[1].trim()\n                        }\n                      }\n                      \n                      try {\n                        toast.loading(`正在保存${itemType}到${libraryType}...`)\n                        \n                        await strategyApi.createStrategyFromAI({\n                          name: strategyName,\n                          description: `从AI会话生成的${itemType}`,\n                          code: `// Strategy ID: ${strategyId}`,\n                          parameters: {},\n                          strategy_type: isIndicatorSession ? 'indicator' : 'strategy',\n                          ai_session_id: currentSession.session_id\n                        })\n                        \n                        toast.dismiss()\n                        toast.success(`${itemType}已成功添加到${libraryType}`)\n                      } catch (error: any) {\n                        toast.dismiss()\n                        console.error('保存策略/指标失败:', error)\n                        toast.error(`保存失败: ${error.message || '未知错误'}`)\n                      }\n                    }}\n                    className=\"flex items-center space-x-2 px-3 py-1.5 bg-white border border-green-300 rounded-lg text-sm text-green-600 hover:bg-green-50 hover:border-green-400 transition-colors shadow-sm\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    <span>\n                      {currentSession?.session_type === 'indicator' ? '保存指标' : '保存策略'}\n                    </span>\n                  </button>\n                )}\n                \n                {/* 回测策略按钮 - 只在策略开发完成后显示 */}\n                {(strategyDevState.phase === 'ready_for_backtest' || strategyDevState.phase === 'backtesting' || \n                  strategyDevState.phase === 'analysis' || strategyDevState.phase === 'optimization') && (\n                  <button\n                    onClick={() => {\n                      if (strategyDevState.strategyId) {\n                        setIsBacktestModalOpen(true)\n                      } else {\n                        setMessageInput('请先完成策略开发，然后再进行回测')\n                      }\n                    }}\n                    className=\"flex items-center space-x-2 px-3 py-1.5 bg-white border border-blue-300 rounded-lg text-sm text-blue-600 hover:bg-blue-50 hover:border-blue-400 transition-colors shadow-sm\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    <span>回测策略</span>\n                  </button>\n                )}\n              </div>\n            </div>\n\n            {/* 消息输入框 */}\n            <div className=\"p-4 border-t border-gray-200 bg-white\">\n              {/* 粘贴图片预览 */}\n              {pastedImages.length > 0 && (\n                <div className=\"mb-3 p-3 bg-gray-50 rounded-lg border border-gray-200\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">已粘贴的图片 ({pastedImages.length})</span>\n                    <button\n                      onClick={() => setPastedImages([])}\n                      className=\"text-xs text-red-500 hover:text-red-700\"\n                    >\n                      清除全部\n                    </button>\n                  </div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {pastedImages.map((file, index) => (\n                      <div key={index} className=\"relative group\">\n                        <div className=\"w-16 h-16 bg-gray-200 rounded-lg flex items-center justify-center border overflow-hidden\">\n                          <img\n                            src={URL.createObjectURL(file)}\n                            alt={`粘贴图片 ${index + 1}`}\n                            className=\"w-full h-full object-cover\"\n                            onLoad={(e) => URL.revokeObjectURL((e.target as HTMLImageElement).src)}\n                          />\n                        </div>\n                        <button\n                          onClick={() => removePastedImage(index)}\n                          className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 text-white rounded-full text-xs opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\"\n                        >\n                          ×\n                        </button>\n                        <div className=\"text-xs text-gray-500 mt-1 text-center truncate w-16\">\n                          {file.name.split('.')[0]}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              <form onSubmit={handleSendMessage} className=\"flex space-x-3\">\n                <div className=\"flex-1 relative\">\n                  <input\n                    type=\"text\"\n                    value={messageInput}\n                    onChange={(e) => setMessageInput(e.target.value)}\n                    onPaste={handlePaste}\n                    placeholder={pastedImages.length > 0 ? \"添加描述文字（可选）...\" : \"与Trademe助手对话，支持直接粘贴图片...\"}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent\"\n                    disabled={isTyping}\n                  />\n                  {pastedImages.length > 0 && (\n                    <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-cyan-100 text-cyan-600 px-2 py-1 rounded text-xs\">\n                      📷 {pastedImages.length}\n                    </div>\n                  )}\n                </div>\n                <button\n                  type=\"submit\"\n                  disabled={(!messageInput.trim() && pastedImages.length === 0) || isTyping}\n                  className=\"px-4 py-2 bg-gradient-to-r from-emerald-500 to-cyan-500 text-white rounded-lg hover:from-emerald-600 hover:to-cyan-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all\"\n                >\n                  {isTyping ? '发送中' : pastedImages.length > 0 ? `发送 📷${pastedImages.length}` : '发送'}\n                </button>\n              </form>\n              \n              {/* 提示信息 */}\n              <div className=\"mt-2 text-xs text-gray-400 text-center\">\n                💡 提示：直接粘贴图片到输入框即可上传分析\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                🤖\n              </div>\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Trademe助手\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                选择或创建对话开始智能交流\n              </p>\n              <button \n                onClick={() => setIsCreateModalOpen(true)}\n                className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n              >\n                创建新对话\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n\n      {/* 创建会话模态框 */}\n      <CreateSessionModal\n        isOpen={isCreateModalOpen}\n        onClose={() => setIsCreateModalOpen(false)}\n        onCreateSession={handleCreateSession}\n        aiMode=\"trader\"\n      />\n\n      {/* 回测配置模态框 */}\n      <BacktestConfigModal\n        isOpen={isBacktestModalOpen}\n        onClose={() => setIsBacktestModalOpen(false)}\n        strategyVersions={strategyVersions}\n        onOpenStrategyModal={(versionId: string) => {\n          setStrategyVersions(prev => ({\n            ...prev,\n            selectedVersion: versionId\n          }))\n          setIsStrategyCodeModalOpen(true)\n        }}\n        onSubmit={async (config) => {\n          // 模拟进度更新函数（作为后备）\n          const startMockProgressUpdate = () => {\n            // 模拟回测进度更新\n            const progressSteps = [\n              { \n                progress: 10, \n                step: '加载策略代码...', \n                logs: ['📄 读取策略文件...', '✅ 策略代码验证通过', '🔍 检查策略依赖项...'] \n              },\n              { \n                progress: 25, \n                step: '下载历史数据...', \n                logs: [`📊 连接${config.exchange}交易所...`, `📥 下载${config.symbols.join(', ')}数据...`, '⏰ 数据时间范围验证...'] \n              },\n              { \n                progress: 45, \n                step: '执行回测逻辑...', \n                logs: ['🧮 初始化交易引擎...', '📈 开始模拟交易...', '⚡ 处理交易信号...'] \n              },\n              { \n                progress: 70, \n                step: '计算性能指标...', \n                logs: ['📊 计算收益率...', '📉 分析回撤风险...', '🎯 评估策略表现...'] \n              },\n              { \n                progress: 90, \n                step: '生成分析报告...', \n                logs: ['📋 汇总交易记录...', '📈 生成图表数据...', '💡 准备优化建议...'] \n              },\n              { \n                progress: 100, \n                step: '回测完成！', \n                logs: ['✅ 回测执行完成', '📊 结果数据已保存', '🎉 等待用户查看...'] \n              }\n            ]\n            \n            // 模拟回测执行过程\n            let currentIndex = 0\n            const progressInterval = setInterval(() => {\n              if (currentIndex < progressSteps.length) {\n                const currentStep = progressSteps[currentIndex]\n                \n                // 更新进度和日志\n                setBacktestProgress(prev => ({\n                  ...prev,\n                  progress: currentStep.progress,\n                  currentStep: currentStep.step,\n                  executionLogs: [...(prev.executionLogs || []), ...currentStep.logs]\n                }))\n                \n                currentIndex++\n              } else {\n                clearInterval(progressInterval)\n                // 回测完成，生成模拟结果\n                setTimeout(() => {\n                  const finalResults = {\n                    totalReturn: (Math.random() * 50 + 10).toFixed(2),\n                    sharpeRatio: (Math.random() * 2 + 0.5).toFixed(2),\n                    maxDrawdown: (Math.random() * 20 + 5).toFixed(2),\n                    winRate: (Math.random() * 40 + 40).toFixed(0),\n                    totalTrades: Math.floor(Math.random() * 200 + 50),\n                    profitFactor: (Math.random() * 2 + 1).toFixed(2),\n                    avgWin: (Math.random() * 3 + 1).toFixed(2),\n                    avgLoss: (Math.random() * 2 + 0.5).toFixed(2)\n                  }\n                  \n                  setBacktestProgress(prev => ({\n                    ...prev,\n                    isRunning: false,\n                    results: finalResults,\n                    executionLogs: [\n                      ...(prev.executionLogs || []), \n                      `🎯 总收益率: +${finalResults.totalReturn}%`,\n                      `⚡ 夏普比率: ${finalResults.sharpeRatio}`,\n                      `📉 最大回撤: -${finalResults.maxDrawdown}%`,\n                      `🎲 胜率: ${finalResults.winRate}%`,\n                      `📈 交易次数: ${finalResults.totalTrades}次`,\n                      '✅ 回测分析完成！'\n                    ]\n                  }))\n                  setStrategyDevState(prev => ({\n                    ...prev,\n                    phase: 'analysis'\n                  }))\n                  toast.success('🎉 回测完成！您可以查看结果并请求AI分析', { duration: 4000 })\n                }, 1000)\n              }\n            }, 3000) // 增加到3秒间隔，让用户能看到详细过程\n          }\n\n          try {\n\n            // 从API获取最新的策略代码\n            const getLatestStrategyCode = async () => {\n              try {\n                if (!currentSession?.session_id) {\n                  console.warn('⚠️ 没有当前会话ID，无法获取策略代码')\n                  return '# 错误：没有找到会话ID'\n                }\n\n                // 调用API获取该会话的最新策略\n                console.log('🔍 从API获取策略代码，会话ID:', currentSession.session_id)\n                const response = await tradingServiceClient.get(`/strategies/latest-ai-strategy/${currentSession.session_id}`)\n                const strategy = response.data\n                \n                if (!strategy || !strategy.code) {\n                  console.warn('⚠️ API未返回策略代码')\n                  return '# 错误：未找到策略代码'\n                }\n                \n                console.log('✅ 成功获取策略代码，长度:', strategy.code.length, '字符')\n                console.log('📄 策略名称:', strategy.name)\n                return strategy.code\n                \n              } catch (error: any) {\n                console.error('❌ 获取策略代码失败:', error)\n                \n                // 如果API失败，回退到原来的方法（从消息中提取）\n                console.log('🔄 API失败，尝试从消息历史中提取...')\n                for (let i = messages.length - 1; i >= 0; i--) {\n                  const message = messages[i]\n                  if (message.role === 'assistant') {\n                    const code = extractCodeFromMessage(message.content)\n                    if (code) {\n                      console.log('🎯 从消息中找到策略代码，长度:', code.length, '字符')\n                      return code\n                    }\n                  }\n                }\n                \n                return strategyDevState.strategyId ? \n                  `# 策略ID: ${strategyDevState.strategyId}\\n# API获取失败，请重新生成策略\\n# 错误: ${error.message}` : \n                  '# 错误：无法获取策略代码'\n              }\n            }\n\n            // 获取策略代码（现在是异步操作）\n            const strategyCode = await getLatestStrategyCode()\n            \n            // 准备API请求数据\n            const backtestConfig = {\n              strategy_code: strategyCode,\n              exchange: config.exchange,\n              product_type: config.productType,\n              symbols: config.symbols,\n              timeframes: config.timeframes,\n              fee_rate: config.feeRate,\n              initial_capital: config.initialCapital,\n              start_date: config.startDate,\n              end_date: config.endDate,\n              data_type: config.dataType\n            }\n\n            // 调用后端API启动实时回测 - 使用tradingServiceClient确保token正确传递\n            console.log('🔍 DEBUG: Using tradingServiceClient for backtest request')\n            console.log('🔍 DEBUG: Request payload:', JSON.stringify(backtestConfig, null, 2))\n\n            console.log('🔧 [VERSION-1925-FINAL-FIX-V3] 发送回测请求...')\n            const response = await tradingServiceClient.post('/realtime-backtest/start', backtestConfig)\n            const result = response.data\n            const taskId = result.task_id\n            console.log('🔧 [VERSION-1925-ULTIMATE-FIX] API请求成功，taskId:', taskId)\n\n            // ✅ 只有API请求成功后才执行所有状态设置逻辑\n            \n            // 更新策略开发状态为回测中\n            setStrategyDevState(prev => ({\n              ...prev,\n              phase: 'backtesting'\n            }))\n            \n            // 启动回测进度显示\n            setBacktestProgress({\n              isRunning: true,\n              progress: 0,\n              currentStep: '准备回测环境...',\n              detailsExpanded: false,\n              executionLogs: ['🚀 回测任务已启动...', '⚙️ 初始化回测环境...']\n            })\n            \n            // 启动WebSocket连接监听进度\n            // 使用Nginx代理路径，不直接连接8001端口\n            const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n            const host = window.location.host // 使用完整的host:port\n            const token = localStorage.getItem('token') || sessionStorage.getItem('token')\n            \n            // 添加token到查询参数中\n            const wsUrl = `${protocol}//${host}/api/v1/realtime-backtest/ws/${taskId}?token=${encodeURIComponent(token || '')}`\n            console.log('🔍 DEBUG: WebSocket URL (token masked):', wsUrl.replace(/token=[^&]+/, 'token=***'))\n            const ws = new WebSocket(wsUrl)\n\n            ws.onmessage = (event) => {\n              try {\n                const data = JSON.parse(event.data)\n                \n                // 处理认证成功响应\n                if (data.type === 'auth_success') {\n                  console.log('✅ WebSocket认证成功:', data.message)\n                  toast.success('实时进度连接已建立')\n                  return\n                }\n                \n                // 处理错误消息\n                if (data.error) {\n                  console.error('WebSocket错误:', data.error, 'Code:', data.code)\n                  \n                  // 根据错误代码显示不同的错误信息\n                  if (data.code === 4001) {\n                    toast.error('认证超时，请重新登录')\n                  } else if (data.code === 4003) {\n                    toast.error('缺少认证信息')\n                  } else if (data.code === 4004) {\n                    if (data.error.includes('回测任务不存在')) {\n                      toast.error('回测任务不存在或已过期')\n                    } else {\n                      toast.error('认证失败，请重新登录')\n                    }\n                  } else {\n                    toast.error(`连接错误: ${data.error}`)\n                  }\n                  \n                  // 对于认证失败，回退到模拟进度\n                  if (data.code >= 4001 && data.code <= 4005) {\n                    startMockProgressUpdate()\n                  }\n                  return\n                }\n\n                // 处理任务完成消息\n                if (data.type === 'task_finished') {\n                  console.log('📋 回测任务完成:', data.final_status)\n                  return\n                }\n\n                // 更新回测进度状态\n                setBacktestProgress(prev => ({\n                  ...prev,\n                  progress: data.progress || prev.progress,\n                  currentStep: data.current_step || data.currentStep || prev.currentStep,\n                  executionLogs: data.logs || prev.executionLogs\n                }))\n\n                // 如果回测完成\n                if (data.status === 'completed' && data.results) {\n                  setBacktestProgress(prev => ({\n                    ...prev,\n                    isRunning: false,\n                    results: data.results\n                  }))\n                  \n                  setStrategyDevState(prev => ({\n                    ...prev,\n                    phase: 'analysis'\n                  }))\n\n                  toast.success('🎉 回测完成！您可以查看结果并请求AI分析', { duration: 4000 })\n                  ws.close()\n                }\n              } catch (error) {\n                console.error('解析WebSocket消息失败:', error)\n              }\n            }\n\n            ws.onerror = (error) => {\n              console.error('WebSocket连接错误:', error)\n              toast.error('实时进度连接失败，将使用模拟进度')\n              \n              // 回退到模拟进度更新\n              startMockProgressUpdate()\n            }\n\n            ws.onclose = () => {\n              console.log('WebSocket连接已关闭')\n            }\n\n            const message = `🚀 正在执行回测分析...\n\n**回测配置**：\n• 交易所：${config.exchange}\n• 品种类型：${config.productType}\n• 交易品种：${config.symbols.join(', ')}\n• 时间周期：${config.timeframes.join(', ')}\n• 数据类型：${config.dataType === 'tick' ? 'Tick数据回测（高精度）' : 'K线数据回测（标准）'}\n• 手续费率：${config.feeRate}\n• 初始资金：${config.initialCapital} USDT\n• 回测时间：${config.startDate} 至 ${config.endDate}\n\n回测正在后台执行中，您可以在下方查看实时进度。回测完成后，我将为您详细分析结果并提供优化建议。`\n            \n            console.log('🔧 [VERSION-1925-FINAL-FIX-V3] 添加成功消息并启动进度监控')\n            \n            // ✅ 关闭弹窗 - 只在成功时执行\n            setIsBacktestModalOpen(false)\n          \n            // ✅ 启动模拟进度更新 - 只在成功时执行\n            startMockProgressUpdate()\n            \n          } catch (error) {\n            console.error('🔧 [VERSION-1925-FINAL-FIX-V4] 启动实时回测失败:', error)\n            \n            // 检查是否是数据验证错误 - 支持多种错误格式\n            const isValidationError = (\n              // 标准axios错误格式\n              (error.response && (error.response.status === 400 || error.response.status === 422)) ||\n              // 自定义错误格式\n              (error.code === 400 || error.code === 422) ||\n              // 验证类型错误\n              (error.type === 'validation' && error.code === 400)\n            )\n            \n            console.log('🔧 [VERSION-1925-FINAL-FIX-V4] 错误类型检测:', {\n              isValidationError,\n              errorType: error.type,\n              errorCode: error.code,\n              responseStatus: error.response?.status,\n              fullError: error\n            })\n            \n            if (isValidationError) {\n              // 获取错误信息 - 支持多种格式\n              const errorMessage = \n                error.response?.data?.detail || \n                error.details?.message || \n                error.message || \n                '数据验证失败'\n              \n              console.log('🔧 [VERSION-1925-FINAL-FIX-V4] 验证错误处理 - 只关闭弹窗，绝不启动任何回测逻辑:', errorMessage)\n              toast.error(errorMessage, { duration: 5000 })\n              \n              // ✅ 验证错误时：只关闭弹窗，绝不进入任何回测状态\n              setIsBacktestModalOpen(false)\n              // ✅ 明确return，避免执行后续任何逻辑\n              return\n            }\n            \n            // 其他错误（网络错误等）才使用模拟模式\n            console.log('🔧 [VERSION-1925-FINAL-FIX-V4] 非验证错误，启动模拟模式')\n            toast.error('回测启动失败，将使用模拟模式')\n            \n            // ✅ 关闭弹窗后才启动模拟模式\n            setIsBacktestModalOpen(false)\n            \n            // 回退到原来的模拟逻辑\n            startMockProgressUpdate()\n          }\n        }}\n      />\n\n      {/* 策略版本管理模态框 */}\n      <StrategyCodeModal\n        isOpen={isStrategyCodeModalOpen}\n        onClose={() => setIsStrategyCodeModalOpen(false)}\n        strategyVersion={strategyVersions.versions.find(v => v.id === strategyVersions.selectedVersion) || null}\n      />\n      \n      {/* 新的策略代码弹窗 - 从AI对话消息中触发 */}\n      <StrategyCodeModal\n        isOpen={strategyCodeModal.isOpen}\n        onClose={() => setStrategyCodeModal({ isOpen: false, selectedVersion: null })}\n        strategyVersion={strategyCodeModal.selectedVersion}\n      />\n    </div>\n  )\n}\n\n// 回测配置模态框组件\ninterface BacktestConfigModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onSubmit: (config: BacktestConfig) => Promise<void>\n  strategyVersions: StrategyVersionState\n  onOpenStrategyModal: (versionId: string) => void\n}\n\nconst BacktestConfigModal: React.FC<BacktestConfigModalProps> = ({ isOpen, onClose, onSubmit, strategyVersions, onOpenStrategyModal }) => {\n  const { user } = useUserInfo()\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [config, setConfig] = useState<BacktestConfig>({\n    exchange: 'binance',\n    productType: 'spot',\n    symbols: ['BTC/USDT'],\n    timeframes: ['1h'],\n    feeRate: 'vip0',\n    initialCapital: 10000,\n    startDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0],\n    dataType: 'kline'\n  })\n\n  const exchanges = [\n    { value: 'binance', label: '币安 (Binance)' },\n    { value: 'okx', label: 'OKX' },\n    { value: 'huobi', label: '火币 (Huobi)' },\n    { value: 'bybit', label: 'Bybit' }\n  ]\n\n  const productTypes = [\n    { value: 'spot', label: '现货' },\n    { value: 'perpetual', label: '永续合约' },\n    { value: 'delivery', label: '交割合约' }\n  ]\n\n  const timeframes = [\n    { value: '1m', label: '1分钟' },\n    { value: '5m', label: '5分钟' },\n    { value: '15m', label: '15分钟' },\n    { value: '30m', label: '30分钟' },\n    { value: '1h', label: '1小时' },\n    { value: '4h', label: '4小时' },\n    { value: '1d', label: '1天' }\n  ]\n\n  // 智能手续费率配置 - 基于产品类型动态切换\n  const feeRateOptions = {\n    spot: [\n      { value: 'vip0', label: 'VIP0 现货 (0.1%/0.1%)' },\n      { value: 'vip1', label: 'VIP1 现货 (0.09%/0.09%)' },\n      { value: 'vip2', label: 'VIP2 现货 (0.08%/0.08%)' },\n      { value: 'vip3', label: 'VIP3 现货 (0.07%/0.07%)' },\n      { value: 'vip4', label: 'VIP4 现货 (0.06%/0.06%)' }\n    ],\n    perpetual: [\n      { value: 'vip0_perp', label: 'VIP0 合约 (0.02%/0.04%)' },\n      { value: 'vip1_perp', label: 'VIP1 合约 (0.016%/0.04%)' },\n      { value: 'vip2_perp', label: 'VIP2 合约 (0.012%/0.035%)' },\n      { value: 'vip3_perp', label: 'VIP3 合约 (0.008%/0.03%)' },\n      { value: 'vip4_perp', label: 'VIP4 合约 (0.004%/0.025%)' }\n    ],\n    delivery: [\n      { value: 'vip0_delivery', label: 'VIP0 交割 (0.02%/0.05%)' },\n      { value: 'vip1_delivery', label: 'VIP1 交割 (0.016%/0.045%)' },\n      { value: 'vip2_delivery', label: 'VIP2 交割 (0.012%/0.04%)' },\n      { value: 'vip3_delivery', label: 'VIP3 交割 (0.008%/0.035%)' },\n      { value: 'vip4_delivery', label: 'VIP4 交割 (0.004%/0.03%)' }\n    ]\n  }\n\n  // 获取当前产品类型对应的手续费率选项\n  const getCurrentFeeRates = () => {\n    return feeRateOptions[config.productType as keyof typeof feeRateOptions] || feeRateOptions.spot\n  }\n\n  // 产品类型默认手续费率映射\n  const defaultFeeRates = {\n    spot: 'vip0',\n    perpetual: 'vip0_perp',\n    delivery: 'vip0_delivery'\n  }\n\n  const popularSymbols = [\n    'BTC/USDT', 'ETH/USDT', 'BNB/USDT', 'ADA/USDT', 'DOT/USDT',\n    'SOL/USDT', 'MATIC/USDT', 'LINK/USDT', 'UNI/USDT', 'LTC/USDT'\n  ]\n\n  const handleSymbolToggle = (symbol: string) => {\n    setConfig(prev => ({\n      ...prev,\n      symbols: prev.symbols.includes(symbol)\n        ? prev.symbols.filter(s => s !== symbol)\n        : [...prev.symbols, symbol]\n    }))\n  }\n\n  const handleTimeframeToggle = (timeframe: string) => {\n    setConfig(prev => ({\n      ...prev,\n      timeframes: prev.timeframes.includes(timeframe)\n        ? prev.timeframes.filter(t => t !== timeframe)\n        : [...prev.timeframes, timeframe]\n    }))\n  }\n\n  // 获取用户Tick回测权限\n  const getTickBacktestLimit = () => {\n    const level = user?.membership_level?.toLowerCase()\n    switch (level) {\n      case 'premium': return 30\n      case 'professional': return 100\n      default: return 0\n    }\n  }\n\n  const isTickDisabled = () => {\n    return user?.membership_level?.toLowerCase() === 'basic'\n  }\n\n  const handleSubmit = async () => {\n    if (config.symbols.length === 0) {\n      alert('请至少选择一个交易品种')\n      return\n    }\n    if (config.timeframes.length === 0) {\n      alert('请至少选择一个时间周期')\n      return\n    }\n    if (config.dataType === 'tick' && isTickDisabled()) {\n      alert('Tick数据回测需要高级版或专业版会员')\n      return\n    }\n    \n    setIsSubmitting(true)\n    try {\n      await onSubmit(config)\n    } catch (error) {\n      console.error('回测配置提交失败:', error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-xl font-semibold text-gray-900\">回测参数配置</h3>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* 交易所选择 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">交易所</label>\n              <select\n                value={config.exchange}\n                onChange={(e) => setConfig(prev => ({ ...prev, exchange: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {exchanges.map(ex => (\n                  <option key={ex.value} value={ex.value}>{ex.label}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* 品种类型选择 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">品种类型</label>\n              <select\n                value={config.productType}\n                onChange={(e) => {\n                  const newProductType = e.target.value\n                  const newFeeRate = defaultFeeRates[newProductType as keyof typeof defaultFeeRates]\n                  setConfig(prev => ({ \n                    ...prev, \n                    productType: newProductType,\n                    feeRate: newFeeRate // 🚀 智能切换：根据产品类型自动调整手续费率\n                  }))\n                  console.log(`💰 [BacktestConfig] 产品类型切换: ${newProductType}, 自动调整手续费率: ${newFeeRate}`)\n                }}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {productTypes.map(type => (\n                  <option key={type.value} value={type.value}>{type.label}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* 数据类型选择 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                数据类型\n                {config.dataType === 'tick' && !isTickDisabled() && (\n                  <span className=\"text-xs text-orange-600 ml-2\">\n                    (本月剩余 {getTickBacktestLimit()} 次)\n                  </span>\n                )}\n              </label>\n              <div className=\"space-y-2\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    value=\"kline\"\n                    checked={config.dataType === 'kline'}\n                    onChange={(e) => setConfig(prev => ({ ...prev, dataType: e.target.value as 'kline' | 'tick' }))}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                  />\n                  <span className=\"ml-3 text-sm\">\n                    K线数据回测 \n                    <span className=\"text-gray-500\">(标准精度，免费)</span>\n                  </span>\n                </label>\n                <label className={`flex items-center ${isTickDisabled() ? 'opacity-50 cursor-not-allowed' : ''}`}>\n                  <input\n                    type=\"radio\"\n                    value=\"tick\"\n                    checked={config.dataType === 'tick'}\n                    onChange={(e) => !isTickDisabled() && setConfig(prev => ({ ...prev, dataType: e.target.value as 'kline' | 'tick' }))}\n                    disabled={isTickDisabled()}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 disabled:opacity-50\"\n                  />\n                  <span className=\"ml-3 text-sm\">\n                    Tick数据回测 \n                    <span className=\"text-gray-500\">\n                      (最高精度，{isTickDisabled() ? '需要高级版' : `每月${getTickBacktestLimit()}次`})\n                    </span>\n                    {isTickDisabled() && (\n                      <span className=\"ml-2 px-2 py-0.5 bg-orange-100 text-orange-700 text-xs rounded\">\n                        升级解锁\n                      </span>\n                    )}\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* 智能手续费率等级选择 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                手续费率等级\n                <span className=\"text-sm font-normal text-gray-500 ml-2\">\n                  ({config.productType === 'spot' ? '现货' : \n                    config.productType === 'perpetual' ? '永续合约' : '交割合约'}专用费率)\n                </span>\n              </label>\n              <select\n                value={config.feeRate}\n                onChange={(e) => setConfig(prev => ({ ...prev, feeRate: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {getCurrentFeeRates().map(rate => (\n                  <option key={rate.value} value={rate.value}>{rate.label}</option>\n                ))}\n              </select>\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {config.productType === 'spot' \n                  ? '💡 现货交易：Maker费率/Taker费率' \n                  : '💡 合约交易：Maker费率/Taker费率，通常更低'}\n              </div>\n            </div>\n\n            {/* 初始资金 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">初始资金 (USDT)</label>\n              <input\n                type=\"number\"\n                value={config.initialCapital}\n                onChange={(e) => setConfig(prev => ({ ...prev, initialCapital: Number(e.target.value) }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"100\"\n                step=\"100\"\n              />\n            </div>\n\n            {/* 增强的时间选择界面 */}\n            <div className=\"space-y-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">回测时间期间</label>\n              \n              {/* 预设时间段按钮 */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 mb-4\">\n                {[\n                  { label: '1个月', months: 1 },\n                  { label: '3个月', months: 3 },\n                  { label: '6个月', months: 6 },\n                  { label: '1年', months: 12 }\n                ].map(({ label, months }) => (\n                  <button\n                    key={months}\n                    type=\"button\"\n                    onClick={() => {\n                      const now = new Date()\n                      const startDate = new Date(now)\n                      startDate.setMonth(now.getMonth() - months)\n                      setConfig(prev => ({\n                        ...prev,\n                        startDate: startDate.toISOString().split('T')[0],\n                        endDate: now.toISOString().split('T')[0]\n                      }))\n                    }}\n                    className=\"px-3 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n                  >\n                    {label}\n                  </button>\n                ))}\n              </div>\n\n              {/* 自定义时间选择 */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-600 mb-2\">开始时间</label>\n                  <input\n                    type=\"date\"\n                    value={config.startDate}\n                    onChange={(e) => setConfig(prev => ({ ...prev, startDate: e.target.value }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-600 mb-2\">结束时间</label>\n                  <input\n                    type=\"date\"\n                    value={config.endDate}\n                    onChange={(e) => setConfig(prev => ({ ...prev, endDate: e.target.value }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              {/* 时间范围验证提示 */}\n              {(() => {\n                const startDateObj = new Date(config.startDate)\n                const endDateObj = new Date(config.endDate)\n                const diffDays = Math.floor((endDateObj.getTime() - startDateObj.getTime()) / (1000 * 60 * 60 * 24))\n                \n                if (startDateObj >= endDateObj) {\n                  return (\n                    <div className=\"flex items-center text-red-600 text-sm\">\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                      请确保结束时间晚于开始时间\n                    </div>\n                  )\n                } else if (diffDays > 0) {\n                  return (\n                    <div className=\"flex items-center text-green-600 text-sm\">\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      回测期间：{diffDays} 天 ({Math.floor(diffDays / 30)} 个月 {diffDays % 30} 天)\n                    </div>\n                  )\n                }\n                return null\n              })()}\n            </div>\n          </div>\n\n          {/* 交易品种选择 */}\n          <div className=\"mt-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              交易品种 (已选择 {config.symbols.length} 个)\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-5 gap-2\">\n              {popularSymbols.map(symbol => (\n                <button\n                  key={symbol}\n                  onClick={() => handleSymbolToggle(symbol)}\n                  className={`px-3 py-2 text-sm rounded-md border transition-colors ${\n                    config.symbols.includes(symbol)\n                      ? 'bg-blue-50 border-blue-300 text-blue-700'\n                      : 'bg-white border-gray-300 text-gray-600 hover:bg-gray-50'\n                  }`}\n                >\n                  {symbol}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* 时间周期选择 */}\n          <div className=\"mt-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              时间周期 (已选择 {config.timeframes.length} 个)\n            </label>\n            <div className=\"grid grid-cols-3 md:grid-cols-7 gap-2\">\n              {timeframes.map(tf => (\n                <button\n                  key={tf.value}\n                  onClick={() => handleTimeframeToggle(tf.value)}\n                  className={`px-3 py-2 text-sm rounded-md border transition-colors ${\n                    config.timeframes.includes(tf.value)\n                      ? 'bg-green-50 border-green-300 text-green-700'\n                      : 'bg-white border-gray-300 text-gray-600 hover:bg-gray-50'\n                  }`}\n                >\n                  {tf.label}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* 🚀 策略版本选择 */}\n          {strategyVersions.versions.length > 0 && (\n            <div className=\"mt-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                策略版本选择 ({strategyVersions.versions.length} 个版本可用)\n              </label>\n              <div className=\"space-y-2\">\n                {strategyVersions.versions.map((version, index) => (\n                  <div\n                    key={version.id}\n                    className={`border rounded-lg p-3 cursor-pointer transition-colors ${\n                      config.selectedStrategyVersion === version.id\n                        ? 'border-blue-500 bg-blue-50'\n                        : 'border-gray-300 bg-white hover:border-gray-400 hover:bg-gray-50'\n                    }`}\n                    onClick={() => setConfig(prev => ({ ...prev, selectedStrategyVersion: version.id }))}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${\n                          config.selectedStrategyVersion === version.id\n                            ? 'bg-blue-500 text-white'\n                            : 'bg-gray-300 text-gray-600'\n                        }`}>\n                          V{version.version}\n                        </div>\n                        <div>\n                          <div className=\"font-medium text-gray-900\">{version.title}</div>\n                          <div className=\"text-sm text-gray-500\">{version.description}</div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-xs text-gray-400\">\n                          {version.timestamp.toLocaleString()}\n                        </span>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            onOpenStrategyModal(version.id)\n                          }}\n                          className=\"text-blue-600 hover:text-blue-800 text-sm underline\"\n                        >\n                          查看代码\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {!config.selectedStrategyVersion && strategyVersions.versions.length > 0 && (\n                <div className=\"mt-2 text-sm text-amber-600 flex items-center\">\n                  <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  请选择一个策略版本进行回测\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* 操作按钮 */}\n          <div className=\"flex justify-end space-x-3 mt-8 pt-6 border-t border-gray-200\">\n            <button\n              onClick={onClose}\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              取消\n            </button>\n            <button\n              onClick={handleSubmit}\n              disabled={isSubmitting}\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  <span>正在发送...</span>\n                </div>\n              ) : (\n                '开始回测分析'\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// 🚀 策略代码预览模态框组件\nconst StrategyCodeModal: React.FC<StrategyCodeModalProps> = ({ isOpen, onClose, strategyVersion }) => {\n  if (!isOpen || !strategyVersion) return null\n\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(strategyVersion.code)\n    toast.success('策略代码已复制到剪贴板', { icon: '📋' })\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n              V{strategyVersion.version}\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">{strategyVersion.title}</h3>\n              <p className=\"text-sm text-gray-500\">{strategyVersion.description}</p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n              <span>创建时间: {strategyVersion.timestamp.toLocaleString()}</span>\n              <span>代码长度: {strategyVersion.code.length} 字符</span>\n            </div>\n            <button\n              onClick={handleCopyCode}\n              className=\"flex items-center space-x-2 px-3 py-1 bg-gray-100 hover:bg-gray-200 rounded-md text-sm text-gray-700 transition-colors\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n              </svg>\n              <span>复制代码</span>\n            </button>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-lg overflow-hidden\">\n            <pre className=\"p-4 text-sm text-gray-100 overflow-auto max-h-96 scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-gray-800\">\n              <code className=\"language-python\">{strategyVersion.code}</code>\n            </pre>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end p-6 border-t border-gray-200\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\"\n          >\n            关闭\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AIChatPage","/**\n * 认证工具函数 - 统一的认证相关操作\n */\n\n/**\n * 获取认证token\n * @returns 认证token或null\n */\nexport const getAuthToken = (): string | null => {\n  try {\n    const authData = localStorage.getItem('auth-storage')\n    if (authData) {\n      const { state } = JSON.parse(authData)\n      return state?.token || null\n    }\n  } catch (error) {\n    console.error('Failed to parse auth data:', error)\n  }\n  return null\n}\n\n/**\n * 创建带认证的请求头\n * @returns 包含Authorization的请求头对象\n */\nexport const createAuthHeaders = () => {\n  const token = getAuthToken()\n  return {\n    'Content-Type': 'application/json',\n    ...(token && { 'Authorization': `Bearer ${token}` })\n  }\n}\n\n/**\n * 检查用户是否已认证\n * @returns 是否已认证\n */\nexport const isAuthenticated = (): boolean => {\n  return getAuthToken() !== null\n}\n\n/**\n * 清除认证状态\n */\nexport const clearAuthState = (): void => {\n  localStorage.removeItem('auth-storage')\n}","import React, { useState, useEffect } from 'react'\nimport { useUserInfo } from '../store'\nimport { useLanguageStore } from '../store/languageStore'\nimport toast from 'react-hot-toast'\nimport { getAuthToken } from '../utils/auth'\n\ninterface APIKey {\n  id: number\n  name: string\n  exchange: string\n  api_key: string\n  permissions: string\n  status: 'active' | 'inactive' | 'error'\n  created_at: string\n}\n\nconst APIManagementPage: React.FC = () => {\n  const { user, isPremium } = useUserInfo()\n  const { t } = useLanguageStore()\n  \n  // 表单状态\n  const [formData, setFormData] = useState({\n    name: '',\n    exchange: 'okx',\n    api_key: '',\n    secret_key: '',\n    passphrase: ''\n  })\n  \n  // API密钥列表\n  const [apiKeys, setApiKeys] = useState<APIKey[]>([])\n  const [loading, setLoading] = useState(false)\n  const [submitting, setSubmitting] = useState(false)\n  \n  // 显示状态\n  const [showSecrets, setShowSecrets] = useState<{[key: number]: boolean}>({})\n\n  // 支持的交易所\n  const exchanges = [\n    { value: 'okx', label: 'OKX', icon: '🟢' },\n    { value: 'binance', label: 'Binance', icon: '🟡' },\n    { value: 'huobi', label: 'Huobi', icon: '🔴' },\n    { value: 'bybit', label: 'Bybit', icon: '🟠' },\n    { value: 'kraken', label: 'Kraken', icon: '🟣' },\n    { value: 'coinbase', label: 'Coinbase', icon: '🔵' }\n  ]\n\n  // 加载API密钥列表\n  const loadAPIKeys = async () => {\n    if (!isPremium) return\n    \n    try {\n      setLoading(true)\n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/api-keys/`, {\n        headers: {\n          'Authorization': `Bearer ${getAuthToken()}`\n        }\n      })\n      \n      if (response.ok) {\n        let data = { api_keys: [] }\n        try {\n          const text = await response.text()\n          data = text ? JSON.parse(text) : { api_keys: [] }\n        } catch (e) {\n          console.log('Response is not JSON, using empty array')\n        }\n        setApiKeys(data.api_keys || [])\n      } else {\n        let errorMessage = 'Failed to load API keys'\n        try {\n          const text = await response.text()\n          const errorData = text ? JSON.parse(text) : null\n          errorMessage = errorData?.detail || `HTTP ${response.status}: ${response.statusText}`\n        } catch (e) {\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`\n        }\n        throw new Error(errorMessage)\n      }\n    } catch (error) {\n      console.error('Error loading API keys:', error)\n      toast.error('加载API密钥失败')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // 添加API密钥\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!isPremium) {\n      toast.error('添加API密钥需要高级版本')\n      return\n    }\n    \n    if (!formData.api_key || !formData.secret_key || !formData.name) {\n      toast.error('请填写完整的信息')\n      return\n    }\n    \n    try {\n      setSubmitting(true)\n      \n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/api-keys/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${getAuthToken()}`\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          exchange: formData.exchange,\n          api_key: formData.api_key,\n          secret_key: formData.secret_key,\n          passphrase: formData.passphrase || undefined\n        })\n      })\n      \n      if (response.ok) {\n        let data = null\n        try {\n          const text = await response.text()\n          data = text ? JSON.parse(text) : {}\n        } catch (e) {\n          console.log('Response is not JSON, treating as success')\n        }\n        toast.success('API密钥添加成功')\n        \n        // 重置表单\n        setFormData({\n          name: '',\n          exchange: 'okx',\n          api_key: '',\n          secret_key: '',\n          passphrase: ''\n        })\n        \n        // 重新加载列表\n        loadAPIKeys()\n      } else {\n        let errorData = { detail: 'Unknown error' }\n        try {\n          const text = await response.text()\n          errorData = text ? JSON.parse(text) : { detail: `HTTP ${response.status}: ${response.statusText}` }\n        } catch (e) {\n          errorData = { detail: `HTTP ${response.status}: ${response.statusText}` }\n        }\n        throw new Error(errorData.detail || 'Failed to add API key')\n      }\n    } catch (error) {\n      console.error('Error adding API key:', error)\n      toast.error(`添加API密钥失败: ${error instanceof Error ? error.message : '未知错误'}`)\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  // 删除API密钥\n  const handleDelete = async (id: number, name: string) => {\n    if (!window.confirm(`确定要删除API密钥 \"${name}\" 吗？`)) {\n      return\n    }\n    \n    try {\n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/api-keys/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${getAuthToken()}`\n        }\n      })\n      \n      if (response.ok) {\n        toast.success('API密钥删除成功')\n        loadAPIKeys()\n      } else {\n        throw new Error('Failed to delete API key')\n      }\n    } catch (error) {\n      console.error('Error deleting API key:', error)\n      toast.error('删除API密钥失败')\n    }\n  }\n\n  // 测试API密钥连接\n  const handleTest = async (id: number, name: string) => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/api-keys/${id}/test`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${getAuthToken()}`\n        }\n      })\n      \n      if (response.ok) {\n        const data = await response.json()\n        toast.success(`${name} 连接测试成功`)\n      } else {\n        const errorData = await response.json()\n        toast.error(`${name} 连接测试失败: ${errorData.detail}`)\n      }\n    } catch (error) {\n      console.error('Error testing API key:', error)\n      toast.error('连接测试失败')\n    }\n  }\n\n  // 切换密钥显示\n  const toggleShowSecret = (id: number) => {\n    setShowSecrets(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }))\n  }\n\n  // 获取状态标识\n  const getStatusIndicator = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n      case 'inactive':\n        return <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\n      case 'error':\n        return <div className=\"w-2 h-2 bg-red-500 rounded-full\"></div>\n      default:\n        return <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active': return '有效'\n      case 'inactive': return '无效'\n      case 'error': return '错误'\n      default: return '未知'\n    }\n  }\n\n  // 填充测试数据\n  const fillTestData = () => {\n    setFormData({\n      name: 'OKX测试账户',\n      exchange: 'okx',\n      api_key: '76ba9b3a-38b6-4ed3-9ce7-44d603188b13',\n      secret_key: '4021858325F5A3BEC3F64B6D0533E412',\n      passphrase: 'Woaiziji..123'\n    })\n    toast('已填充OKX测试数据')\n  }\n\n  useEffect(() => {\n    loadAPIKeys()\n  }, [isPremium])\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 页面标题 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">API密钥管理</h1>\n          <p className=\"text-gray-600 mt-1\">管理您的交易所API密钥，确保安全可靠的交易连接</p>\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          {isPremium ? `高级版最多可添加5个API密钥 (已使用${apiKeys.length}/5)` : '升级到高级版以添加API密钥'}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* 左侧：添加API密钥 */}\n        <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6 backdrop-blur-sm\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">新增API密钥</h2>\n            <button\n              onClick={fillTestData}\n              className=\"text-sm text-blue-600 hover:text-blue-700 font-medium px-3 py-1 rounded-md hover:bg-blue-50 transition-colors\"\n            >\n              填充测试数据\n            </button>\n          </div>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">交易所</label>\n              <select\n                value={formData.exchange}\n                onChange={(e) => setFormData({...formData, exchange: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white text-sm\"\n              >\n                {exchanges.map(exchange => (\n                  <option key={exchange.value} value={exchange.value}>\n                    {exchange.icon} {exchange.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">API名称</label>\n              <input\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData({...formData, name: e.target.value})}\n                placeholder=\"例如：OKX现货账户\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">公钥 (API KEY)</label>\n              <input\n                type=\"text\"\n                value={formData.api_key}\n                onChange={(e) => setFormData({...formData, api_key: e.target.value})}\n                placeholder=\"输入API公钥\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm font-mono\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">密钥 (SECRET KEY)</label>\n              <input\n                type=\"password\"\n                value={formData.secret_key}\n                onChange={(e) => setFormData({...formData, secret_key: e.target.value})}\n                placeholder=\"输入API密钥\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm font-mono\"\n              />\n            </div>\n\n            {(formData.exchange === 'okx' || formData.exchange === 'bybit') && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  密码短语 {formData.exchange === 'okx' ? '(Passphrase)' : '(可选)'}\n                </label>\n                <input\n                  type=\"password\"\n                  value={formData.passphrase}\n                  onChange={(e) => setFormData({...formData, passphrase: e.target.value})}\n                  placeholder={formData.exchange === 'okx' ? '输入Passphrase密码' : '输入密码短语(可选)'}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                />\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={!isPremium || submitting}\n              className={`w-full py-3 rounded-lg font-medium transition-colors ${\n                isPremium\n                  ? 'bg-blue-600 text-white hover:bg-blue-700 disabled:bg-blue-400'\n                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n            >\n              {submitting ? '添加中...' : isPremium ? '添加API密钥' : '升级后可添加'}\n            </button>\n          </form>\n        </div>\n\n        {/* 右侧：API密钥列表 */}\n        <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6 backdrop-blur-sm\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-6\">已添加API密钥</h2>\n          \n          {loading ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-12 h-12 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center animate-spin\">\n                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n              </div>\n              <p className=\"text-gray-500\">加载API密钥中...</p>\n            </div>\n          ) : apiKeys.length > 0 ? (\n            <div className=\"space-y-4\">\n              {apiKeys.map((apiKey) => (\n                <div key={apiKey.id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"text-lg\">\n                        {exchanges.find(e => e.value === apiKey.exchange)?.icon || '🔧'}\n                      </span>\n                      <div>\n                        <h3 className=\"font-medium text-gray-900\">{apiKey.name}</h3>\n                        <p className=\"text-sm text-gray-500\">{apiKey.exchange.toUpperCase()}</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      {getStatusIndicator(apiKey.status)}\n                      <span className=\"text-sm text-gray-600\">{getStatusText(apiKey.status)}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"space-y-2 mb-3\">\n                    <div>\n                      <span className=\"text-xs text-gray-500\">API KEY:</span>\n                      <div className=\"flex items-center space-x-2\">\n                        <code className=\"text-xs bg-gray-100 px-2 py-1 rounded font-mono\">\n                          {showSecrets[apiKey.id] \n                            ? apiKey.api_key \n                            : `${apiKey.api_key.slice(0, 8)}...${apiKey.api_key.slice(-4)}`\n                          }\n                        </code>\n                        <button\n                          onClick={() => toggleShowSecret(apiKey.id)}\n                          className=\"text-xs text-blue-600 hover:text-blue-700\"\n                        >\n                          {showSecrets[apiKey.id] ? '隐藏' : '显示'}\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                      <span>权限: {apiKey.permissions || '交易权限'}</span>\n                      <span>添加时间: {new Date(apiKey.created_at).toLocaleDateString()}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => handleTest(apiKey.id, apiKey.name)}\n                      className=\"px-3 py-1 text-xs bg-green-100 text-green-700 rounded hover:bg-green-200 transition-colors\"\n                    >\n                      测试连接\n                    </button>\n                    <button\n                      onClick={() => handleDelete(apiKey.id, apiKey.name)}\n                      className=\"px-3 py-1 text-xs bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors\"\n                    >\n                      删除\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">暂无API密钥</h3>\n              <p className=\"text-gray-500\">添加您的第一个交易所API密钥以开始交易</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* 安全提示 */}\n      <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-xl p-4\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"w-5 h-5 text-yellow-600 mt-0.5\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-yellow-800 mb-1\">安全提示</h4>\n            <ul className=\"text-sm text-yellow-700 space-y-1\">\n              <li>• API密钥采用安全加密存储，但请确保您的账户安全</li>\n              <li>• 建议为API密钥设置最小必要权限（仅交易权限，禁用提现）</li>\n              <li>• 定期检查API密钥状态，及时更新或删除不用的密钥</li>\n              <li>• 不要在公共场所或他人面前输入API密钥信息</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default APIManagementPage","import React, { useState, useEffect } from 'react'\nimport { useUserInfo, useAuthStore } from '../store'\nimport { useLanguageStore } from '../store/languageStore'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\n\n// 会员套餐配置\nconst membershipPlans = [\n  {\n    level: 'basic',\n    name: '初级会员',\n    price: 19,\n    period: '月',\n    color: 'green',\n    description: '入门级功能套餐',\n    highlight: '适合刚开始量化交易的新手用户',\n    features: [\n      'AI交易员模式/AI开发者模式',\n      'AI交易心得功能',\n      '每天使用$20额度的AI助手',\n      '绑定1个交易所API KEY',\n      '包含1个免费实盘'\n    ],\n    benefits: [\n      '✅ AI交易员模式',\n      '✅ AI开发者模式',\n      '✅ AI交易心得功能',\n      '✅ 每日$20 AI助手额度',\n      '✅ 1个交易所API密钥',\n      '✅ 1个免费实盘交易',\n      '✅ 基础策略模板库',\n      '✅ 邮件技术支持'\n    ],\n    limitations: [\n      '❌ 无Tick级别数据回测',\n      '❌ 多API密钥管理',\n      '❌ 大量AI对话额度',\n      '❌ 高级策略优化'\n    ]\n  },\n  {\n    level: 'premium',\n    name: '高级会员',\n    price: 99,\n    period: '月',\n    color: 'blue',\n    popular: true,\n    description: '全功能专业套餐',\n    highlight: '热门选择，功能全面且性价比高',\n    features: [\n      '初级会员所有功能',\n      '每天使用$100额度的AI助手',\n      '每月可使用Tick级别数据回测30次',\n      '绑定5个API交易所API KEY',\n      '包含5个免费实盘'\n    ],\n    benefits: [\n      '✅ 初级会员所有功能',\n      '✅ 每日$100 AI助手额度',\n      '✅ 每月30次Tick级别回测',\n      '✅ 5个交易所API密钥',\n      '✅ 5个免费实盘交易',\n      '✅ 高级技术指标',\n      '✅ 策略性能分析',\n      '✅ 7×24小时技术支持'\n    ],\n    limitations: [\n      '❌ AI图表交易模式',\n      '❌ 企业定制服务',\n      '❌ 专属客户经理'\n    ]\n  },\n  {\n    level: 'professional',\n    name: '专业会员',\n    price: 199,\n    period: '月',\n    color: 'purple',\n    popular: false,\n    description: '专业交易者首选',\n    highlight: '专业交易者和机构用户的完整解决方案',\n    features: [\n      '高级会员所有功能',\n      'AI图表交易模式',\n      '每天使用$200额度的AI对话',\n      '每月可使用Tick级别数据回测100次',\n      '绑定10个交易所API KEY',\n      '包含10个免费实盘'\n    ],\n    benefits: [\n      '✅ 高级会员所有功能',\n      '✅ AI图表交易模式',\n      '✅ 每日$200 AI对话额度',\n      '✅ 每月100次Tick级别回测',\n      '✅ 10个交易所API密钥',\n      '✅ 10个免费实盘交易',\n      '✅ 定制化策略开发',\n      '✅ 专属客户经理',\n      '✅ 7×24小时VIP支持',\n      '✅ 优先技术服务'\n    ],\n    limitations: []\n  }\n]\n\ninterface UserStats {\n  api_keys_count: number\n  api_keys_limit: number\n  ai_usage_today: number\n  ai_daily_limit: number\n  tick_backtest_today: number\n  tick_backtest_limit: number\n  storage_used: number\n  storage_limit: number\n  indicators_count: number\n  indicators_limit: number\n  strategies_count: number\n  strategies_limit: number\n  live_trading_count: number\n  live_trading_limit: number\n}\n\ninterface APIKey {\n  id: number\n  name: string\n  exchange: string\n  api_key: string\n  status: 'active' | 'inactive' | 'error'\n  created_at: string\n  balance?: {\n    total: number\n    available: number\n    currency: string\n  }\n  performance?: {\n    total_return: number\n    daily_return: number\n    win_rate: number\n    created_days: number\n  }\n}\n\nconst ProfilePage: React.FC = () => {\n  const { user, isPremium } = useUserInfo()\n  const { token, logout } = useAuthStore()\n  const { t } = useLanguageStore()\n  const navigate = useNavigate()\n  const [stats, setStats] = useState<UserStats | null>(null)\n  const [apiKeys, setApiKeys] = useState<APIKey[]>([])\n  const [loading, setLoading] = useState(false)\n  const [loadingApiKeys, setLoadingApiKeys] = useState(false)\n  const [showPayment, setShowPayment] = useState(false)\n  const [selectedPlan, setSelectedPlan] = useState<string>('')\n\n  // 获取用户使用统计\n  const loadUserStats = async () => {\n    try {\n      setLoading(true)\n      console.log('🔍 ProfilePage - 获取token:', token ? '已获取' : '未获取')\n      console.log('🔍 ProfilePage - API URL:', `${import.meta.env.VITE_TRADING_API_URL}/membership/usage-stats`)\n      \n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/membership/usage-stats`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      })\n      \n      console.log('🔍 ProfilePage - 响应状态:', response.status)\n      \n      if (response.ok) {\n        const data = await response.json()\n        console.log('🔍 ProfilePage - 获取数据成功:', data)\n        setStats(data.data)\n      } else {\n        const errorText = await response.text()\n        console.error('🔍 ProfilePage - 请求失败:', response.status, errorText)\n        // 显示更友好的错误提示\n        if (response.status === 401) {\n          console.warn('Token已过期，需要重新登录')\n        } else if (response.status === 500) {\n          console.error('服务器内部错误，请稍后重试')\n        }\n      }\n    } catch (error) {\n      console.error('Load usage stats error:', error)\n      // 网络错误或其他异常\n      if (error instanceof Error) {\n        console.error('网络连接异常:', error.message)\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // 获取API密钥列表\n  const loadAPIKeys = async () => {\n    if (!token) return\n    \n    try {\n      setLoadingApiKeys(true)\n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/api-keys/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      })\n      \n      if (response.ok) {\n        let data = { api_keys: [] }\n        try {\n          const text = await response.text()\n          data = text ? JSON.parse(text) : { api_keys: [] }\n        } catch (e) {\n          console.log('Response is not JSON, using empty array')\n        }\n        \n        // 模拟添加余额和收益率数据\n        const enrichedApiKeys = (data.api_keys || []).map((key: any, index: number) => ({\n          ...key,\n          balance: {\n            total: 10000 + index * 5000,\n            available: 8000 + index * 4000,\n            currency: 'USDT'\n          },\n          performance: {\n            total_return: 15.6 + index * 8.2,\n            daily_return: 0.8 + index * 0.3,\n            win_rate: 68.5 + index * 5.1,\n            created_days: Math.floor(Math.random() * 90) + 30\n          }\n        }))\n        \n        setApiKeys(enrichedApiKeys)\n      } else {\n        console.error('Failed to load API keys:', response.status)\n      }\n    } catch (error) {\n      console.error('Error loading API keys:', error)\n    } finally {\n      setLoadingApiKeys(false)\n    }\n  }\n\n  // 获取会员套餐颜色样式\n  const getPlanColorClass = (color: string, type: 'bg' | 'text' | 'border') => {\n    const colorMap = {\n      gray: { bg: 'bg-gray-50', text: 'text-gray-700', border: 'border-gray-200' },\n      blue: { bg: 'bg-blue-50', text: 'text-blue-700', border: 'border-blue-200' },\n      purple: { bg: 'bg-purple-50', text: 'text-purple-700', border: 'border-purple-200' },\n      gold: { bg: 'bg-yellow-50', text: 'text-yellow-700', border: 'border-yellow-200' }\n    }\n    return colorMap[color]?.[type] || colorMap.gray[type]\n  }\n\n  // 计算使用百分比\n  const getUsagePercentage = (used: number, limit: number) => {\n    if (limit === 0) return 0\n    return Math.min((used / limit) * 100, 100)\n  }\n\n  // 获取当前用户的套餐信息\n  const getCurrentPlan = () => {\n    return membershipPlans.find(plan => plan.level === user?.membership_level) || membershipPlans[0]\n  }\n\n  // 处理套餐升级\n  const handleUpgrade = (planLevel: string) => {\n    setSelectedPlan(planLevel)\n    setShowPayment(true)\n  }\n\n  // 模拟支付处理\n  const handlePayment = async () => {\n    try {\n      // 这里应该调用实际的支付API\n      toast.success('支付成功！会员权益已更新')\n      setShowPayment(false)\n      setSelectedPlan('')\n      // 重新加载用户信息和统计\n      loadUserStats()\n    } catch (error) {\n      toast.error('支付失败，请重试')\n    }\n  }\n\n  // 处理用户退出登录\n  const handleLogout = () => {\n    if (window.confirm('确定要退出登录吗？')) {\n      logout()\n      navigate('/login')\n    }\n  }\n\n  // 跳转到API创建页面\n  const handleAddAPIKey = () => {\n    navigate('/api-keys')\n  }\n\n  // 删除API密钥\n  const handleDeleteAPIKey = async (id: number, name: string) => {\n    if (!window.confirm(`确定要删除API密钥 \"${name}\" 吗？`)) {\n      return\n    }\n    \n    try {\n      const response = await fetch(`${import.meta.env.VITE_TRADING_API_URL}/api-keys/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      \n      if (response.ok) {\n        toast.success('API密钥删除成功')\n        loadAPIKeys()\n      } else {\n        throw new Error('Failed to delete API key')\n      }\n    } catch (error) {\n      console.error('Error deleting API key:', error)\n      toast.error('删除API密钥失败')\n    }\n  }\n\n  // 获取状态指示器\n  const getStatusIndicator = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n      case 'inactive':\n        return <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\n      case 'error':\n        return <div className=\"w-2 h-2 bg-red-500 rounded-full\"></div>\n      default:\n        return <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active': return '正常'\n      case 'inactive': return '无效'\n      case 'error': return '错误'\n      default: return '未知'\n    }\n  }\n\n  // 获取交易所图标\n  const getExchangeIcon = (exchange: string) => {\n    const icons: {[key: string]: string} = {\n      'okx': '🟢',\n      'binance': '🟡', \n      'huobi': '🔴',\n      'bybit': '🟠',\n      'kraken': '🟣',\n      'coinbase': '🔵'\n    }\n    return icons[exchange.toLowerCase()] || '🔧'\n  }\n\n  useEffect(() => {\n    if (token && user) {\n      loadUserStats()\n      loadAPIKeys()\n    }\n  }, [token, user])\n\n  const currentPlan = getCurrentPlan()\n  const selectedPlanInfo = membershipPlans.find(plan => plan.level === selectedPlan)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 页面标题 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">账户中心</h1>\n          <p className=\"text-gray-600 mt-1\">管理您的账户信息、会员权益和使用状况</p>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* 左侧：用户信息和当前套餐 */}\n        <div className=\"lg:col-span-1 space-y-6\">\n          {/* 用户信息卡片 */}\n          <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6\">\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                {user?.avatar_url ? (\n                  <img src={user.avatar_url} alt=\"Avatar\" className=\"w-full h-full rounded-full object-cover\" />\n                ) : (\n                  <span className=\"text-2xl font-bold text-white\">\n                    {user?.username?.charAt(0).toUpperCase() || 'U'}\n                  </span>\n                )}\n              </div>\n              <h3 className=\"text-xl font-bold text-gray-900 mb-1\">{user?.username}</h3>\n              <p className=\"text-gray-500 mb-4\">{user?.email}</p>\n              \n              <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getPlanColorClass(currentPlan.color, 'bg')} ${getPlanColorClass(currentPlan.color, 'text')}`}>\n                <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732L14.146 12.8l-1.179 4.456a1 1 0 01-1.934 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732L9.854 7.2l1.179-4.456A1 1 0 0112 2z\" clipRule=\"evenodd\" />\n                </svg>\n                {currentPlan.name}\n              </div>\n\n              {user?.membership_expires_at && (\n                <p className=\"text-xs text-gray-500 mt-2\">\n                  到期时间: {new Date(user.membership_expires_at).toLocaleDateString()}\n                </p>\n              )}\n\n              {/* 退出登录按钮 */}\n              <button\n                onClick={handleLogout}\n                className=\"mt-4 w-full py-2 px-4 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors flex items-center justify-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n                <span>退出登录</span>\n              </button>\n            </div>\n          </div>\n\n          {/* 当前套餐详情 */}\n          <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">当前套餐权益</h3>\n            <div className=\"space-y-2\">\n              {currentPlan.features.map((feature, index) => (\n                <div key={index} className=\"flex items-start\">\n                  <svg className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span className=\"text-sm text-gray-700\">{feature}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* 右侧：使用统计和套餐选择 */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* 使用统计 */}\n          <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">使用情况统计</h3>\n            \n            {loading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"w-8 h-8 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center animate-spin\">\n                  <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                </div>\n                <p className=\"text-gray-500\">加载统计数据中...</p>\n              </div>\n            ) : stats ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* API密钥使用 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">API密钥</span>\n                    <span className=\"text-sm text-gray-500\">{stats.api_keys_count}/{stats.api_keys_limit}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.api_keys_count, stats.api_keys_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* AI对话额度 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">今日AI对话</span>\n                    <span className=\"text-sm text-gray-500\">${stats.ai_usage_today}/${stats.ai_daily_limit}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.ai_usage_today, stats.ai_daily_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* Tick级别回测 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">本月Tick回测</span>\n                    <span className=\"text-sm text-gray-500\">{stats.tick_backtest_today}/{stats.tick_backtest_limit}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.tick_backtest_today, stats.tick_backtest_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* 存储空间 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">存储空间</span>\n                    <span className=\"text-sm text-gray-500\">{stats.storage_used}MB/{stats.storage_limit}MB</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-yellow-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.storage_used, stats.storage_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* 指标数量 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">指标数量</span>\n                    <span className=\"text-sm text-gray-500\">{stats.indicators_count}/{stats.indicators_limit}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.indicators_count, stats.indicators_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* 策略数量 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">策略数量</span>\n                    <span className=\"text-sm text-gray-500\">{stats.strategies_count}/{stats.strategies_limit}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-pink-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.strategies_count, stats.strategies_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* 实盘交易数量 */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">实盘交易</span>\n                    <span className=\"text-sm text-gray-500\">{stats.live_trading_count}/{stats.live_trading_limit}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-red-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${getUsagePercentage(stats.live_trading_count, stats.live_trading_limit)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* K线回测（无限制的显示为无限） */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">K线回测</span>\n                    <span className=\"text-sm text-gray-500\">无限制</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div className=\"bg-green-600 h-2 rounded-full w-full\"></div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                无法加载统计数据\n              </div>\n            )}\n          </div>\n\n          {/* API密钥管理 */}\n          <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">API密钥管理</h3>\n              <button\n                onClick={handleAddAPIKey}\n                className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg font-medium hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 shadow-lg text-sm\"\n              >\n                + 添加API密钥\n              </button>\n            </div>\n            \n            {loadingApiKeys ? (\n              <div className=\"text-center py-8\">\n                <div className=\"w-8 h-8 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center animate-spin\">\n                  <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                </div>\n                <p className=\"text-gray-500 text-sm\">加载API密钥中...</p>\n              </div>\n            ) : apiKeys.length > 0 ? (\n              <div className=\"space-y-4\">\n                {apiKeys.map((apiKey) => (\n                  <div key={apiKey.id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <div className=\"flex items-center space-x-3\">\n                        <span className=\"text-lg\">\n                          {getExchangeIcon(apiKey.exchange)}\n                        </span>\n                        <div>\n                          <h4 className=\"font-medium text-gray-900\">{apiKey.name}</h4>\n                          <p className=\"text-sm text-gray-500\">{apiKey.exchange.toUpperCase()}</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        {getStatusIndicator(apiKey.status)}\n                        <span className=\"text-sm text-gray-600\">{getStatusText(apiKey.status)}</span>\n                      </div>\n                    </div>\n                    \n                    {/* 余额信息 */}\n                    <div className=\"grid grid-cols-2 gap-4 mb-3\">\n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <div className=\"text-xs text-gray-500 mb-1\">账户余额</div>\n                        <div className=\"font-semibold text-gray-900\">\n                          {apiKey.balance?.total?.toLocaleString() || '0'} {apiKey.balance?.currency || 'USDT'}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          可用: {apiKey.balance?.available?.toLocaleString() || '0'}\n                        </div>\n                      </div>\n                      <div className=\"bg-green-50 rounded-lg p-3\">\n                        <div className=\"text-xs text-gray-500 mb-1\">总收益率</div>\n                        <div className=\"font-semibold text-green-600\">\n                          +{apiKey.performance?.total_return?.toFixed(2) || '0.00'}%\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          日收益: +{apiKey.performance?.daily_return?.toFixed(2) || '0.00'}%\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* 性能统计 */}\n                    <div className=\"grid grid-cols-3 gap-4 mb-3 text-xs\">\n                      <div className=\"text-center\">\n                        <div className=\"text-gray-500\">胜率</div>\n                        <div className=\"font-medium text-gray-900\">\n                          {apiKey.performance?.win_rate?.toFixed(1) || '0.0'}%\n                        </div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-gray-500\">运行天数</div>\n                        <div className=\"font-medium text-gray-900\">\n                          {apiKey.performance?.created_days || '0'}天\n                        </div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-gray-500\">创建时间</div>\n                        <div className=\"font-medium text-gray-900\">\n                          {new Date(apiKey.created_at).toLocaleDateString()}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* 操作按钮 */}\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => navigate('/trading')}\n                        className=\"px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                      >\n                        查看交易\n                      </button>\n                      <button\n                        onClick={() => handleDeleteAPIKey(apiKey.id, apiKey.name)}\n                        className=\"px-3 py-1 text-xs bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors\"\n                      >\n                        删除\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n                  </svg>\n                </div>\n                <h4 className=\"text-lg font-medium text-gray-900 mb-2\">暂无API密钥</h4>\n                <p className=\"text-gray-500 mb-4\">添加您的第一个交易所API密钥以开始自动交易</p>\n                <button\n                  onClick={handleAddAPIKey}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  添加API密钥\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* 套餐升级 */}\n          <div className=\"bg-white border border-gray-200 rounded-xl shadow-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">升级套餐</h3>\n            <div className=\"space-y-6\">\n              {membershipPlans.map((plan) => (\n                <div\n                  key={plan.level}\n                  className={`relative border-2 rounded-xl p-6 transition-all duration-200 hover:shadow-md ${\n                    plan.level === user?.membership_level \n                      ? `${getPlanColorClass(plan.color, 'border')} ${getPlanColorClass(plan.color, 'bg')}` \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  {plan.popular && (\n                    <div className=\"absolute -top-2 left-6\">\n                      <span className=\"bg-purple-600 text-white text-xs font-medium px-3 py-1 rounded-full\">\n                        推荐\n                      </span>\n                    </div>\n                  )}\n                  \n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    {/* 套餐基本信息 */}\n                    <div className=\"lg:col-span-1\">\n                      <div className=\"text-center lg:text-left\">\n                        <h4 className=\"text-xl font-bold text-gray-900 mb-2\">{plan.name}</h4>\n                        <p className=\"text-sm text-gray-600 mb-3\">{plan.description}</p>\n                        <div className=\"mb-4\">\n                          {plan.price === 0 ? (\n                            <span className=\"text-3xl font-bold text-gray-900\">免费</span>\n                          ) : (\n                            <>\n                              <span className=\"text-3xl font-bold text-gray-900\">${plan.price}</span>\n                              <span className=\"text-gray-500 text-base\">/{plan.period}</span>\n                            </>\n                          )}\n                        </div>\n                        <p className=\"text-xs text-gray-500 mb-4 italic\">{plan.highlight}</p>\n                        \n                        {plan.level === user?.membership_level ? (\n                          <button\n                            disabled\n                            className=\"w-full py-3 px-4 bg-gray-300 text-gray-500 rounded-lg font-medium cursor-not-allowed\"\n                          >\n                            当前套餐\n                          </button>\n                        ) : plan.price === 0 ? (\n                          <button\n                            disabled\n                            className=\"w-full py-3 px-4 bg-gray-300 text-gray-500 rounded-lg font-medium cursor-not-allowed\"\n                          >\n                            免费套餐\n                          </button>\n                        ) : (\n                          <button\n                            onClick={() => handleUpgrade(plan.level)}\n                            className=\"w-full py-3 px-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg font-medium hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 shadow-lg\"\n                          >\n                            立即升级\n                          </button>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* 功能特性 */}\n                    <div className=\"lg:col-span-1\">\n                      <h5 className=\"font-semibold text-gray-900 mb-3\">核心功能</h5>\n                      <div className=\"space-y-2\">\n                        {plan.features.map((feature, index) => (\n                          <div key={index} className=\"flex items-start\">\n                            <svg className=\"w-4 h-4 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                            </svg>\n                            <span className=\"text-sm text-gray-700 font-medium\">{feature}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* 升级提示 */}\n            <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-start\">\n                <svg className=\"w-5 h-5 text-blue-600 mr-2 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                </svg>\n                <div className=\"text-sm text-blue-800\">\n                  <p className=\"font-medium mb-1\">💡 会员计划说明</p>\n                  <p className=\"text-blue-700\">\n                    • <strong>初级会员($19/月)</strong>: AI交易员/开发者模式、AI交易心得、每日$20 AI额度、1个API、1个实盘<br/>\n                    • <strong>高级会员($99/月)</strong>: 初级所有功能 + 每日$100 AI额度 + 30次/月Tick回测 + 5个API + 5个实盘<br/>\n                    • <strong>专业会员($199/月)</strong>: 高级所有功能 + AI图表交易模式 + 每日$200 AI额度 + 100次/月Tick回测 + 10个API + 10个实盘<br/>\n                  </p>\n                  <p className=\"text-xs text-blue-600 mt-2\">\n                    🎯 推荐：初级会员适合新手，高级会员性价比最高，专业会员提供完整解决方案\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 支付模态框 */}\n      {showPayment && selectedPlanInfo && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-xl p-6 w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-bold text-gray-900\">升级到 {selectedPlanInfo.name}</h2>\n              <button\n                onClick={() => setShowPayment(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"mb-6\">\n              <div className=\"text-center mb-4\">\n                <p className=\"text-3xl font-bold text-gray-900\">${selectedPlanInfo.price}</p>\n                <p className=\"text-gray-500\">/{selectedPlanInfo.period}</p>\n              </div>\n              \n              <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">套餐包含：</h4>\n                <ul className=\"space-y-1\">\n                  {selectedPlanInfo.features.slice(0, 3).map((feature, index) => (\n                    <li key={index} className=\"text-sm text-gray-600 flex items-start\">\n                      <svg className=\"w-3 h-3 text-green-500 mr-2 mt-1 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                      {feature}\n                    </li>\n                  ))}\n                  {selectedPlanInfo.features.length > 3 && (\n                    <li className=\"text-sm text-gray-500\">+ {selectedPlanInfo.features.length - 3} 项更多权益</li>\n                  )}\n                </ul>\n              </div>\n\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <h4 className=\"font-medium text-blue-900 mb-2\">USDT收款地址</h4>\n                <div className=\"bg-white border border-blue-200 rounded p-3 mb-2\">\n                  <code className=\"text-sm text-gray-800 break-all\">\n                    TQrZ8ZwgQx4Y9FpN8H3rK7LmVx9Rt2NcE8\n                  </code>\n                </div>\n                <p className=\"text-xs text-blue-700\">\n                  请向此地址转账 ${selectedPlanInfo.price} USDT，转账完成后点击\"确认支付\"\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPayment(false)}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n              >\n                取消\n              </button>\n              <button\n                onClick={handlePayment}\n                className=\"flex-1 py-2 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                确认支付\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfilePage","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthStore } from '@/store/authStore';\nimport LoadingSpinner from '@/components/common/LoadingSpinner';\n\ninterface SystemStats {\n  users: {\n    total: number;\n    active: number;\n    inactive: number;\n    verified: number;\n    unverified: number;\n    recent_7days: number;\n  };\n  membership: {\n    basic: number;\n    premium: number;\n    professional: number;\n  };\n  growth: {\n    weekly_new_users: number;\n    active_rate: string;\n    verification_rate: string;\n  };\n}\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  membership_level: string;\n  is_active: boolean;\n  email_verified: boolean;\n  last_login_at?: string;\n  created_at: string;\n}\n\nconst AdminDashboardPage = () => {\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const [stats, setStats] = useState<SystemStats | null>(null);\n  const [recentUsers, setRecentUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // 检查管理员权限\n  useEffect(() => {\n    if (!user || user.email !== 'admin@trademe.com') {\n      navigate('/');\n      return;\n    }\n  }, [user, navigate]);\n\n  // 获取系统统计信息\n  const fetchSystemStats = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/stats/system', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setStats(data.data);\n      } else {\n        throw new Error('获取系统统计失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取系统统计失败');\n    }\n  };\n\n  // 获取最近用户列表\n  const fetchRecentUsers = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/users?limit=5', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setRecentUsers(data.data.users);\n      } else {\n        throw new Error('获取用户列表失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取用户列表失败');\n    }\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchSystemStats(), fetchRecentUsers()]);\n      setLoading(false);\n    };\n\n    if (token) {\n      loadData();\n    }\n  }, [token]);\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('zh-CN');\n  };\n\n  const getMembershipBadgeColor = (level: string) => {\n    switch (level.toLowerCase()) {\n      case 'basic': return 'bg-gray-100 text-gray-700 border border-gray-300';\n      case 'premium': return 'bg-blue-50 text-blue-700 border border-blue-200';\n      case 'professional': return 'bg-purple-50 text-purple-700 border border-purple-200';\n      default: return 'bg-gray-100 text-gray-700 border border-gray-300';\n    }\n  };\n\n  const getMembershipText = (level: string) => {\n    switch (level.toLowerCase()) {\n      case 'basic': return '基础版';\n      case 'premium': return '高级版';\n      case 'professional': return '专业版';\n      default: return level;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 text-lg mb-4\">⚠️ {error}</div>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            重新加载\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 顶部导航栏 */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-blue-600 to-blue-700 flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Trademe 管理仪表板</h1>\n                <p className=\"text-sm text-gray-600\">数据化运营管理中心</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3 px-4 py-2 bg-blue-50 rounded-lg border border-blue-200\">\n                <div className=\"w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center\">\n                  <span className=\"text-blue-700 text-sm font-semibold\">{user?.username?.charAt(0).toUpperCase()}</span>\n                </div>\n                <span className=\"text-sm font-medium text-blue-700\">管理员: {user?.username}</span>\n              </div>\n              <button\n                onClick={() => navigate('/')}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-all duration-200 flex items-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <span>返回前台</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 主要内容 */}\n      <div className=\"p-6\">\n        {/* 系统统计卡片 */}\n        {stats && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {/* 总用户数 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 rounded-lg bg-blue-100 flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                  </svg>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-3xl font-bold text-gray-900\">\n                    {stats.users.total.toLocaleString()}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-gray-900 font-semibold mb-1\">总用户数</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  活跃用户 {stats.users.active} ({stats.growth.active_rate}%)\n                </p>\n              </div>\n              <div className=\"mt-4\">\n                <div className=\"w-full bg-gray-100 rounded-full h-2\">\n                  <div \n                    className=\"bg-blue-600 h-2 rounded-full transition-all duration-1000\"\n                    style={{ width: `${Math.min(100, (stats.users.active / stats.users.total) * 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n\n            {/* 新用户 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 rounded-lg bg-green-100 flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                  </svg>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-3xl font-bold text-gray-900\">\n                    {stats.users.recent_7days}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-gray-900 font-semibold mb-1\">7天新增</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  本周新用户注册数\n                </p>\n              </div>\n              <div className=\"mt-4 flex justify-between items-end\">\n                {[...Array(7)].map((_, i) => (\n                  <div\n                    key={i}\n                    className={`w-4 rounded-sm transition-all duration-500 ${\n                      i < Math.ceil((stats.users.recent_7days / 7) * 7)\n                        ? 'bg-green-500' \n                        : 'bg-gray-200'\n                    }`}\n                    style={{ \n                      height: `${20 + Math.random() * 30}px`,\n                      animationDelay: `${i * 100}ms`\n                    }}\n                  ></div>\n                ))}\n              </div>\n            </div>\n\n            {/* 邮箱验证率 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 rounded-lg bg-amber-100 flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-3xl font-bold text-gray-900\">\n                    {stats.growth.verification_rate}%\n                  </p>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-gray-900 font-semibold mb-1\">验证率</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  已验证: {stats.users.verified} / {stats.users.total}\n                </p>\n              </div>\n              <div className=\"mt-4\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                  <div>\n                    <span className=\"text-xs font-semibold inline-block text-amber-600\">\n                      已验证: {stats.users.verified}\n                    </span>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-xs font-semibold inline-block text-gray-500\">\n                      待验证: {stats.users.unverified}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-amber-100\">\n                  <div\n                    style={{ width: `${stats.growth.verification_rate}%` }}\n                    className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-amber-500 transition-all duration-1000\"\n                  ></div>\n                </div>\n              </div>\n            </div>\n\n            {/* 付费用户 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 rounded-lg bg-purple-100 flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                  </svg>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-3xl font-bold text-gray-900\">\n                    {stats.membership.premium + stats.membership.professional}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-gray-900 font-semibold mb-1\">付费用户</h3>\n                <div className=\"flex items-center space-x-4 text-gray-600 text-sm\">\n                  <span>高级: {stats.membership.premium}</span>\n                  <span>专业: {stats.membership.professional}</span>\n                </div>\n              </div>\n              <div className=\"mt-4 flex space-x-1\">\n                <div \n                  className=\"h-2 bg-blue-500 rounded-sm flex-1\"\n                  style={{flexBasis: `${(stats.membership.premium / (stats.membership.premium + stats.membership.professional)) * 100}%`}}\n                ></div>\n                <div \n                  className=\"h-2 bg-purple-500 rounded-sm flex-1\"\n                  style={{flexBasis: `${(stats.membership.professional / (stats.membership.premium + stats.membership.professional)) * 100}%`}}\n                ></div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* 最近用户 */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                      </svg>\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">最近用户</h3>\n                  </div>\n                  <button\n                    onClick={() => navigate('/admin/users')}\n                    className=\"group flex items-center space-x-2 text-blue-600 hover:text-blue-800 text-sm font-medium transition-all duration-300 hover:scale-105\"\n                  >\n                    <span>查看全部</span>\n                    <svg className=\"w-4 h-4 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              <div className=\"overflow-hidden\">\n                <table className=\"min-w-full\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        用户\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        会员等级\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        状态\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        注册时间\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {recentUsers.map((user, index) => (\n                      <tr key={user.id} className=\"hover:bg-gray-50 transition-colors duration-200\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center shadow-lg\">\n                              <span className=\"text-white text-sm font-semibold\">{user.username.charAt(0).toUpperCase()}</span>\n                            </div>\n                            <div>\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                {user.username}\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                {user.email}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-3 py-1 text-xs font-semibold rounded-full ${getMembershipBadgeColor(user.membership_level)}`}>\n                            {getMembershipText(user.membership_level)}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className={`w-2 h-2 rounded-full ${user.is_active ? 'bg-green-400' : 'bg-red-400'}`}></div>\n                            <span className={`text-sm font-medium ${\n                              user.is_active ? 'text-green-700' : 'text-red-700'\n                            }`}>\n                              {user.is_active ? '活跃' : '非活跃'}\n                            </span>\n                          </div>\n                          <div className=\"flex items-center space-x-2 mt-1\">\n                            <div className={`w-2 h-2 rounded-full ${user.email_verified ? 'bg-blue-400' : 'bg-amber-400'}`}></div>\n                            <span className={`text-xs ${user.email_verified ? 'text-blue-600' : 'text-amber-600'}`}>\n                              {user.email_verified ? '已验证' : '待验证'}\n                            </span>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {formatDate(user.created_at)}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n          {/* 快捷操作 */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-8 h-8 rounded-lg bg-purple-100 flex items-center justify-center\">\n                  <svg className=\"w-4 h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">快捷操作</h3>\n              </div>\n              <div className=\"space-y-3\">\n                <button \n                  onClick={() => navigate('/admin/users')}\n                  className=\"group w-full text-left px-4 py-4 rounded-xl bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-300 hover:scale-[1.02]\"\n                >\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-lg bg-blue-100 flex items-center justify-center mr-4 group-hover:shadow-lg group-hover:shadow-blue-100 transition-all duration-300\">\n                      <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                      </svg>\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-gray-900 group-hover:text-blue-700 transition-colors duration-300\">用户管理</div>\n                      <div className=\"text-sm text-gray-600\">管理用户账户和会员权限</div>\n                    </div>\n                    <svg className=\"w-5 h-5 text-blue-600 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </button>\n\n                <button \n                  onClick={() => navigate('/admin/claude')}\n                  className=\"group w-full text-left px-4 py-4 rounded-xl bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-300 hover:scale-[1.02]\"\n                >\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-lg bg-green-100 flex items-center justify-center mr-4 group-hover:shadow-lg group-hover:shadow-green-100 transition-all duration-300\">\n                      <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                      </svg>\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-gray-900 group-hover:text-green-700 transition-colors duration-300\">AI服务管理</div>\n                      <div className=\"text-sm text-gray-600\">Claude账号池和使用统计</div>\n                    </div>\n                    <svg className=\"w-5 h-5 text-green-600 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </button>\n\n                <button \n                  onClick={() => navigate('/admin/wallets')}\n                  className=\"group w-full text-left px-4 py-4 rounded-xl bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-300 hover:scale-[1.02]\"\n                >\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-lg bg-emerald-100 flex items-center justify-center mr-4 group-hover:shadow-lg group-hover:shadow-emerald-100 transition-all duration-300\">\n                      <svg className=\"w-5 h-5 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                      </svg>\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-gray-900 group-hover:text-emerald-700 transition-colors duration-300\">钱包池管理</div>\n                      <div className=\"text-sm text-gray-600\">USDT钱包生成和智能分配</div>\n                    </div>\n                    <svg className=\"w-5 h-5 text-emerald-600 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </button>\n\n                <button \n                  onClick={() => navigate('/admin/data')}\n                  className=\"group w-full text-left px-4 py-4 rounded-xl bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-300 hover:scale-[1.02]\"\n                >\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-lg bg-orange-100 flex items-center justify-center mr-4 group-hover:shadow-lg group-hover:shadow-orange-100 transition-all duration-300\">\n                      <svg className=\"w-5 h-5 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                      </svg>\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-gray-900 group-hover:text-orange-700 transition-colors duration-300\">数据管理</div>\n                      <div className=\"text-sm text-gray-600\">历史数据下载和质量监控</div>\n                    </div>\n                    <svg className=\"w-5 h-5 text-orange-600 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </button>\n\n                <button className=\"group w-full text-left px-4 py-4 rounded-xl bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-300 hover:scale-[1.02]\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-lg bg-amber-100 flex items-center justify-center mr-4 group-hover:shadow-lg group-hover:shadow-amber-100 transition-all duration-300\">\n                      <svg className=\"w-5 h-5 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                      </svg>\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-gray-900 group-hover:text-amber-700 transition-colors duration-300\">支付管理</div>\n                      <div className=\"text-sm text-gray-600\">USDT钱包和订单管理</div>\n                    </div>\n                    <svg className=\"w-5 h-5 text-amber-600 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </button>\n\n                <button className=\"group w-full text-left px-4 py-4 rounded-xl bg-gray-50 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-300 hover:scale-[1.02]\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-lg bg-pink-100 flex items-center justify-center mr-4 group-hover:shadow-lg group-hover:shadow-pink-100 transition-all duration-300\">\n                      <svg className=\"w-5 h-5 text-pink-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-gray-900 group-hover:text-pink-700 transition-colors duration-300\">数据统计</div>\n                      <div className=\"text-sm text-gray-600\">系统运营数据和报表</div>\n                    </div>\n                    <svg className=\"w-5 h-5 text-pink-600 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </button>\n              </div>\n            </div>\n\n            {/* 系统状态 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-8 h-8 rounded-lg bg-green-100 flex items-center justify-center\">\n                  <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">系统状态</h3>\n              </div>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between p-3 rounded-xl bg-blue-50 border border-blue-100\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-900\">用户服务</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm font-medium text-green-700\">运行中</span>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between p-3 rounded-xl bg-purple-50 border border-purple-100\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 rounded-lg bg-purple-100 flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                      </svg>\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-900\">交易服务</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm font-medium text-green-700\">运行中</span>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between p-3 rounded-xl bg-amber-50 border border-amber-100\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 rounded-lg bg-amber-100 flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                      </svg>\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-900\">数据服务</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm font-medium text-green-700\">运行中</span>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between p-3 rounded-xl bg-emerald-50 border border-emerald-100\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 rounded-lg bg-emerald-100 flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                      </svg>\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-900\">数据库</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm font-medium text-green-700\">正常</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboardPage;","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthStore } from '@/store/authStore';\nimport LoadingSpinner from '@/components/common/LoadingSpinner';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  membership_level: string;\n  membership_expires_at?: string;\n  is_active: boolean;\n  email_verified: boolean;\n  last_login_at?: string;\n  created_at: string;\n}\n\ninterface MembershipStats {\n  user: {\n    id: string;\n    username: string;\n    email: string;\n    membership_level: string;\n    membership_name: string;\n    membership_expires_at?: string;\n    email_verified: boolean;\n    created_at: string;\n  };\n  limits: {\n    name: string;\n    api_keys: number;\n    ai_daily: number;\n    tick_backtest: number;\n    storage: number;\n    indicators: number;\n    strategies: number;\n    live_trading: number;\n  };\n  usage: {\n    api_keys_count: number;\n    ai_usage_today: number;\n    tick_backtest_today: number;\n    storage_used: number;\n    indicators_count: number;\n    strategies_count: number;\n    live_trading_count: number;\n  };\n}\n\ninterface MembershipAnalytics {\n  membership_distribution: Array<{\n    level: string;\n    count: number;\n  }>;\n  revenue: {\n    monthly_revenue: number;\n    yearly_revenue: number;\n    active_subscriptions: number;\n  };\n  expiring_soon: Array<{\n    id: string;\n    username: string;\n    email: string;\n    membership_level: string;\n    expires_at: string;\n    days_remaining: number;\n  }>;\n}\n\ninterface SystemStats {\n  users: {\n    total: number;\n    active: number;\n    inactive: number;\n    verified: number;\n    unverified: number;\n    recent_7days: number;\n  };\n  membership: {\n    basic: number;\n    premium: number;\n    professional: number;\n  };\n  growth: {\n    weekly_new_users: number;\n    active_rate: string;\n    verification_rate: string;\n  };\n}\n\nconst UserManagementPage = () => {\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [membershipStats, setMembershipStats] = useState<MembershipStats | null>(null);\n  const [analytics, setAnalytics] = useState<MembershipAnalytics | null>(null);\n  const [systemStats, setSystemStats] = useState<SystemStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [showUserDetail, setShowUserDetail] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n\n  // 检查管理员权限\n  useEffect(() => {\n    if (!user || user.email !== 'admin@trademe.com') {\n      navigate('/');\n      return;\n    }\n  }, [user, navigate]);\n\n  // 获取用户列表\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/users?limit=50', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUsers(data.data.users);\n      } else {\n        throw new Error('获取用户列表失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取用户列表失败');\n    }\n  };\n\n  // 获取系统统计\n  const fetchSystemStats = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/stats/system', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setSystemStats(data.data);\n      }\n    } catch (err) {\n      console.error('获取系统统计失败:', err);\n    }\n  };\n\n  // 获取会员分析数据\n  const fetchAnalytics = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/analytics/membership', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setAnalytics(data.data);\n      }\n    } catch (err) {\n      console.error('获取分析数据失败:', err);\n    }\n  };\n\n  // 获取用户详细信息和使用统计\n  const fetchUserDetails = async (userId: string) => {\n    try {\n      const response = await fetch(`/api/v1/admin/users/${userId}/membership-stats`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setMembershipStats(data.data);\n        setShowUserDetail(true);\n      } else {\n        throw new Error('获取用户详情失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取用户详情失败');\n    }\n  };\n\n  // 批量操作用户\n  const batchUpdateUsers = async (action: string, data?: any) => {\n    if (selectedUsers.length === 0) {\n      alert('请选择要操作的用户');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/v1/admin/users/batch', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          user_ids: selectedUsers,\n          action,\n          data,\n        }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        alert(result.message);\n        await fetchUsers();\n        setSelectedUsers([]);\n      } else {\n        throw new Error('批量操作失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '批量操作失败');\n    }\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchUsers(), fetchAnalytics(), fetchSystemStats()]);\n      setLoading(false);\n    };\n\n    if (token) {\n      loadData();\n    }\n  }, [token]);\n\n  const getMembershipBadgeColor = (level: string) => {\n    switch (level.toLowerCase()) {\n      case 'basic': return 'bg-gray-100 text-gray-700 border border-gray-300';\n      case 'premium': return 'bg-blue-50 text-blue-700 border border-blue-200';\n      case 'professional': return 'bg-purple-50 text-purple-700 border border-purple-200';\n      default: return 'bg-gray-100 text-gray-700 border border-gray-300';\n    }\n  };\n\n  const getMembershipText = (level: string) => {\n    switch (level.toLowerCase()) {\n      case 'basic': return '基础版';\n      case 'premium': return '高级版';\n      case 'professional': return '专业版';\n      default: return level;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('zh-CN');\n  };\n\n  const getDaysRemaining = (expiresAt?: string) => {\n    if (!expiresAt) return null;\n    const days = Math.ceil((new Date(expiresAt).getTime() - Date.now()) / (24 * 60 * 60 * 1000));\n    return days > 0 ? days : 0;\n  };\n\n  // 筛选用户\n  const filteredUsers = users.filter(user => {\n    const matchesSearch = user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         user.email.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = filterStatus === 'all' || \n                         (filterStatus === 'active' && user.is_active) ||\n                         (filterStatus === 'inactive' && !user.is_active) ||\n                         (filterStatus === 'verified' && user.email_verified) ||\n                         (filterStatus === 'unverified' && !user.email_verified);\n    return matchesSearch && matchesFilter;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 text-lg mb-4\">⚠️ {error}</div>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            重新加载\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 顶部导航栏 */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-blue-600 to-blue-700 flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">用户管理中心</h1>\n                <p className=\"text-sm text-gray-600\">数据驱动的用户运营平台</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3 px-4 py-2 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 flex items-center justify-center\">\n                  <span className=\"text-green-700 text-sm font-semibold\">{user?.username?.charAt(0).toUpperCase()}</span>\n                </div>\n                <span className=\"text-sm font-medium text-green-700\">管理员: {user?.username}</span>\n              </div>\n              <button\n                onClick={() => navigate('/admin')}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-all duration-200 flex items-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <span>返回仪表板</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-6\">\n        {/* KPI指标面板 */}\n        {systemStats && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {/* 总用户数 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">总用户数</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{systemStats.users.total.toLocaleString()}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4 text-sm\">\n                    <span className=\"text-green-600 font-medium\">活跃: {systemStats.users.active}</span>\n                    <span className=\"text-gray-500\">({systemStats.growth.active_rate}%)</span>\n                  </div>\n                  <div className=\"mt-3\">\n                    <div className=\"w-full bg-gray-100 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full transition-all duration-1000\"\n                        style={{ width: `${Math.min(100, (systemStats.users.active / systemStats.users.total) * 100)}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 7天新增 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">7天新增</p>\n                  <p className=\"text-3xl font-bold text-gray-900\">{systemStats.users.recent_7days}</p>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-end mt-4\">\n                {[...Array(7)].map((_, i) => (\n                  <div\n                    key={i}\n                    className={`w-4 rounded-sm transition-all duration-500 ${\n                      i < Math.ceil((systemStats.users.recent_7days / 7) * 7)\n                        ? 'bg-green-500' \n                        : 'bg-gray-200'\n                    }`}\n                    style={{ \n                      height: `${20 + Math.random() * 30}px`,\n                      animationDelay: `${i * 100}ms`\n                    }}\n                  ></div>\n                ))}\n              </div>\n            </div>\n\n            {/* 邮箱验证率 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-amber-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">邮箱验证率</p>\n                  <p className=\"text-3xl font-bold text-gray-900\">{systemStats.growth.verification_rate}%</p>\n                </div>\n              </div>\n              <div className=\"relative pt-1\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                  <div>\n                    <span className=\"text-xs font-semibold inline-block text-amber-600\">\n                      已验证: {systemStats.users.verified}\n                    </span>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-xs font-semibold inline-block text-gray-500\">\n                      待验证: {systemStats.users.unverified}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-amber-100\">\n                  <div\n                    style={{ width: `${systemStats.growth.verification_rate}%` }}\n                    className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-amber-500 transition-all duration-1000\"\n                  ></div>\n                </div>\n              </div>\n            </div>\n\n            {/* 付费用户 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">付费用户</p>\n                  <p className=\"text-3xl font-bold text-gray-900\">{systemStats.membership.premium + systemStats.membership.professional}</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-4 text-sm\">\n                <span className=\"text-blue-600 font-medium\">高级: {systemStats.membership.premium}</span>\n                <span className=\"text-purple-600 font-medium\">专业: {systemStats.membership.professional}</span>\n              </div>\n              <div className=\"flex mt-3 space-x-1\">\n                <div \n                  className=\"h-2 bg-blue-500 rounded-sm flex-1\"\n                  style={{flexBasis: `${(systemStats.membership.premium / (systemStats.membership.premium + systemStats.membership.professional)) * 100}%`}}\n                ></div>\n                <div \n                  className=\"h-2 bg-purple-500 rounded-sm flex-1\"\n                  style={{flexBasis: `${(systemStats.membership.professional / (systemStats.membership.premium + systemStats.membership.professional)) * 100}%`}}\n                ></div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* 主要数据表格 */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n              {/* 表格头部控制 */}\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n                  <div className=\"flex items-center space-x-4\">\n                    <h2 className=\"text-lg font-semibold text-gray-900\">用户列表</h2>\n                    {selectedUsers.length > 0 && (\n                      <span className=\"px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full font-medium\">\n                        已选中 {selectedUsers.length} 个用户\n                      </span>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    {/* 搜索框 */}\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"搜索用户...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                      />\n                      <svg className=\"w-4 h-4 text-gray-400 absolute left-3 top-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                      </svg>\n                    </div>\n\n                    {/* 状态筛选 */}\n                    <select\n                      value={filterStatus}\n                      onChange={(e) => setFilterStatus(e.target.value)}\n                      className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                    >\n                      <option value=\"all\">全部状态</option>\n                      <option value=\"active\">活跃用户</option>\n                      <option value=\"inactive\">非活跃</option>\n                      <option value=\"verified\">已验证</option>\n                      <option value=\"unverified\">未验证</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* 批量操作按钮 */}\n                {selectedUsers.length > 0 && (\n                  <div className=\"flex items-center space-x-2 mt-4\">\n                    <button\n                      onClick={() => batchUpdateUsers('activate')}\n                      className=\"inline-flex items-center px-3 py-2 text-sm font-medium text-green-700 bg-green-50 border border-green-200 rounded-lg hover:bg-green-100 transition-colors\"\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      激活用户\n                    </button>\n                    <button\n                      onClick={() => batchUpdateUsers('deactivate')}\n                      className=\"inline-flex items-center px-3 py-2 text-sm font-medium text-red-700 bg-red-50 border border-red-200 rounded-lg hover:bg-red-100 transition-colors\"\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      停用用户\n                    </button>\n                    <button\n                      onClick={() => batchUpdateUsers('verify_email')}\n                      className=\"inline-flex items-center px-3 py-2 text-sm font-medium text-blue-700 bg-blue-50 border border-blue-200 rounded-lg hover:bg-blue-100 transition-colors\"\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                      </svg>\n                      验证邮箱\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              {/* 数据表格 */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead className=\"bg-gray-50 border-b border-gray-200\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              setSelectedUsers(filteredUsers.map(u => u.id));\n                            } else {\n                              setSelectedUsers([]);\n                            }\n                          }}\n                          checked={selectedUsers.length === filteredUsers.length && filteredUsers.length > 0}\n                        />\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">用户信息</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">会员等级</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">状态</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">最后登录</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">操作</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {filteredUsers.map((user) => (\n                      <tr key={user.id} className=\"hover:bg-gray-50 transition-colors\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\n                            checked={selectedUsers.includes(user.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setSelectedUsers([...selectedUsers, user.id]);\n                              } else {\n                                setSelectedUsers(selectedUsers.filter(id => id !== user.id));\n                              }\n                            }}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white font-semibold text-sm\">\n                              {user.username.charAt(0).toUpperCase()}\n                            </div>\n                            <div>\n                              <div className=\"text-sm font-medium text-gray-900\">{user.username}</div>\n                              <div className=\"text-sm text-gray-500\">{user.email}</div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${getMembershipBadgeColor(user.membership_level)}`}>\n                            {getMembershipText(user.membership_level)}\n                          </span>\n                          {user.membership_expires_at && (\n                            <div className=\"text-xs text-amber-600 mt-1\">\n                              {getDaysRemaining(user.membership_expires_at)} 天后到期\n                            </div>\n                          )}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className={`w-2 h-2 rounded-full ${user.is_active ? 'bg-green-400' : 'bg-gray-400'}`}></div>\n                            <span className={`text-sm font-medium ${user.is_active ? 'text-green-700' : 'text-gray-500'}`}>\n                              {user.is_active ? '活跃' : '非活跃'}\n                            </span>\n                          </div>\n                          <div className=\"flex items-center space-x-2 mt-1\">\n                            <div className={`w-2 h-2 rounded-full ${user.email_verified ? 'bg-blue-400' : 'bg-amber-400'}`}></div>\n                            <span className={`text-xs ${user.email_verified ? 'text-blue-600' : 'text-amber-600'}`}>\n                              {user.email_verified ? '已验证' : '待验证'}\n                            </span>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {user.last_login_at ? formatDate(user.last_login_at) : '从未登录'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button\n                            onClick={() => {\n                              setSelectedUser(user);\n                              fetchUserDetails(user.id);\n                            }}\n                            className=\"inline-flex items-center px-3 py-1 text-sm text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded transition-colors\"\n                          >\n                            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                            </svg>\n                            详情\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              {filteredUsers.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" />\n                  </svg>\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">没有找到用户</h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">请尝试调整搜索条件或筛选器。</p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 右侧统计面板 */}\n          <div className=\"space-y-6\">\n            {/* 即将到期的会员 */}\n            {analytics && analytics.expiring_soon.length > 0 && (\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <div className=\"w-8 h-8 bg-amber-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">即将到期</h3>\n                  <span className=\"px-2 py-1 text-xs bg-amber-100 text-amber-700 rounded-full font-medium\">\n                    {analytics.expiring_soon.length}\n                  </span>\n                </div>\n                <div className=\"space-y-3\">\n                  {analytics.expiring_soon.map((user) => (\n                    <div key={user.id} className=\"flex items-center justify-between p-3 bg-amber-50 border border-amber-100 rounded-lg hover:bg-amber-100 transition-colors\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"w-8 h-8 rounded-lg bg-amber-200 flex items-center justify-center text-amber-800 font-semibold text-xs\">\n                          {user.username.charAt(0).toUpperCase()}\n                        </div>\n                        <div>\n                          <div className=\"font-medium text-gray-900 text-sm\">{user.username}</div>\n                          <div className=\"text-xs text-gray-600\">{getMembershipText(user.membership_level)}</div>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm font-semibold text-amber-700\">\n                          {user.days_remaining} 天\n                        </div>\n                        <div className=\"text-xs text-amber-600\">剩余时间</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* 会员级别分布 */}\n            {analytics && (\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">会员分布</h3>\n                </div>\n                <div className=\"space-y-4\">\n                  {analytics.membership_distribution.map((dist) => {\n                    const total = analytics.membership_distribution.reduce((sum, d) => sum + d.count, 0);\n                    const percentage = Math.round((dist.count / total) * 100);\n                    const colors = {\n                      basic: 'bg-gray-500',\n                      premium: 'bg-blue-500',\n                      professional: 'bg-purple-500'\n                    };\n                    \n                    return (\n                      <div key={dist.level} className=\"p-4 bg-gray-50 rounded-lg border border-gray-100 hover:bg-gray-100 transition-colors\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-gray-900\">{getMembershipText(dist.level)}</span>\n                          <span className=\"text-sm font-bold text-gray-900\">{dist.count} 人</span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\n                          <div \n                            className={`h-2 ${colors[dist.level as keyof typeof colors] || colors.basic} rounded-full transition-all duration-1000`}\n                            style={{ width: `${percentage}%` }}\n                          ></div>\n                        </div>\n                        <div className=\"text-xs text-gray-600\">{percentage}% 占比</div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* 收入统计 */}\n                {analytics.revenue && (\n                  <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-3\">收入概览</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">月度收入</span>\n                        <span className=\"font-semibold text-green-600\">${analytics.revenue.monthly_revenue}</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">活跃订阅</span>\n                        <span className=\"font-semibold text-blue-600\">{analytics.revenue.active_subscriptions}</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* 快速统计 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">快速统计</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">今日注册</span>\n                  <span className=\"text-sm font-semibold text-gray-900\">12</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">在线用户</span>\n                  <span className=\"text-sm font-semibold text-green-600\">1,248</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">待处理</span>\n                  <span className=\"text-sm font-semibold text-amber-600\">3</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">系统负载</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-16 bg-gray-200 rounded-full h-1\">\n                      <div className=\"bg-green-500 h-1 rounded-full\" style={{ width: '65%' }}></div>\n                    </div>\n                    <span className=\"text-xs text-gray-500\">65%</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 用户详情模态框 */}\n      {showUserDetail && membershipStats && (\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            {/* 背景遮罩 */}\n            <div \n              className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n              onClick={() => setShowUserDetail(false)}\n            ></div>\n\n            {/* 居中对齐的 trick */}\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n\n            {/* 模态框内容 */}\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full sm:p-6\">\n              <div className=\"flex items-start justify-between mb-6\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white font-bold text-lg\">\n                    {membershipStats.user.username.charAt(0).toUpperCase()}\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">{membershipStats.user.username} 详细信息</h3>\n                    <p className=\"text-sm text-gray-500\">用户数据详情与使用统计</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowUserDetail(false)}\n                  className=\"bg-gray-100 hover:bg-gray-200 rounded-lg p-2 transition-colors\"\n                >\n                  <svg className=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* 基本信息 */}\n                <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-6\">\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-lg font-semibold text-gray-900\">基本信息</h4>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">邮箱地址</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{membershipStats.user.email}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">会员等级</span>\n                      <span className={`px-3 py-1 text-xs font-medium rounded-full ${getMembershipBadgeColor(membershipStats.user.membership_level)}`}>\n                        {membershipStats.limits.name}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">邮箱验证</span>\n                      <div className=\"flex items-center space-x-2\">\n                        <div className={`w-2 h-2 rounded-full ${membershipStats.user.email_verified ? 'bg-green-400' : 'bg-amber-400'}`}></div>\n                        <span className={`text-sm font-medium ${membershipStats.user.email_verified ? 'text-green-600' : 'text-amber-600'}`}>\n                          {membershipStats.user.email_verified ? '已验证' : '待验证'}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">注册时间</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{formatDate(membershipStats.user.created_at)}</span>\n                    </div>\n                    {membershipStats.user.membership_expires_at && (\n                      <div className=\"flex justify-between py-2\">\n                        <span className=\"text-sm text-gray-600\">会员到期</span>\n                        <div className=\"text-right\">\n                          <span className=\"text-sm font-medium text-gray-900\">{formatDate(membershipStats.user.membership_expires_at)}</span>\n                          <div className=\"text-xs text-amber-600\">\n                            {getDaysRemaining(membershipStats.user.membership_expires_at)} 天后到期\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* 使用统计 */}\n                <div className=\"bg-purple-50 border border-purple-200 rounded-xl p-6\">\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-lg font-semibold text-gray-900\">使用统计</h4>\n                  </div>\n                  <div className=\"space-y-4\">\n                    {[\n                      { label: 'API密钥', current: membershipStats.usage.api_keys_count, limit: membershipStats.limits.api_keys, color: 'blue' },\n                      { label: '今日AI使用', current: membershipStats.usage.ai_usage_today, limit: membershipStats.limits.ai_daily, color: 'green', prefix: '$' },\n                      { label: '策略数量', current: membershipStats.usage.strategies_count, limit: membershipStats.limits.strategies, color: 'purple' },\n                      { label: '指标数量', current: membershipStats.usage.indicators_count, limit: membershipStats.limits.indicators, color: 'amber' },\n                      { label: '实盘交易', current: membershipStats.usage.live_trading_count, limit: membershipStats.limits.live_trading, color: 'emerald' },\n                      { label: 'Tick回测', current: membershipStats.usage.tick_backtest_today, limit: membershipStats.limits.tick_backtest, color: 'rose' }\n                    ].map((item, index) => {\n                      const percentage = item.limit > 0 ? Math.min(100, (item.current / item.limit) * 100) : 0;\n                      const colorMap = {\n                        blue: 'bg-blue-500',\n                        green: 'bg-green-500',\n                        purple: 'bg-purple-500',\n                        amber: 'bg-amber-500',\n                        emerald: 'bg-emerald-500',\n                        rose: 'bg-rose-500'\n                      };\n                      \n                      return (\n                        <div key={index} className=\"py-2 border-b border-purple-100 last:border-b-0\">\n                          <div className=\"flex justify-between items-center mb-2\">\n                            <span className=\"text-sm text-gray-600\">{item.label}</span>\n                            <span className=\"text-sm font-medium text-gray-900\">\n                              {item.prefix}{item.current}/{item.limit}\n                            </span>\n                          </div>\n                          <div className=\"w-full bg-purple-100 rounded-full h-2\">\n                            <div \n                              className={`h-2 ${colorMap[item.color as keyof typeof colorMap]} rounded-full transition-all duration-1000`}\n                              style={{ width: `${percentage}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <button\n                  onClick={() => setShowUserDetail(false)}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                >\n                  关闭\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserManagementPage;","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthStore } from '@/store/authStore';\nimport LoadingSpinner from '@/components/common/LoadingSpinner';\n\ninterface ClaudeAccount {\n  id: string;\n  account_name: string;\n  api_key: string;\n  organization_id?: string;\n  project_id?: string;\n  daily_limit: number;\n  current_usage: number;\n  remaining_balance?: number;\n  status: 'active' | 'inactive' | 'error' | 'suspended';\n  proxy_id?: string;\n  avg_response_time: number;\n  success_rate: number;\n  total_requests: number;\n  failed_requests: number;\n  last_used_at?: string;\n  last_check_at?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface Proxy {\n  id: string;\n  name: string;\n  proxy_type: string;\n  host: string;\n  port: number;\n  username?: string;\n  country?: string;\n  region?: string;\n  status: 'active' | 'inactive' | 'error' | 'banned';\n  response_time?: number;\n  success_rate: number;\n  total_requests: number;\n  failed_requests: number;\n  created_at: string;\n}\n\ninterface UsageStats {\n  total_requests: number;\n  total_cost_usd: number;\n  daily_cost_usd: number;\n  monthly_cost_usd: number;\n  by_account: Record<string, {\n    requests: number;\n    cost: number;\n    tokens: number;\n  }>;\n  period_days: number;\n}\n\ninterface SchedulerConfig {\n  id: string;\n  config_name: string;\n  config_type: string;\n  config_data: Record<string, any>;\n  is_active: boolean;\n  priority: number;\n  description?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface AnomalyDetection {\n  anomalies: Array<{\n    type: 'high_failure_rate' | 'slow_response' | 'quota_exceeded' | 'cost_spike';\n    account_id: string;\n    account_name: string;\n    severity: 'low' | 'medium' | 'high';\n    description: string;\n    detected_at: string;\n    current_value: number;\n    threshold: number;\n  }>;\n  recommendations: string[];\n  last_check: string;\n}\n\nconst ClaudeManagementPage = () => {\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const [accounts, setAccounts] = useState<ClaudeAccount[]>([]);\n  const [proxies, setProxies] = useState<Proxy[]>([]);\n  const [usageStats, setUsageStats] = useState<UsageStats | null>(null);\n  const [schedulerConfig, setSchedulerConfig] = useState<SchedulerConfig[]>([]);\n  const [anomalies, setAnomalies] = useState<AnomalyDetection | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // 状态管理\n  const [selectedAccounts, setSelectedAccounts] = useState<string[]>([]);\n  const [showAddAccount, setShowAddAccount] = useState(false);\n  const [showAccountDetail, setShowAccountDetail] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState<ClaudeAccount | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'accounts' | 'users' | 'scheduler' | 'anomalies' | 'anthropic'>('dashboard');\n  \n  // 用户管理状态\n  const [users, setUsers] = useState<any[]>([]);\n  const [userUsageStats, setUserUsageStats] = useState<any[]>([]);\n  const [showSchedulerConfig, setShowSchedulerConfig] = useState(false);\n  \n  // Anthropic官方API管理状态\n  const [anthropicAccounts, setAnthropicAccounts] = useState<any[]>([]);\n  const [showAnthropicForm, setShowAnthropicForm] = useState(false);\n  // Setup Token OAuth 状态\n  const [setupTokenFlow, setSetupTokenFlow] = useState({\n    step: 'initial', // 'initial', 'auth', 'exchange', 'success', 'manual'\n    authUrl: '',\n    sessionId: '',\n    authCode: '',\n    accountName: '',\n    description: '',\n    dailyLimit: 50,\n    priority: 50,\n    directToken: '', // 用于手动导入模式\n    useManualMode: false // 是否使用手动模式\n  });\n  \n  // 新账号表单数据\n  const [newAccount, setNewAccount] = useState({\n    account_name: '',\n    api_key: '',\n    account_type: 'direct', // 'direct', 'proxy_service', 'custom_proxy'\n    proxy_base_url: '',\n    proxy_type: 'proxy_service',\n    daily_limit: 100,\n    proxy_id: ''\n  });\n\n  // 检查管理员权限\n  useEffect(() => {\n    if (!user || user.email !== 'admin@trademe.com') {\n      navigate('/');\n      return;\n    }\n  }, [user, navigate]);\n\n  // 获取Claude账号列表\n  const fetchClaudeAccounts = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/claude/accounts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setAccounts(data.accounts || []);\n      } else {\n        throw new Error('获取Claude账号失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取Claude账号失败');\n    }\n  };\n\n  // 获取代理服务器列表\n  const fetchProxies = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/claude/proxies', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setProxies(data.proxies || []);\n      }\n    } catch (err) {\n      console.error('获取代理列表失败:', err);\n    }\n  };\n\n  // 获取使用统计\n  const fetchUsageStats = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/claude/usage-stats?days=30', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUsageStats(data.data);\n      }\n    } catch (err) {\n      console.error('获取使用统计失败:', err);\n    }\n  };\n\n  // 获取异常检测报告\n  const fetchAnomalyDetection = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/claude/anomaly-detection', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setAnomalies(data.data);\n      }\n    } catch (err) {\n      console.error('获取异常检测失败:', err);\n    }\n  };\n\n  // 获取Anthropic官方API账户\n  const fetchAnthropicAccounts = async () => {\n    try {\n      const response = await fetch('/api/v1/anthropic-accounts/', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setAnthropicAccounts(data || []);\n      } else {\n        throw new Error('获取Anthropic账户失败');\n      }\n    } catch (err) {\n      console.error('获取Anthropic账户失败:', err);\n      setError(err instanceof Error ? err.message : '获取Anthropic账户失败');\n    }\n  };\n\n  // 创建Anthropic账户\n  // Step 1: 生成Setup Token授权URL\n  const generateSetupTokenUrl = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/v1/anthropic-accounts/generate-setup-token-url', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setSetupTokenFlow({\n          ...setupTokenFlow,\n          step: 'auth',\n          authUrl: data.auth_url,\n          sessionId: data.session_id\n        });\n        setError(null);\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '生成授权链接失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '生成授权链接失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Step 2: 交换Setup Token授权码\n  const exchangeSetupToken = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/v1/anthropic-accounts/exchange-setup-token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          session_id: setupTokenFlow.sessionId,\n          authorization_code: setupTokenFlow.authCode,\n          account_name: setupTokenFlow.accountName,\n          description: setupTokenFlow.description,\n          daily_limit: setupTokenFlow.dailyLimit,\n          priority: setupTokenFlow.priority\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setSetupTokenFlow({\n          ...setupTokenFlow,\n          step: 'success'\n        });\n        await fetchAnthropicAccounts();\n        setError(null);\n        // 3秒后自动关闭\n        setTimeout(() => {\n          setShowAnthropicForm(false);\n          resetSetupTokenFlow();\n        }, 3000);\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Setup Token交换失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Setup Token交换失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 重置Setup Token流程\n  const resetSetupTokenFlow = () => {\n    setSetupTokenFlow({\n      step: 'initial',\n      authUrl: '',\n      sessionId: '',\n      authCode: '',\n      accountName: '',\n      description: '',\n      dailyLimit: 50,\n      priority: 50,\n      directToken: '',\n      useManualMode: false\n    });\n  };\n\n  // 测试Anthropic账户连接\n  const testAnthropicAccount = async (accountId: string) => {\n    try {\n      const response = await fetch(`/api/v1/anthropic-accounts/${accountId}/test`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        alert(`连接测试成功！\\n响应时间: ${data.test_details?.response_time_ms || 'N/A'}ms`);\n      } else {\n        alert(`连接测试失败：${data.test_details?.error || data.message || '未知错误'}`);\n      }\n      await fetchAnthropicAccounts(); // 刷新账户状态\n    } catch (err) {\n      alert('测试连接失败：' + (err instanceof Error ? err.message : '网络错误'));\n    }\n  };\n\n  // 删除Anthropic账户\n  const deleteAnthropicAccount = async (accountId: string, accountName: string) => {\n    if (!confirm(`确定要删除Anthropic账户 \"${accountName}\" 吗？`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/v1/anthropic-accounts/${accountId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        await fetchAnthropicAccounts();\n        alert('账户删除成功');\n      } else {\n        alert('删除失败：' + (data.message || '未知错误'));\n      }\n    } catch (err) {\n      alert('删除失败：' + (err instanceof Error ? err.message : '网络错误'));\n    }\n  };\n\n  // 获取用户列表\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/users/', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUsers(data.data?.users || []);\n      }\n    } catch (err) {\n      console.error('获取用户列表失败:', err);\n    }\n  };\n\n  // 获取用户使用统计\n  const fetchUserUsageStats = async () => {\n    try {\n      const response = await fetch('/api/v1/admin/claude/users-detailed-stats', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUserUsageStats(data.data || []);\n      }\n    } catch (err) {\n      console.error('获取用户使用统计失败:', err);\n    }\n  };\n\n  // 添加新账号\n  const addClaudeAccount = async () => {\n    try {\n      // 根据账户类型准备数据\n      const accountData = {\n        account_name: newAccount.account_name,\n        api_key: newAccount.api_key,\n        daily_limit: newAccount.daily_limit,\n        proxy_base_url: newAccount.account_type === 'direct' ? '' : (newAccount.proxy_base_url || 'https://claude.cloudcdn7.com/api'),\n        proxy_type: newAccount.account_type === 'direct' ? '' : (newAccount.account_type === 'custom_proxy' ? 'custom' : 'proxy_service')\n      };\n\n      const response = await fetch('/api/v1/admin/claude/accounts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(accountData),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        alert('Claude账号添加成功');\n        setShowAddAccount(false);\n        setNewAccount({\n          account_name: '',\n          api_key: '',\n          account_type: 'direct',\n          proxy_base_url: '',\n          proxy_type: 'proxy_service',\n          daily_limit: 100,\n          proxy_id: ''\n        });\n        await fetchClaudeAccounts();\n      } else {\n        throw new Error('添加Claude账号失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '添加Claude账号失败');\n    }\n  };\n\n  // 测试账号连接\n  const testAccount = async (accountId: string) => {\n    try {\n      const response = await fetch(`/api/v1/admin/claude/accounts/${accountId}/test`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        alert(`测试结果: ${data.status === 'success' ? '连接成功' : '连接失败'}`);\n        await fetchClaudeAccounts();\n      } else {\n        throw new Error('账号连接测试失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '账号连接测试失败');\n    }\n  };\n\n  // 删除账号\n  const deleteAccount = async (accountId: string) => {\n    if (!confirm('确定要删除这个Claude账号吗？')) return;\n\n    try {\n      const response = await fetch(`/api/v1/admin/claude/accounts/${accountId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        alert('Claude账号删除成功');\n        await fetchClaudeAccounts();\n      } else {\n        throw new Error('删除Claude账号失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '删除Claude账号失败');\n    }\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([\n        fetchClaudeAccounts(),\n        fetchProxies(),\n        fetchUsageStats(),\n        fetchAnomalyDetection(),\n        fetchUsers(),\n        fetchUserUsageStats(),\n        fetchAnthropicAccounts()\n      ]);\n      setLoading(false);\n    };\n\n    if (token) {\n      loadData();\n    }\n  }, [token]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-700 border-green-200';\n      case 'inactive': return 'bg-gray-100 text-gray-700 border-gray-200';\n      case 'error': return 'bg-red-100 text-red-700 border-red-200';\n      case 'suspended': return 'bg-yellow-100 text-yellow-700 border-yellow-200';\n      default: return 'bg-gray-100 text-gray-700 border-gray-200';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active': return '活跃';\n      case 'inactive': return '非活跃';\n      case 'error': return '错误';\n      case 'suspended': return '暂停';\n      default: return status;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('zh-CN');\n  };\n\n  const formatCurrency = (amount: number) => {\n    return `$${amount.toFixed(4)}`;\n  };\n\n  // 筛选账号\n  const filteredAccounts = accounts.filter(account => {\n    const matchesSearch = account.account_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         account.api_key.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = filterStatus === 'all' || account.status === filterStatus;\n    return matchesSearch && matchesFilter;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 text-lg mb-4\">⚠️ {error}</div>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            重新加载\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 顶部导航栏 */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-green-600 to-green-700 flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Claude AI 服务管理</h1>\n                <p className=\"text-sm text-gray-600\">AI账号池与智能调度管理平台</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3 px-4 py-2 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 flex items-center justify-center\">\n                  <span className=\"text-green-700 text-sm font-semibold\">{user?.username?.charAt(0).toUpperCase()}</span>\n                </div>\n                <span className=\"text-sm font-medium text-green-700\">管理员: {user?.username}</span>\n              </div>\n              <button\n                onClick={() => navigate('/admin')}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-all duration-200 flex items-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <span>返回仪表板</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 选项卡导航 */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"px-6\">\n          <nav className=\"flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('dashboard')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'dashboard'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                <span>仪表盘</span>\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('accounts')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'accounts'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                </svg>\n                <span>账户管理</span>\n                <span className=\"ml-1 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                  {accounts.length}\n                </span>\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('users')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'users'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\" />\n                </svg>\n                <span>用户管理</span>\n                <span className=\"ml-1 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                  {users.length}\n                </span>\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('scheduler')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'scheduler'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span>智能调度</span>\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('anomalies')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'anomalies'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.99-.833-2.75 0L4.058 18.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n                <span>异常监控</span>\n                {anomalies?.anomalies.length > 0 && (\n                  <span className=\"ml-1 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                    {anomalies.anomalies.length}\n                  </span>\n                )}\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('anthropic')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'anthropic'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                </svg>\n                <span>Anthropic官方API</span>\n                {anthropicAccounts.length > 0 && (\n                  <span className=\"ml-1 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                    {anthropicAccounts.length}\n                  </span>\n                )}\n              </div>\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      <div className=\"p-6\">\n        {/* 仪表盘选项卡 */}\n        {activeTab === 'dashboard' && (\n          <div className=\"space-y-6\">\n            {/* 统计卡片 */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-blue-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">总账户数</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">{accounts.length}</p>\n                    <p className=\"text-sm text-green-600 mt-1\">\n                      {accounts.filter(a => a.status === 'active').length} 个活跃\n                    </p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-green-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">总请求数</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">\n                      {accounts.reduce((sum, acc) => sum + (acc.total_requests || 0), 0).toLocaleString()}\n                    </p>\n                    <p className=\"text-sm text-red-600 mt-1\">\n                      {accounts.reduce((sum, acc) => sum + (acc.failed_requests || 0), 0)} 失败\n                    </p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-yellow-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">平均响应时间</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">\n                      {accounts.length > 0 \n                        ? Math.round(accounts.reduce((sum, acc) => sum + (acc.avg_response_time || 0), 0) / accounts.length)\n                        : 0\n                      }ms\n                    </p>\n                    <p className=\"text-sm text-gray-600 mt-1\">全部账户平均</p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-purple-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">平均成功率</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">\n                      {accounts.length > 0 \n                        ? (accounts.reduce((sum, acc) => sum + (acc.success_rate || 0), 0) / accounts.length).toFixed(1)\n                        : '0'\n                      }%\n                    </p>\n                    <p className=\"text-sm text-gray-600 mt-1\">全部账户平均</p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 账户列表 */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">账户详细统计</h3>\n              <div className=\"space-y-4\">\n                {accounts.map((account) => {\n                  const usagePercent = account.daily_limit > 0 \n                    ? (account.current_usage / account.daily_limit) * 100 \n                    : 0;\n                  const usageColor = usagePercent < 50 ? 'bg-green-500' : \n                                   usagePercent < 80 ? 'bg-yellow-500' : 'bg-red-500';\n                  \n                  return (\n                    <div key={account.id} className=\"border rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-gray-900\">{account.account_name}</h4>\n                        <span className={`px-2 py-1 text-xs rounded-full ${\n                          account.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                        }`}>\n                          {account.status}\n                        </span>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm mb-3\">\n                        <div>\n                          <span className=\"text-gray-600\">请求数:</span>\n                          <span className=\"font-medium ml-1\">{(account.total_requests || 0).toLocaleString()}</span>\n                        </div>\n                        <div>\n                          <span className=\"text-gray-600\">成功率:</span>\n                          <span className=\"font-medium ml-1\">{(account.success_rate || 0).toFixed(1)}%</span>\n                        </div>\n                        <div>\n                          <span className=\"text-gray-600\">响应时间:</span>\n                          <span className=\"font-medium ml-1\">{account.avg_response_time || 0}ms</span>\n                        </div>\n                        <div>\n                          <span className=\"text-gray-600\">使用率:</span>\n                          <span className=\"font-medium ml-1\">{usagePercent.toFixed(1)}%</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div className={`h-2 rounded-full transition-all duration-300 ${usageColor}`}\n                             style={{ width: `${Math.min(usagePercent, 100)}%` }}></div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 账户管理选项卡 */}\n        {activeTab === 'accounts' && (\n          <div>\n            {/* KPI指标面板 */}\n            {usageStats && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {/* 总请求数 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">总请求数</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{usageStats.total_requests.toLocaleString()}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-green-600 font-medium\">\n                    30天统计\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 总成本 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">总成本</p>\n                  <p className=\"text-3xl font-bold text-gray-900\">{formatCurrency(usageStats.total_cost_usd)}</p>\n                </div>\n              </div>\n              <div className=\"text-sm text-gray-500\">\n                今日: {formatCurrency(usageStats.daily_cost_usd)}\n              </div>\n            </div>\n\n            {/* 活跃账号数 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-amber-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">活跃账号</p>\n                  <p className=\"text-3xl font-bold text-gray-900\">\n                    {accounts.filter(a => a.status === 'active').length}\n                  </p>\n                </div>\n              </div>\n              <div className=\"text-sm text-gray-500\">\n                总账号: {accounts.length}\n              </div>\n            </div>\n\n            {/* 异常数量 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.99-.833-2.75 0L4.058 18.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">异常警告</p>\n                  <p className=\"text-3xl font-bold text-gray-900\">\n                    {anomalies?.anomalies.length || 0}\n                  </p>\n                </div>\n              </div>\n              <div className=\"text-sm text-red-500\">\n                需要关注\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* 主要数据表格 */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n              {/* 表格头部控制 */}\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n                  <div className=\"flex items-center space-x-4\">\n                    <h2 className=\"text-lg font-semibold text-gray-900\">Claude 账号池</h2>\n                    {selectedAccounts.length > 0 && (\n                      <span className=\"px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full font-medium\">\n                        已选中 {selectedAccounts.length} 个账号\n                      </span>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    {/* 搜索框 */}\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"搜索账号...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                      />\n                      <svg className=\"w-4 h-4 text-gray-400 absolute left-3 top-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                      </svg>\n                    </div>\n\n                    {/* 状态筛选 */}\n                    <select\n                      value={filterStatus}\n                      onChange={(e) => setFilterStatus(e.target.value)}\n                      className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                    >\n                      <option value=\"all\">全部状态</option>\n                      <option value=\"active\">活跃</option>\n                      <option value=\"inactive\">非活跃</option>\n                      <option value=\"error\">错误</option>\n                      <option value=\"suspended\">暂停</option>\n                    </select>\n\n                    {/* 添加账号按钮 */}\n                    <button\n                      onClick={() => setShowAddAccount(true)}\n                      className=\"inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 transition-colors\"\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                      </svg>\n                      添加账号\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* 数据表格 */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead className=\"bg-gray-50 border-b border-gray-200\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              setSelectedAccounts(filteredAccounts.map(a => a.id));\n                            } else {\n                              setSelectedAccounts([]);\n                            }\n                          }}\n                          checked={selectedAccounts.length === filteredAccounts.length && filteredAccounts.length > 0}\n                        />\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">账号信息</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">使用情况</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">状态</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">性能</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">操作</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {filteredAccounts.map((account) => (\n                      <tr key={account.id} className=\"hover:bg-gray-50 transition-colors\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\n                            checked={selectedAccounts.includes(account.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setSelectedAccounts([...selectedAccounts, account.id]);\n                              } else {\n                                setSelectedAccounts(selectedAccounts.filter(id => id !== account.id));\n                              }\n                            }}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-green-500 to-blue-600 flex items-center justify-center text-white font-semibold text-sm\">\n                              {account.account_name.charAt(0).toUpperCase()}\n                            </div>\n                            <div>\n                              <div className=\"text-sm font-medium text-gray-900\">{account.account_name}</div>\n                              <div className=\"text-sm text-gray-500\">\n                                {account.api_key.substring(0, 8)}...{account.api_key.substring(account.api_key.length - 4)}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm\">\n                            <div className=\"font-medium text-gray-900\">{formatCurrency(account.current_usage)} / {formatCurrency(account.daily_limit)}</div>\n                            <div className=\"text-gray-500\">\n                              使用率: {account.daily_limit > 0 ? ((account.current_usage / account.daily_limit) * 100).toFixed(1) : 0}%\n                            </div>\n                          </div>\n                          <div className=\"mt-2\">\n                            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                              <div \n                                className={`h-2 rounded-full transition-all duration-300 ${\n                                  account.current_usage / account.daily_limit > 0.8 ? 'bg-red-500' :\n                                  account.current_usage / account.daily_limit > 0.6 ? 'bg-yellow-500' :\n                                  'bg-green-500'\n                                }`}\n                                style={{ \n                                  width: `${Math.min(100, (account.current_usage / account.daily_limit) * 100)}%` \n                                }}\n                              ></div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(account.status)}`}>\n                            {getStatusText(account.status)}\n                          </span>\n                          <div className=\"text-xs text-gray-500 mt-1\">\n                            {account.last_used_at ? formatDate(account.last_used_at) : '从未使用'}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm\">\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"text-gray-600\">响应:</span>\n                              <span className={`font-medium ${\n                                account.avg_response_time > 3000 ? 'text-red-600' :\n                                account.avg_response_time > 1500 ? 'text-yellow-600' :\n                                'text-green-600'\n                              }`}>\n                                {account.avg_response_time}ms\n                              </span>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"text-gray-600\">成功率:</span>\n                              <span className={`font-medium ${\n                                account.success_rate > 95 ? 'text-green-600' :\n                                account.success_rate > 85 ? 'text-yellow-600' :\n                                'text-red-600'\n                              }`}>\n                                {account.success_rate.toFixed(1)}%\n                              </span>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\n                          <button\n                            onClick={() => testAccount(account.id)}\n                            className=\"inline-flex items-center px-2 py-1 text-xs text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded transition-colors\"\n                          >\n                            <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                            </svg>\n                            测试\n                          </button>\n                          <button\n                            onClick={() => {\n                              setSelectedAccount(account);\n                              setShowAccountDetail(true);\n                            }}\n                            className=\"inline-flex items-center px-2 py-1 text-xs text-green-600 hover:text-green-800 hover:bg-green-50 rounded transition-colors\"\n                          >\n                            <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                            </svg>\n                            详情\n                          </button>\n                          <button\n                            onClick={() => deleteAccount(account.id)}\n                            className=\"inline-flex items-center px-2 py-1 text-xs text-red-600 hover:text-red-800 hover:bg-red-50 rounded transition-colors\"\n                          >\n                            <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                            </svg>\n                            删除\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              {filteredAccounts.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">没有找到Claude账号</h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">请尝试调整搜索条件或筛选器。</p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 右侧统计面板 */}\n          <div className=\"space-y-6\">\n            {/* 异常警告 */}\n            {anomalies && anomalies.anomalies.length > 0 && (\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <div className=\"w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.99-.833-2.75 0L4.058 18.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">异常警告</h3>\n                  <span className=\"px-2 py-1 text-xs bg-red-100 text-red-700 rounded-full font-medium\">\n                    {anomalies.anomalies.length}\n                  </span>\n                </div>\n                <div className=\"space-y-3\">\n                  {anomalies.anomalies.slice(0, 5).map((anomaly, index) => (\n                    <div key={index} className=\"flex items-start space-x-3 p-3 bg-red-50 border border-red-100 rounded-lg\">\n                      <div className={`w-2 h-2 rounded-full mt-2 ${\n                        anomaly.severity === 'high' ? 'bg-red-500' :\n                        anomaly.severity === 'medium' ? 'bg-yellow-500' :\n                        'bg-blue-500'\n                      }`}></div>\n                      <div className=\"flex-1\">\n                        <div className=\"text-sm font-medium text-gray-900\">{anomaly.account_name}</div>\n                        <div className=\"text-xs text-gray-600\">{anomaly.description}</div>\n                        <div className=\"text-xs text-gray-500 mt-1\">\n                          {formatDate(anomaly.detected_at)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                {anomalies.recommendations.length > 0 && (\n                  <div className=\"mt-4 pt-4 border-t border-red-100\">\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-2\">建议</h4>\n                    <ul className=\"space-y-1\">\n                      {anomalies.recommendations.slice(0, 3).map((rec, index) => (\n                        <li key={index} className=\"text-xs text-gray-600 flex items-start\">\n                          <span className=\"w-1 h-1 bg-gray-400 rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                          {rec}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* 代理服务器状态 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">代理状态</h3>\n              </div>\n              <div className=\"space-y-3\">\n                {proxies.slice(0, 5).map((proxy) => (\n                  <div key={proxy.id} className=\"flex items-center justify-between p-3 bg-purple-50 border border-purple-100 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-3 h-3 rounded-full ${\n                        proxy.status === 'active' ? 'bg-green-400' :\n                        proxy.status === 'error' ? 'bg-red-400' :\n                        'bg-gray-400'\n                      }`}></div>\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">{proxy.name}</div>\n                        <div className=\"text-xs text-gray-600\">{proxy.host}:{proxy.port}</div>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm font-semibold text-gray-900\">\n                        {proxy.success_rate.toFixed(1)}%\n                      </div>\n                      <div className=\"text-xs text-gray-600\">成功率</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* 快速统计 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">快速统计</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">今日请求</span>\n                  <span className=\"text-sm font-semibold text-gray-900\">1,234</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">平均响应时间</span>\n                  <span className=\"text-sm font-semibold text-green-600\">1.2s</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">错误率</span>\n                  <span className=\"text-sm font-semibold text-red-600\">0.3%</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">成本效率</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-16 bg-gray-200 rounded-full h-1\">\n                      <div className=\"bg-green-500 h-1 rounded-full\" style={{ width: '85%' }}></div>\n                    </div>\n                    <span className=\"text-xs text-gray-500\">85%</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n        )}\n\n        {/* 用户管理选项卡 */}\n        {activeTab === 'users' && (\n          <div className=\"space-y-6\">\n            {/* 用户统计 */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-indigo-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">总用户数</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">{users.length}</p>\n                    <p className=\"text-sm text-green-600 mt-1\">\n                      {users.filter(u => u.membership_level === 'professional').length} 专业版用户\n                    </p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-purple-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">AI使用总数</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">\n                      {userUsageStats.reduce((sum, user) => sum + (user.total_requests || 0), 0)}\n                    </p>\n                    <p className=\"text-sm text-gray-600 mt-1\">本月累计</p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-orange-500\">\n                <div className=\"flex items-center\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">活跃用户</p>\n                    <p className=\"text-3xl font-semibold text-gray-900\">\n                      {users.filter(u => new Date(u.last_login_at || 0) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)).length}\n                    </p>\n                    <p className=\"text-sm text-gray-600 mt-1\">近7天</p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 用户使用量详细列表 */}\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h3 className=\"text-lg font-medium text-gray-900\">用户Claude使用详情</h3>\n                <p className=\"text-sm text-gray-600\">各用户的Claude AI使用统计和费用详情</p>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">用户信息</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">会员等级</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">使用次数</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">费用</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">最后使用</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">状态</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {users.map((user) => {\n                      const usage = userUsageStats.find(u => u.user_id === user.id) || {};\n                      return (\n                        <tr key={user.id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"w-10 h-10 rounded-full bg-gradient-to-r from-purple-500 to-indigo-600 flex items-center justify-center text-white font-semibold\">\n                                {user.username?.charAt(0).toUpperCase() || user.email?.charAt(0).toUpperCase()}\n                              </div>\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">\n                                  {user.username || '未设置'}\n                                </div>\n                                <div className=\"text-sm text-gray-500\">{user.email}</div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                              user.membership_level === 'professional' \n                                ? 'bg-yellow-100 text-yellow-800' \n                                : 'bg-gray-100 text-gray-800'\n                            }`}>\n                              {user.membership_level === 'professional' ? '专业版' : '免费版'}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {usage.total_requests || 0}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            ${(usage.total_cost || 0).toFixed(4)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {user.last_login_at ? new Date(user.last_login_at).toLocaleDateString('zh-CN') : '从未登录'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                              user.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                            }`}>\n                              {user.is_active ? '活跃' : '已禁用'}\n                            </span>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n\n              {users.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\" />\n                  </svg>\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">暂无用户数据</h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">等待用户注册或检查API连接。</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n      {/* 添加账号模态框 */}\n      {showAddAccount && (\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <div \n              className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n              onClick={() => setShowAddAccount(false)}\n            ></div>\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n              <div className=\"flex items-start justify-between mb-6\">\n                <div>\n                  <h3 className=\"text-lg font-bold text-gray-900\">添加Claude账号</h3>\n                  <p className=\"text-sm text-gray-500\">添加官方API账号或代理服务账号到账号池</p>\n                </div>\n                <button\n                  onClick={() => setShowAddAccount(false)}\n                  className=\"bg-gray-100 hover:bg-gray-200 rounded-lg p-2 transition-colors\"\n                >\n                  <svg className=\"h-5 w-5 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">账号名称</label>\n                  <input\n                    type=\"text\"\n                    value={newAccount.account_name}\n                    onChange={(e) => setNewAccount({...newAccount, account_name: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"例如: Claude-Account-001\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">API Key</label>\n                  <input\n                    type=\"password\"\n                    value={newAccount.api_key}\n                    onChange={(e) => setNewAccount({...newAccount, api_key: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"sk-ant-api... 或 代理服务API密钥\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">账户类型</label>\n                  <select\n                    value={newAccount.account_type}\n                    onChange={(e) => setNewAccount({...newAccount, account_type: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"direct\">直接API连接</option>\n                    <option value=\"proxy_service\">代理服务连接</option>\n                    <option value=\"custom_proxy\">自定义代理</option>\n                  </select>\n                </div>\n\n                {(newAccount.account_type === 'proxy_service' || newAccount.account_type === 'custom_proxy') && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">代理服务地址</label>\n                    {newAccount.account_type === 'proxy_service' ? (\n                      <select\n                        value={newAccount.proxy_base_url}\n                        onChange={(e) => setNewAccount({...newAccount, proxy_base_url: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        <option value=\"\">选择代理服务</option>\n                        <option value=\"https://claude.cloudcdn7.com/api\">CloudCDN7 代理服务</option>\n                        <option value=\"https://api.claude-proxy.com/api\">Claude Proxy 服务</option>\n                        <option value=\"https://claude-api.proxy.com/v1\">通用代理服务</option>\n                        <option value=\"custom\">自定义URL...</option>\n                      </select>\n                    ) : (\n                      <input\n                        type=\"url\"\n                        value={newAccount.proxy_base_url}\n                        onChange={(e) => setNewAccount({...newAccount, proxy_base_url: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        placeholder=\"https://your-proxy-service.com/api\"\n                      />\n                    )}\n                    \n                    {newAccount.account_type === 'proxy_service' && newAccount.proxy_base_url === 'custom' && (\n                      <input\n                        type=\"url\"\n                        value=\"\"\n                        onChange={(e) => setNewAccount({...newAccount, proxy_base_url: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-2\"\n                        placeholder=\"输入自定义代理服务地址\"\n                      />\n                    )}\n                    \n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      {newAccount.account_type === 'proxy_service' \n                        ? '选择可信的Claude代理服务提供商，确保服务稳定性和安全性' \n                        : '输入您自己搭建或信任的代理服务地址'}\n                    </p>\n                  </div>\n                )}\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">每日限额 ($)</label>\n                  <input\n                    type=\"number\"\n                    value={newAccount.daily_limit}\n                    onChange={(e) => setNewAccount({...newAccount, daily_limit: parseFloat(e.target.value) || 0})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"100\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">代理服务器 (可选)</label>\n                  <select\n                    value={newAccount.proxy_id}\n                    onChange={(e) => setNewAccount({...newAccount, proxy_id: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">不使用代理</option>\n                    {proxies.map(proxy => (\n                      <option key={proxy.id} value={proxy.id}>{proxy.name}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <button\n                  onClick={() => setShowAddAccount(false)}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                >\n                  取消\n                </button>\n                <button\n                  onClick={addClaudeAccount}\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\"\n                >\n                  添加账号\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n        {/* 智能调度选项卡内容 */}\n        {activeTab === 'scheduler' && (\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"text-center py-12\">\n              <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <h3 className=\"mt-4 text-lg font-medium text-gray-900\">智能调度配置</h3>\n              <p className=\"mt-2 text-gray-500\">高级调度算法和负载均衡配置</p>\n              <button \n                onClick={() => setShowSchedulerConfig(true)}\n                className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                配置调度规则\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* 异常监控选项卡内容 */}\n        {activeTab === 'anomalies' && (\n          <div className=\"space-y-6\">\n            {anomalies?.anomalies && anomalies.anomalies.length > 0 ? (\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"px-6 py-4 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">系统异常警告</h3>\n                  <p className=\"text-sm text-gray-600\">发现 {anomalies.anomalies.length} 个需要关注的异常</p>\n                </div>\n                <div className=\"divide-y divide-gray-200\">\n                  {anomalies.anomalies.map((anomaly, index) => (\n                    <div key={index} className=\"px-6 py-4\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex\">\n                          <div className={`flex-shrink-0 w-2 h-2 mt-2 rounded-full ${\n                            anomaly.severity === 'high' ? 'bg-red-500' :\n                            anomaly.severity === 'medium' ? 'bg-yellow-500' : 'bg-blue-500'\n                          }`}></div>\n                          <div className=\"ml-3\">\n                            <h4 className=\"text-sm font-medium text-gray-900\">{anomaly.account_name}</h4>\n                            <p className=\"text-sm text-gray-600\">{anomaly.description}</p>\n                            <p className=\"text-xs text-gray-500 mt-1\">\n                              检测时间: {new Date(anomaly.detected_at).toLocaleString()}\n                            </p>\n                          </div>\n                        </div>\n                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                          anomaly.severity === 'high' ? 'bg-red-100 text-red-800' :\n                          anomaly.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-blue-100 text-blue-800'\n                        }`}>\n                          {anomaly.severity === 'high' ? '高风险' :\n                           anomaly.severity === 'medium' ? '中等风险' : '低风险'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <div className=\"text-center py-12\">\n                  <svg className=\"mx-auto h-12 w-12 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <h3 className=\"mt-4 text-lg font-medium text-gray-900\">系统运行正常</h3>\n                  <p className=\"mt-2 text-gray-500\">暂未发现异常，所有账户运行状况良好</p>\n                </div>\n              </div>\n            )}\n\n            {/* 推荐操作 */}\n            {anomalies?.recommendations && anomalies.recommendations.length > 0 && (\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">系统优化建议</h3>\n                <div className=\"space-y-3\">\n                  {anomalies.recommendations.map((recommendation, index) => (\n                    <div key={index} className=\"flex items-start\">\n                      <div className=\"flex-shrink-0\">\n                        <svg className=\"h-5 w-5 text-blue-500 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                      <div className=\"ml-3\">\n                        <p className=\"text-sm text-gray-700\">{recommendation}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Anthropic官方API选项卡内容 */}\n        {activeTab === 'anthropic' && (\n          <div className=\"space-y-6\">\n            {/* 页面头部 */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900\">Anthropic官方API管理</h3>\n                  <p className=\"text-sm text-gray-600\">直接对接Anthropic官方API服务，无需代理中转</p>\n                </div>\n                <button\n                  onClick={() => setShowAnthropicForm(true)}\n                  className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  <span>添加官方API账户</span>\n                </button>\n              </div>\n              \n              {/* 统计概览 */}\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"bg-purple-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n                        <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                        </svg>\n                      </div>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm font-medium text-gray-600\">总账户数</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">{anthropicAccounts.length}</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-green-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n                        <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                      </div>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm font-medium text-gray-600\">活跃账户</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {anthropicAccounts.filter(acc => acc.status === 'active').length}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-blue-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                        <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                        </svg>\n                      </div>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm font-medium text-gray-600\">总使用额度</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        ${anthropicAccounts.reduce((sum, acc) => sum + (acc.daily_limit || 0), 0).toFixed(2)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 账户列表 */}\n            <div className=\"bg-white rounded-lg shadow\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Anthropic账户列表</h3>\n              </div>\n              \n              {anthropicAccounts.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                  </svg>\n                  <h3 className=\"mt-4 text-lg font-medium text-gray-900\">暂无Anthropic官方API账户</h3>\n                  <p className=\"mt-2 text-gray-500\">点击上方按钮添加您的第一个Anthropic官方API账户</p>\n                </div>\n              ) : (\n                <div className=\"divide-y divide-gray-200\">\n                  {anthropicAccounts.map((account, index) => (\n                    <div key={account.id || index} className=\"px-6 py-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-4\">\n                            <div className=\"flex-shrink-0\">\n                              <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\n                                account.status === 'active' \n                                  ? 'bg-green-100' \n                                  : account.status === 'error' \n                                    ? 'bg-red-100' \n                                    : 'bg-gray-100'\n                              }`}>\n                                <svg className={`w-6 h-6 ${\n                                  account.status === 'active' \n                                    ? 'text-green-600' \n                                    : account.status === 'error' \n                                      ? 'text-red-600' \n                                      : 'text-gray-600'\n                                }`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                                </svg>\n                              </div>\n                            </div>\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center space-x-2\">\n                                <h4 className=\"text-sm font-medium text-gray-900\">{account.account_name}</h4>\n                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                                  account.status === 'active' \n                                    ? 'bg-green-100 text-green-800' \n                                    : account.status === 'error' \n                                      ? 'bg-red-100 text-red-800' \n                                      : 'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {account.status === 'active' ? '运行中' : account.status === 'error' ? '错误' : '停用'}\n                                </span>\n                                {account.has_valid_api_key && (\n                                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                                    已配置API密钥\n                                  </span>\n                                )}\n                              </div>\n                              <div className=\"mt-1 text-sm text-gray-500 flex items-center space-x-4\">\n                                <span>API版本: {account.api_version}</span>\n                                <span>使用率: {account.usage_percentage?.toFixed(1) || 0}%</span>\n                                <span>优先级: {account.priority}</span>\n                                <span>响应时间: {account.avg_response_time || 0}ms</span>\n                                {account.last_check_at && (\n                                  <span>最近检查: {new Date(account.last_check_at).toLocaleString()}</span>\n                                )}\n                              </div>\n                              <div className=\"mt-2\">\n                                <div className=\"flex items-center space-x-4\">\n                                  <div className=\"flex items-center space-x-1\">\n                                    <span className=\"text-xs text-gray-500\">每日额度:</span>\n                                    <span className=\"text-sm font-medium text-gray-900\">\n                                      ${account.current_usage?.toFixed(2) || 0} / ${account.daily_limit?.toFixed(2) || 0}\n                                    </span>\n                                  </div>\n                                  <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                                    <div \n                                      className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\" \n                                      style={{width: `${Math.min(account.usage_percentage || 0, 100)}%`}}\n                                    ></div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => testAnthropicAccount(account.id)}\n                            className=\"p-2 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-lg transition-colors\"\n                            title=\"测试连接\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                            </svg>\n                          </button>\n                          \n                          <button\n                            onClick={() => deleteAnthropicAccount(account.id, account.account_name)}\n                            className=\"p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-lg transition-colors\"\n                            title=\"删除账户\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* 账号详情模态框 */}\n      {showAccountDetail && selectedAccount && (\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <div \n              className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n              onClick={() => setShowAccountDetail(false)}\n            ></div>\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full sm:p-6\">\n              <div className=\"flex items-start justify-between mb-6\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-green-500 to-blue-600 flex items-center justify-center text-white font-bold text-lg\">\n                    {selectedAccount.account_name.charAt(0).toUpperCase()}\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">{selectedAccount.account_name} 详细信息</h3>\n                    <p className=\"text-sm text-gray-500\">Claude账号使用详情和性能监控</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowAccountDetail(false)}\n                  className=\"bg-gray-100 hover:bg-gray-200 rounded-lg p-2 transition-colors\"\n                >\n                  <svg className=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* 基本信息 */}\n                <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-6\">\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-lg font-semibold text-gray-900\">基本信息</h4>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">API密钥</span>\n                      <span className=\"text-sm font-medium text-gray-900 font-mono\">\n                        {selectedAccount.api_key.substring(0, 12)}...{selectedAccount.api_key.substring(selectedAccount.api_key.length - 8)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">状态</span>\n                      <span className={`px-3 py-1 text-xs font-medium rounded-full ${getStatusColor(selectedAccount.status)}`}>\n                        {getStatusText(selectedAccount.status)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">每日限额</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{formatCurrency(selectedAccount.daily_limit)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                      <span className=\"text-sm text-gray-600\">当前使用</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{formatCurrency(selectedAccount.current_usage)}</span>\n                    </div>\n                    {selectedAccount.remaining_balance && (\n                      <div className=\"flex justify-between py-2 border-b border-blue-100\">\n                        <span className=\"text-sm text-gray-600\">剩余余额</span>\n                        <span className=\"text-sm font-medium text-gray-900\">{formatCurrency(selectedAccount.remaining_balance)}</span>\n                      </div>\n                    )}\n                    <div className=\"flex justify-between py-2\">\n                      <span className=\"text-sm text-gray-600\">创建时间</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{formatDate(selectedAccount.created_at)}</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 性能统计 */}\n                <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-lg font-semibold text-gray-900\">性能统计</h4>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between py-2 border-b border-green-100\">\n                      <span className=\"text-sm text-gray-600\">总请求数</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{selectedAccount.total_requests.toLocaleString()}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-green-100\">\n                      <span className=\"text-sm text-gray-600\">失败请求数</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{selectedAccount.failed_requests.toLocaleString()}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-green-100\">\n                      <span className=\"text-sm text-gray-600\">成功率</span>\n                      <span className={`text-sm font-medium ${\n                        selectedAccount.success_rate > 95 ? 'text-green-600' :\n                        selectedAccount.success_rate > 85 ? 'text-yellow-600' :\n                        'text-red-600'\n                      }`}>\n                        {selectedAccount.success_rate.toFixed(2)}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between py-2 border-b border-green-100\">\n                      <span className=\"text-sm text-gray-600\">平均响应时间</span>\n                      <span className={`text-sm font-medium ${\n                        selectedAccount.avg_response_time > 3000 ? 'text-red-600' :\n                        selectedAccount.avg_response_time > 1500 ? 'text-yellow-600' :\n                        'text-green-600'\n                      }`}>\n                        {selectedAccount.avg_response_time}ms\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span className=\"text-sm text-gray-600\">最后使用</span>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {selectedAccount.last_used_at ? formatDate(selectedAccount.last_used_at) : '从未使用'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <button\n                  onClick={() => setShowAccountDetail(false)}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                >\n                  关闭\n                </button>\n                <button\n                  onClick={() => testAccount(selectedAccount.id)}\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\"\n                >\n                  测试连接\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 调度规则配置模态框 */}\n      {showSchedulerConfig && (\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <div \n              className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n              onClick={() => setShowSchedulerConfig(false)}\n            ></div>\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full sm:p-6\">\n              <div className=\"flex items-start justify-between mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-bold text-gray-900\">智能调度配置</h3>\n                    <p className=\"text-sm text-gray-500\">配置Claude账号的负载均衡和智能调度规则</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowSchedulerConfig(false)}\n                  className=\"bg-gray-100 hover:bg-gray-200 rounded-lg p-2 transition-colors\"\n                >\n                  <svg className=\"h-5 w-5 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div>\n                  <h4 className=\"text-md font-semibold text-gray-900 mb-4\">负载均衡策略</h4>\n                  <div className=\"space-y-3\">\n                    <label className=\"flex items-center\">\n                      <input type=\"radio\" name=\"strategy\" className=\"form-radio text-blue-600\" defaultChecked />\n                      <span className=\"ml-2 text-sm text-gray-700\">智能权重分配 - 根据账号性能动态调整权重</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input type=\"radio\" name=\"strategy\" className=\"form-radio text-blue-600\" />\n                      <span className=\"ml-2 text-sm text-gray-700\">轮询调度 - 依次使用每个账号</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input type=\"radio\" name=\"strategy\" className=\"form-radio text-blue-600\" />\n                      <span className=\"ml-2 text-sm text-gray-700\">最小连接数优先 - 优先使用负载最轻的账号</span>\n                    </label>\n                  </div>\n                </div>\n\n                <div>\n                  <h4 className=\"text-md font-semibold text-gray-900 mb-4\">健康检查配置</h4>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">检查间隔(秒)</label>\n                      <input\n                        type=\"number\"\n                        defaultValue={300}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">超时时间(秒)</label>\n                      <input\n                        type=\"number\"\n                        defaultValue={30}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h4 className=\"text-md font-semibold text-gray-900 mb-4\">故障转移设置</h4>\n                  <div className=\"space-y-3\">\n                    <label className=\"flex items-center\">\n                      <input type=\"checkbox\" className=\"form-checkbox text-blue-600\" defaultChecked />\n                      <span className=\"ml-2 text-sm text-gray-700\">启用自动故障转移</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input type=\"checkbox\" className=\"form-checkbox text-blue-600\" defaultChecked />\n                      <span className=\"ml-2 text-sm text-gray-700\">账号失败后自动标记为不可用</span>\n                    </label>\n                    <label className=\"flex items-center\">\n                      <input type=\"checkbox\" className=\"form-checkbox text-blue-600\" />\n                      <span className=\"ml-2 text-sm text-gray-700\">达到日限额时自动切换</span>\n                    </label>\n                  </div>\n                </div>\n\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <div className=\"flex items-start\">\n                    <svg className=\"w-5 h-5 text-blue-600 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <div className=\"ml-3\">\n                      <h5 className=\"text-sm font-medium text-blue-900\">当前调度状态</h5>\n                      <p className=\"text-sm text-blue-700 mt-1\">\n                        智能调度器正在运行，当前有 {accounts.filter(a => a.status === 'active').length} 个活跃账号参与负载均衡。\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <button\n                  onClick={() => setShowSchedulerConfig(false)}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                >\n                  取消\n                </button>\n                <button\n                  onClick={() => {\n                    alert('调度规则配置已保存');\n                    setShowSchedulerConfig(false);\n                  }}\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\"\n                >\n                  保存配置\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Setup Token OAuth 创建模态框 */}\n      {showAnthropicForm && (\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n            </div>\n\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full sm:p-6\">\n              <div>\n                <div className=\"mt-3 text-center sm:mt-0 sm:text-left\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 flex items-center\">\n                    <svg className=\"w-6 h-6 text-purple-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n                    </svg>\n                    通过Setup Token添加Anthropic账户\n                  </h3>\n                  <p className=\"text-sm text-gray-500 mt-1\">使用OAuth2安全授权方式连接Anthropic官方API</p>\n                </div>\n\n                <div className=\"mt-6 space-y-6\">\n                  {error && (\n                    <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                      <div className=\"flex\">\n                        <svg className=\"w-5 h-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.99-.833-2.75 0L4.058 18.5c-.77.833.192 2.5 1.732 2.5z\" />\n                        </svg>\n                        <div className=\"ml-3\">\n                          <p className=\"text-sm text-red-800\">{error}</p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Step 1: 初始配置 */}\n                  {setupTokenFlow.step === 'initial' && (\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n                        <h4 className=\"text-sm font-medium text-blue-800 mb-2\">🚀 Setup Token OAuth 流程</h4>\n                        <p className=\"text-sm text-blue-700\">\n                          我们将使用Anthropic的官方OAuth2授权方式来安全地连接您的Claude账户，无需手动输入API密钥。\n                        </p>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div className=\"col-span-2\">\n                          <label className=\"block text-sm font-medium text-gray-700\">\n                            账户名称 <span className=\"text-red-500\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={setupTokenFlow.accountName}\n                            onChange={(e) => setSetupTokenFlow({...setupTokenFlow, accountName: e.target.value})}\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"例如：主要生产账户\"\n                            required\n                          />\n                        </div>\n                        \n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">\n                            每日限额 (USD)\n                          </label>\n                          <input\n                            type=\"number\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            value={setupTokenFlow.dailyLimit}\n                            onChange={(e) => setSetupTokenFlow({...setupTokenFlow, dailyLimit: parseFloat(e.target.value) || 50})}\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"50.00\"\n                          />\n                        </div>\n                        \n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">\n                            优先级 (1-100)\n                          </label>\n                          <input\n                            type=\"number\"\n                            min=\"1\"\n                            max=\"100\"\n                            value={setupTokenFlow.priority}\n                            onChange={(e) => setSetupTokenFlow({...setupTokenFlow, priority: parseInt(e.target.value) || 50})}\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"50\"\n                          />\n                        </div>\n                        \n                        <div className=\"col-span-2\">\n                          <label className=\"block text-sm font-medium text-gray-700\">\n                            描述 (可选)\n                          </label>\n                          <textarea\n                            rows={2}\n                            value={setupTokenFlow.description}\n                            onChange={(e) => setSetupTokenFlow({...setupTokenFlow, description: e.target.value})}\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"账户用途说明...\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Step 2: 授权链接 */}\n                  {setupTokenFlow.step === 'auth' && (\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n                        <h4 className=\"text-sm font-medium text-green-800 mb-2\">✅ 授权链接已生成</h4>\n                        <p className=\"text-sm text-green-700 mb-3\">\n                          请点击下面的按钮跳转到Anthropic进行授权：\n                        </p>\n                        <a\n                          href={setupTokenFlow.authUrl}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700\"\n                        >\n                          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                          </svg>\n                          打开Anthropic授权页面\n                        </a>\n                      </div>\n                      \n                      <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mb-4\">\n                        <h4 className=\"text-sm font-medium text-yellow-800 mb-2\">⚠️ 重要说明</h4>\n                        <p className=\"text-sm text-yellow-700 mb-2\">\n                          由于Cloudflare保护，请按以下步骤操作：\n                        </p>\n                        <ol className=\"list-decimal list-inside text-sm text-yellow-700 space-y-1\">\n                          <li>在新标签页中完成授权</li>\n                          <li>授权后会跳转到一个回调页面</li>\n                          <li>复制<strong>整个回调URL</strong>（包含#access_token=...的完整地址）</li>\n                          <li>将完整URL粘贴到下方输入框</li>\n                        </ol>\n                        <p className=\"text-xs text-yellow-600 mt-2\">\n                          示例URL格式: https://console.anthropic.com/oauth/code/callback#access_token=xxx&token_type=Bearer...\n                        </p>\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          回调URL或授权码 <span className=\"text-red-500\">*</span>\n                        </label>\n                        <textarea\n                          rows={4}\n                          value={setupTokenFlow.authCode}\n                          onChange={(e) => setSetupTokenFlow({...setupTokenFlow, authCode: e.target.value})}\n                          className=\"block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500 text-xs\"\n                          placeholder=\"请粘贴完整的回调URL，例如：&#10;https://console.anthropic.com/oauth/code/callback#access_token=xxx&token_type=Bearer&expires_in=31536000&#10;&#10;或者仅粘贴授权码（如果能自动交换）\"\n                          required\n                        />\n                        <p className=\"mt-1 text-xs text-gray-500\">\n                          支持两种模式：1) 完整回调URL（推荐） 2) 仅授权码（可能被Cloudflare阻止）\n                        </p>\n                      </div>\n                      \n                      <button\n                        onClick={() => setSetupTokenFlow({...setupTokenFlow, step: 'initial'})}\n                        className=\"text-sm text-gray-500 hover:text-gray-700\"\n                      >\n                        ← 返回上一步\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Step 3: 成功页面 */}\n                  {setupTokenFlow.step === 'success' && (\n                    <div className=\"text-center py-6\">\n                      <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n                        <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                      </div>\n                      <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Setup Token账户创建成功！</h3>\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        账户 \"{setupTokenFlow.accountName}\" 已成功添加到系统中\n                      </p>\n                      <p className=\"mt-2 text-xs text-gray-400\">\n                        窗口将在 3 秒后自动关闭...\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <button\n                  onClick={() => {\n                    setShowAnthropicForm(false);\n                    resetSetupTokenFlow();\n                    setError(null);\n                  }}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                  disabled={loading}\n                >\n                  取消\n                </button>\n                \n                {setupTokenFlow.step === 'initial' && (\n                  <button\n                    onClick={generateSetupTokenUrl}\n                    disabled={loading || !setupTokenFlow.accountName}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n                  >\n                    {loading && (\n                      <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                    )}\n                    <span>生成授权链接</span>\n                  </button>\n                )}\n                \n                {setupTokenFlow.step === 'auth' && (\n                  <button\n                    onClick={exchangeSetupToken}\n                    disabled={loading || !setupTokenFlow.authCode}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n                  >\n                    {loading && (\n                      <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                    )}\n                    <span>创建账户</span>\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClaudeManagementPage;","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthStore } from '@/store/authStore';\nimport LoadingSpinner from '@/components/common/LoadingSpinner';\n\ninterface UserWalletStats {\n  summary: {\n    total_users: number;\n    total_user_wallets: number;\n    funded_wallets: number;\n    total_user_balance: number;\n    networks_count: number;\n  };\n  network_distribution: {\n    network: string;\n    wallet_count: number;\n    total_balance: number;\n  }[];\n  users: {\n    user_id: number;\n    email: string;\n    username: string;\n    wallet_count: number;\n    total_balance: number;\n    last_wallet_created: string;\n  }[];\n}\n\ninterface UserWallet {\n  user_id: number;\n  email: string;\n  username: string;\n  wallet_count: number;\n  total_balance: number;\n  last_wallet_created: string;\n  wallets: {\n    [network: string]: {\n      address: string;\n      balance: number;\n      status: string;\n      transaction_count: number;\n      total_received: number;\n      created_at: string;\n    }\n  };\n}\n\ninterface ConsolidationStats {\n  total_wallets_with_funds: number;\n  total_consolidatable_amount: number;\n  pending_consolidation_tasks: number;\n  completed_consolidations_today: number;\n  total_fees_saved: number;\n  network_breakdown: {\n    [network: string]: {\n      wallets_count: number;\n      total_balance: number;\n      consolidation_threshold: number;\n      master_wallet: string;\n    }\n  };\n}\n\ninterface ConsolidationRequest {\n  user_id?: number;\n  min_amount: number;\n  network?: string;\n}\n\nconst WalletManagementPage = () => {\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const [stats, setStats] = useState<UserWalletStats | null>(null);\n  const [consolidationStats, setConsolidationStats] = useState<ConsolidationStats | null>(null);\n  const [users, setUsers] = useState<UserWallet[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'users' | 'consolidation' | 'analytics'>('dashboard');\n\n  // 资金归集表单状态\n  const [consolidationForm, setConsolidationForm] = useState<ConsolidationRequest>({\n    min_amount: 10.0,\n    network: ''\n  });\n  const [consolidating, setConsolidating] = useState(false);\n\n  // 分页状态\n  const [currentPage, setCurrentPage] = useState(1);\n  const [walletsPerPage] = useState(20);\n  const [totalWallets, setTotalWallets] = useState(0);\n\n  // 检查管理员权限\n  useEffect(() => {\n    if (!user) {\n      navigate('/');\n      return;\n    }\n    // 检查用户是否有管理员权限（通过邮箱或用户名判断）\n    const isAdmin = user.email === 'admin@trademe.com' || \n                   user.username === 'admin' || \n                   user.email?.includes('admin');\n    \n    if (!isAdmin) {\n      setError('您没有访问用户钱包管理系统的权限');\n      return;\n    }\n  }, [user, navigate]);\n\n  // 获取用户钱包统计信息\n  const fetchUserWalletStats = async () => {\n    try {\n      const response = await fetch('/api/v1/user-wallets/admin/overview', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          setStats(result.data);\n        } else {\n          throw new Error(result.message || '获取用户钱包统计失败');\n        }\n      } else {\n        throw new Error('获取用户钱包统计失败');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取用户钱包统计失败');\n    }\n  };\n\n  // 获取资金归集统计信息\n  const fetchConsolidationStats = async () => {\n    try {\n      const response = await fetch('/api/v1/fund-consolidation/statistics', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          setConsolidationStats(result.data);\n        }\n      }\n    } catch (err) {\n      console.warn('获取归集统计失败:', err);\n    }\n  };\n\n  // 获取用户列表和详细钱包信息\n  const fetchUserWallets = async () => {\n    try {\n      if (!stats?.users) return;\n      \n      const userWallets = [];\n      \n      // 获取前20个用户的详细钱包信息\n      const usersToFetch = stats.users.slice((currentPage - 1) * walletsPerPage, currentPage * walletsPerPage);\n      \n      for (const user of usersToFetch) {\n        try {\n          const response = await fetch(`/api/v1/user-wallets/admin/user/${user.user_id}/wallets`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n            },\n          });\n          \n          if (response.ok) {\n            const result = await response.json();\n            if (result.success) {\n              userWallets.push({\n                ...user,\n                wallets: result.data.wallets\n              });\n            }\n          }\n        } catch (err) {\n          console.warn(`获取用户 ${user.user_id} 钱包失败:`, err);\n        }\n      }\n      \n      setUsers(userWallets);\n      setTotalWallets(stats.users.length);\n      \n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取用户钱包列表失败');\n    }\n  };\n\n  // 初始数据加载\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await fetchUserWalletStats();\n      await fetchConsolidationStats();\n      setLoading(false);\n    };\n\n    if (token) {\n      loadData();\n    }\n  }, [token]);\n\n  // 加载用户钱包列表\n  useEffect(() => {\n    if (stats && activeTab === 'users') {\n      fetchUserWallets();\n    }\n  }, [stats, currentPage, activeTab]);\n\n  // 发起资金归集\n  const handleStartConsolidation = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setConsolidating(true);\n\n    try {\n      const response = await fetch('/api/v1/fund-consolidation/scan', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success && result.data.length > 0) {\n          // 过滤符合条件的任务\n          const tasksToExecute = result.data\n            .filter((task: any) => {\n              if (consolidationForm.network && task.network !== consolidationForm.network) return false;\n              if (parseFloat(task.amount) < consolidationForm.min_amount) return false;\n              return true;\n            })\n            .slice(0, 10) // 限制最多10个任务\n            .map((task: any) => task.task_id);\n\n          if (tasksToExecute.length > 0) {\n            // 执行归集任务\n            const executeResponse = await fetch('/api/v1/fund-consolidation/execute', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                task_ids: tasksToExecute,\n                strategy: 'THRESHOLD'\n              }),\n            });\n\n            if (executeResponse.ok) {\n              const executeResult = await executeResponse.json();\n              if (executeResult.success) {\n                alert(`成功发起 ${executeResult.data.executed_tasks} 个归集任务`);\n                await fetchConsolidationStats();\n                await fetchUserWalletStats();\n              }\n            }\n          } else {\n            alert('没有符合条件的归集任务');\n          }\n        } else {\n          alert('当前没有可归集的资金');\n        }\n      } else {\n        throw new Error('扫描归集机会失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '发起归集失败');\n    } finally {\n      setConsolidating(false);\n    }\n  };\n\n  // 为用户分配钱包\n  const handleAllocateWalletsForUser = async (userId: number) => {\n    try {\n      const response = await fetch(`/api/v1/user-wallets/admin/user/${userId}/allocate`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          alert(`成功为用户 ${userId} 分配钱包`);\n          await fetchUserWallets();\n        } else {\n          throw new Error(result.message || '分配钱包失败');\n        }\n      } else {\n        throw new Error('分配钱包失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '分配钱包失败');\n    }\n  };\n\n  // 发起单个用户资金归集\n  const handleConsolidateUserFunds = async (userId: number) => {\n    try {\n      const response = await fetch(`/api/v1/user-wallets/consolidate`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ min_amount: 1.0 }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          alert(`成功发起用户 ${userId} 的资金归集`);\n          await fetchUserWallets();\n          await fetchConsolidationStats();\n        } else {\n          throw new Error(result.message || '发起归集失败');\n        }\n      } else {\n        throw new Error('发起归集失败');\n      }\n    } catch (err) {\n      alert(err instanceof Error ? err.message : '发起归集失败');\n    }\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return '无';\n    return new Date(dateString).toLocaleString('zh-CN');\n  };\n\n  // 计算分页\n  const totalPages = Math.ceil(totalWallets / walletsPerPage);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 text-lg mb-4\">⚠️ {error}</div>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            重新加载\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 顶部导航栏 */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-green-600 to-green-700 flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 113 0m-3 0V2.25\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">用户钱包管理中心</h1>\n                <p className=\"text-sm text-gray-600\">用户钱包统计、资金归集和管理系统</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3 px-4 py-2 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 flex items-center justify-center\">\n                  <span className=\"text-green-700 text-sm font-semibold\">{user?.username?.charAt(0).toUpperCase()}</span>\n                </div>\n                <span className=\"text-sm font-medium text-green-700\">管理员: {user?.username}</span>\n              </div>\n              <button\n                onClick={() => navigate('/admin')}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-all duration-200 flex items-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <span>返回控制台</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 标签导航 */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"px-6\">\n          <nav className=\"flex space-x-8\">\n            {[\n              { id: 'dashboard', name: '概览面板', icon: '📊' },\n              { id: 'users', name: '用户钱包', icon: '💰' },\n              { id: 'consolidation', name: '资金归集', icon: '⚡' },\n              { id: 'analytics', name: '数据分析', icon: '📈' },\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors duration-200 ${\n                  activeTab === tab.id\n                    ? 'border-green-500 text-green-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <span className=\"mr-2\">{tab.icon}</span>\n                {tab.name}\n              </button>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* 主要内容 */}\n      <div className=\"p-6\">\n        {/* 概览面板 */}\n        {activeTab === 'dashboard' && stats && (\n          <div className=\"space-y-6\">\n            {/* 统计卡片 */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {/* 总用户数 */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"w-12 h-12 rounded-lg bg-blue-100 flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 113 0m-3 0V2.25\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-3xl font-bold text-gray-900\">{stats.summary.total_users}</p>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-gray-900 font-semibold mb-1\">注册用户</h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    已分配钱包 {stats.summary.total_user_wallets} 个\n                  </p>\n                </div>\n              </div>\n\n              {/* 有资金钱包 */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"w-12 h-12 rounded-lg bg-green-100 flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-3xl font-bold text-gray-900\">{stats.summary.funded_wallets}</p>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-gray-900 font-semibold mb-1\">有资金钱包</h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    占比 {stats.summary.total_user_wallets > 0 ? ((stats.summary.funded_wallets / stats.summary.total_user_wallets) * 100).toFixed(1) : 0}%\n                  </p>\n                </div>\n              </div>\n\n              {/* 用户总余额 */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"w-12 h-12 rounded-lg bg-amber-100 flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-3xl font-bold text-gray-900\">{Number(stats.summary.total_user_balance).toFixed(2)}</p>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-gray-900 font-semibold mb-1\">用户总余额</h3>\n                  <p className=\"text-gray-600 text-sm\">USDT</p>\n                </div>\n              </div>\n\n              {/* 支持网络 */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"w-12 h-12 rounded-lg bg-purple-100 flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-3xl font-bold text-gray-900\">{stats.summary.networks_count}</p>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-gray-900 font-semibold mb-1\">支持网络</h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    多网络支持\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* 网络分布图表 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">网络分布统计</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {stats.network_distribution.map((network) => (\n                  <div key={network.network} className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-semibold text-lg text-gray-900\">{network.network}</h4>\n                    <p className=\"text-2xl font-bold text-blue-600\">{network.wallet_count}</p>\n                    <p className=\"text-sm text-gray-600\">钱包数量</p>\n                    <p className=\"text-lg font-semibold text-green-600 mt-2\">{Number(network.total_balance).toFixed(2)} USDT</p>\n                    <p className=\"text-sm text-gray-600\">总余额</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* 资金归集统计 */}\n            {consolidationStats && (\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">资金归集统计</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                    <h4 className=\"font-semibold text-gray-900\">可归集钱包</h4>\n                    <p className=\"text-2xl font-bold text-blue-600\">{consolidationStats.total_wallets_with_funds}</p>\n                    <p className=\"text-sm text-gray-600\">个钱包有资金</p>\n                  </div>\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                    <h4 className=\"font-semibold text-gray-900\">可归集金额</h4>\n                    <p className=\"text-2xl font-bold text-green-600\">{Number(consolidationStats.total_consolidatable_amount).toFixed(2)}</p>\n                    <p className=\"text-sm text-gray-600\">USDT</p>\n                  </div>\n                  <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                    <h4 className=\"font-semibold text-gray-900\">今日归集</h4>\n                    <p className=\"text-2xl font-bold text-purple-600\">{consolidationStats.completed_consolidations_today}</p>\n                    <p className=\"text-sm text-gray-600\">次归集操作</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* 用户钱包列表 */}\n        {activeTab === 'users' && (\n          <div className=\"space-y-6\">\n            {/* 用户钱包表格 */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  用户钱包列表 (共 {totalWallets} 个用户)\n                </h3>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        用户信息\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        钱包统计\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        钱包地址\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        操作\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {users.map((user) => (\n                      <tr key={user.user_id} className=\"hover:bg-gray-50 transition-colors duration-200\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div>\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {user.username} (ID: {user.user_id})\n                            </div>\n                            <div className=\"text-sm text-gray-500\">\n                              {user.email}\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">\n                            钱包数: {user.wallet_count}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            总余额: {user.total_balance.toFixed(2)} USDT\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            创建时间: {formatDate(user.last_wallet_created)}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <div className=\"space-y-2\">\n                            {user.wallets && Object.entries(user.wallets).map(([network, wallet]) => (\n                              <div key={network} className=\"text-sm\">\n                                <div className=\"flex items-center space-x-2\">\n                                  <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded bg-gray-100 text-gray-700\">\n                                    {network}\n                                  </span>\n                                  <span className=\"font-mono text-xs text-gray-600\">\n                                    {wallet.address.substring(0, 8)}...{wallet.address.substring(wallet.address.length - 6)}\n                                  </span>\n                                </div>\n                                <div className=\"text-xs text-gray-500 ml-2\">\n                                  余额: {wallet.balance.toFixed(2)} USDT\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex space-x-2\">\n                            {user.wallet_count === 0 && (\n                              <button\n                                onClick={() => handleAllocateWalletsForUser(user.user_id)}\n                                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                              >\n                                分配钱包\n                              </button>\n                            )}\n                            {user.total_balance > 0 && (\n                              <button\n                                onClick={() => handleConsolidateUserFunds(user.user_id)}\n                                className=\"text-green-600 hover:text-green-800 text-sm font-medium\"\n                              >\n                                归集资金\n                              </button>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n              \n              {/* 分页 */}\n              {totalPages > 1 && (\n                <div className=\"px-6 py-4 border-t border-gray-200\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"text-sm text-gray-700\">\n                      显示第 {(currentPage - 1) * walletsPerPage + 1} 到{' '}\n                      {Math.min(currentPage * walletsPerPage, totalWallets)} 个，共 {totalWallets} 个用户\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <button\n                        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                        disabled={currentPage === 1}\n                        className=\"px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-200\"\n                      >\n                        上一页\n                      </button>\n                      <span className=\"px-3 py-1 text-sm bg-green-100 text-green-700 rounded\">\n                        第 {currentPage} / {totalPages} 页\n                      </span>\n                      <button\n                        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                        disabled={currentPage === totalPages}\n                        className=\"px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-200\"\n                      >\n                        下一页\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* 资金归集标签页 */}\n        {activeTab === 'consolidation' && (\n          <div className=\"space-y-6\">\n            {/* 资金归集控制面板 */}\n            <div className=\"bg-white rounded-xl p-8 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 rounded-lg bg-green-100 flex items-center justify-center\">\n                  <span className=\"text-2xl\">⚡</span>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-semibold text-gray-900\">资金归集控制</h3>\n                  <p className=\"text-gray-600\">自动扫描用户钱包并归集资金到主钱包</p>\n                </div>\n              </div>\n\n              <form onSubmit={handleStartConsolidation} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      最小归集金额 <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"0.1\"\n                      max=\"10000\"\n                      step=\"0.1\"\n                      value={consolidationForm.min_amount}\n                      onChange={(e) => setConsolidationForm(prev => ({ ...prev, min_amount: parseFloat(e.target.value) }))}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n                      placeholder=\"最小归集金额 (USDT)\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      网络类型筛选\n                    </label>\n                    <select\n                      value={consolidationForm.network}\n                      onChange={(e) => setConsolidationForm(prev => ({ ...prev, network: e.target.value }))}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n                    >\n                      <option value=\"\">所有网络</option>\n                      <option value=\"TRC20\">TRC20 (Tron)</option>\n                      <option value=\"ERC20\">ERC20 (Ethereum)</option>\n                      <option value=\"BEP20\">BEP20 (Binance Smart Chain)</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <div className=\"flex items-start\">\n                    <svg className=\"w-5 h-5 text-blue-400 mt-0.5 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-blue-800\">归集说明</h4>\n                      <div className=\"mt-2 text-sm text-blue-700\">\n                        <ul className=\"list-disc list-inside space-y-1\">\n                          <li>系统将自动扫描所有用户钱包的资金情况</li>\n                          <li>只有达到最小金额阈值的钱包才会被归集</li>\n                          <li>归集过程中会自动预留手续费</li>\n                          <li>归集任务将在后台异步执行</li>\n                          <li>单次最多执行10个归集任务</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  disabled={consolidating}\n                  className=\"w-full px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 font-medium\"\n                >\n                  {consolidating ? (\n                    <div className=\"flex items-center justify-center space-x-2\">\n                      <svg className=\"w-5 h-5 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                      </svg>\n                      <span>扫描并执行归集中...</span>\n                    </div>\n                  ) : (\n                    '开始资金归集'\n                  )}\n                </button>\n              </form>\n            </div>\n\n            {/* 归集规则展示 */}\n            {consolidationStats && (\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">归集规则配置</h3>\n                <div className=\"space-y-4\">\n                  {Object.entries(consolidationStats.network_breakdown).map(([network, config]) => (\n                    <div key={network} className=\"border border-gray-200 rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-gray-900\">{network} 网络</h4>\n                        <span className=\"text-sm text-gray-500\">\n                          {config.wallets_count} 个钱包有资金\n                        </span>\n                      </div>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                        <div>\n                          <span className=\"text-gray-600\">总余额:</span>\n                          <span className=\"font-medium ml-1\">{Number(config.total_balance).toFixed(2)} USDT</span>\n                        </div>\n                        <div>\n                          <span className=\"text-gray-600\">归集阈值:</span>\n                          <span className=\"font-medium ml-1\">{Number(config.consolidation_threshold).toFixed(2)} USDT</span>\n                        </div>\n                        <div className=\"md:col-span-2\">\n                          <span className=\"text-gray-600\">主钱包:</span>\n                          <span className=\"font-mono text-xs ml-1\">{config.master_wallet || '未配置'}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WalletManagementPage;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthStore } from '@/store/authStore';\nimport LoadingSpinner from '@/components/common/LoadingSpinner';\n\n// 数据可用性接口\ninterface DataAvailability {\n  exchange?: string;\n  symbol: string;\n  timeframe?: string;\n  start_date?: string;\n  end_date?: string;\n  total_records?: number;\n  missing_periods?: string[];\n  completeness_percent?: number;\n  // 新增查询API返回字段\n  record_count?: number;\n  timeframes_count?: number;\n  earliest_date?: string;\n  latest_date?: string;\n}\n\n// OKX统计信息接口\ninterface OKXStatistics {\n  download_statistics: {\n    total_downloads: number;\n    successful_downloads: number;\n    failed_downloads: number;\n    total_files_processed: number;\n    total_records_downloaded: number;\n  };\n  supported_symbols: {\n    tick_data: string[];\n    kline_data: string[];\n  };\n  supported_timeframes: string[];\n}\n\ninterface DataStats {\n  kline_statistics: Array<{\n    exchange: string;\n    symbol_count: number;\n    timeframe_count: number;\n    total_records: number;\n  }>;\n}\n\ninterface OKXDownloadRequest {\n  data_type: 'kline' | 'tick';\n  market_type: 'spot' | 'futures';\n  symbols: string[];\n  timeframes: string[];\n  start_date: string;\n  end_date: string;\n  custom_symbol?: string;\n}\n\ninterface OKXDownloadTask {\n  task_id: string;\n  data_type: 'tick' | 'kline';\n  exchange: string;\n  symbols: string[];\n  date_range: string;\n  status: 'pending' | 'running' | 'completed' | 'failed';\n  progress: number;\n  total_files: number;\n  processed_files: number;\n  downloaded_records: number;\n  created_at: string;\n  started_at: string | null;\n  completed_at: string | null;\n  error_message: string;\n  timeframes?: string[];\n}\n\n// 质量监控接口\ninterface QualityMetrics {\n  completeness: {\n    kline_completeness: number;\n    tick_completeness: number;\n    missing_dates: string[];\n  };\n  accuracy: {\n    price_anomalies: number;\n    volume_anomalies: number;\n  };\n}\n\ninterface MissingDataRecord {\n  symbol: string;\n  data_type: string;\n  timeframe: string;\n  missing_period: string;\n  missing_count: number;\n  severity: 'critical' | 'warning';\n}\n\nconst DataManagementPageReal = () => {\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const [stats, setStats] = useState<DataStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'overview' | 'okx-download' | 'quality'>('overview');\n  \n  // OKX数据下载状态  \n  const [okxDownloadType, setOkxDownloadType] = useState<'tick' | 'kline'>('kline');\n  const [marketType, setMarketType] = useState<'spot' | 'futures'>('spot');\n  const [customSymbol, setCustomSymbol] = useState('');\n  const [selectedSymbols, setSelectedSymbols] = useState<string[]>(['BTC/USDT']);\n  const [okxTasks, setOkxTasks] = useState<OKXDownloadTask[]>([]);\n  const [okxDownloading, setOkxDownloading] = useState(false);\n  \n  // 安全的日期初始化\n  const [startDate, setStartDate] = useState<string>(() => {\n    try {\n      return new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().substring(0, 10);\n    } catch {\n      return '2025-08-24';\n    }\n  });\n  const [endDate, setEndDate] = useState<string>(() => {\n    try {\n      return new Date().toISOString().substring(0, 10);\n    } catch {\n      return '2025-08-31';\n    }\n  });\n\n  // 真实数据状态\n  const [dataAvailability, setDataAvailability] = useState<DataAvailability[]>([]);\n  const [dataSummary, setDataSummary] = useState<any>(null); // 查询数据统计摘要\n  const [okxStatistics, setOKXStatistics] = useState<OKXStatistics | null>(null);\n  const [loadingOverview, setLoadingOverview] = useState(false);\n\n  // 质量监控状态\n  const [qualityMetrics, setQualityMetrics] = useState<QualityMetrics | null>(null);\n  const [missingData, setMissingData] = useState<MissingDataRecord[]>([]);\n  const [checkingQuality, setCheckingQuality] = useState(false);\n\n  // 新的交易对配置\n  const getSymbolsByMarketType = (marketType: 'spot' | 'futures', dataType: 'kline' | 'tick') => {\n    if (marketType === 'spot') {\n      if (dataType === 'tick') {\n        return ['BTC', 'ETH', 'LTC', 'XRP', 'BCH', 'SOL', 'ADA', 'AVAX', 'MATIC', 'DOGE'];\n      } else {\n        return ['BTC/USDT', 'ETH/USDT', 'SOL/USDT', 'ADA/USDT', 'DOT/USDT', 'LINK/USDT', 'MATIC/USDT', 'AVAX/USDT', 'XRP/USDT', 'DOGE/USDT'];\n      }\n    } else {\n      if (dataType === 'tick') {\n        return ['BTC', 'ETH', 'LTC', 'XRP', 'BCH', 'SOL', 'ADA', 'AVAX'];\n      } else {\n        return ['BTC-USDT-SWAP', 'ETH-USDT-SWAP', 'SOL-USDT-SWAP', 'ADA-USDT-SWAP', 'DOT-USDT-SWAP', 'LINK-USDT-SWAP'];\n      }\n    }\n  };\n\n  const okxTimeframes = ['1m', '5m', '15m', '30m', '1h', '2h', '4h', '1d', '1w'];\n\n  // 检查管理员权限\n  useEffect(() => {\n    if (!token || !user) {\n      navigate('/login');\n      return;\n    }\n\n    if (user.membership_level !== 'professional') {\n      setError('需要专业版权限才能访问数据管理中心');\n      setLoading(false);\n      return;\n    }\n  }, [token, user, navigate]);\n\n  // 获取数据统计\n  const fetchDataStats = async () => {\n    try {\n      const response = await fetch('/api/v1/data/storage/stats', {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setStats(result.data);\n      } else {\n        throw new Error(result.detail || '数据获取失败');\n      }\n      \n      setLoading(false);\n    } catch (error) {\n      console.error('获取数据统计失败:', error);\n      setError(error instanceof Error ? error.message : '数据获取失败');\n      setLoading(false);\n    }\n  };\n\n  // 获取OKX统计信息\n  const fetchOKXStatistics = async () => {\n    try {\n      const response = await fetch('/api/v1/data/okx/statistics', {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      \n      const result = await response.json();\n      if (result.success) {\n        setOKXStatistics(result.data);\n      }\n    } catch (error) {\n      console.error('获取OKX统计失败:', error);\n    }\n  };\n\n  // 获取数据可用性信息 - 修复版本，使用相对路径避免跨域问题\n  const fetchDataAvailability = async () => {\n    setLoadingOverview(true);\n    try {\n      // 使用相对路径，通过nginx代理到后端\n      const apiUrl = `/api/v1/data/query?data_type=kline&exchange=okx&symbol=BTC-USDT-SWAP`;\n      \n      const response = await fetch(apiUrl, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`数据查询失败: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      if (result.success && result.data.query_result) {\n        // 转换查询结果为显示格式，现在返回的已经是详细的timeframe数据\n        const converted = result.data.query_result.map((item: any) => ({\n          exchange: 'OKX',\n          symbol: item.symbol,\n          timeframe: item.timeframe,\n          record_count: item.record_count,\n          earliest_date: item.start_date,\n          latest_date: item.end_date,\n          timeframes_count: 1\n        }));\n        setDataAvailability(converted);\n      } else {\n        setDataAvailability([]);\n      }\n      \n    } catch (error) {\n      console.error('获取数据可用性失败:', error);\n      setDataAvailability([]);\n    } finally {\n      setLoadingOverview(false);\n    }\n  };\n\n  // 获取OKX任务列表\n  const fetchOkxTasks = async () => {\n    try {\n      const response = await fetch('/api/v1/data/okx/tasks', {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      \n      const result = await response.json();\n      if (result.success && Array.isArray(result.data)) {\n        setOkxTasks(result.data);\n      } else {\n        console.warn('OKX tasks data is not an array:', result.data);\n        setOkxTasks([]);\n      }\n    } catch (error) {\n      console.error('获取OKX任务列表失败:', error);\n    }\n  };\n\n  // 启动OKX数据下载\n  const startOkxDownload = async () => {\n    if (!Array.isArray(selectedSymbols) || selectedSymbols.length === 0) {\n      alert('请选择至少一个交易对');\n      return;\n    }\n\n    setOkxDownloading(true);\n    try {\n      const endpoint = okxDownloadType === 'tick' \n        ? '/api/v1/data/okx/tick/download' \n        : '/api/v1/data/okx/kline/download';\n\n      // 安全的日期格式化函数\n      const formatDate = (date: string) => {\n        try {\n          if (typeof date !== 'string' || !date) {\n            return new Date().toISOString().substring(0, 10).replace(/-/g, '');\n          }\n          return date.replace(/-/g, '');\n        } catch (error) {\n          console.error('Date formatting error:', error);\n          return '20250831';\n        }\n      };\n      \n      const requestBody = okxDownloadType === 'tick' \n        ? {\n            symbols: selectedSymbols.filter(s => typeof s === 'string' && s.length > 0),\n            start_date: formatDate(startDate),\n            end_date: formatDate(endDate)\n          }\n        : {\n            symbols: selectedSymbols.filter(s => typeof s === 'string' && s.length > 0),\n            timeframes: okxTimeframes,\n            start_date: formatDate(startDate),\n            end_date: formatDate(endDate)\n          };\n\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(requestBody)\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        alert(`OKX ${okxDownloadType === 'tick' ? 'Tick' : 'K线'}数据下载任务已启动！任务ID: ${result.data.task_id}`);\n        await fetchOkxTasks();\n      } else {\n        throw new Error(result.detail || '下载启动失败');\n      }\n    } catch (error) {\n      alert(error instanceof Error ? error.message : 'OKX下载启动失败');\n    } finally {\n      setOkxDownloading(false);\n    }\n  };\n\n  // 数据质量检查 - 使用真实API\n  const runQualityCheck = async () => {\n    setCheckingQuality(true);\n    try {\n      const symbols = ['BTC/USDT', 'ETH/USDT', 'SOL/USDT'];\n      const timeframes = ['1h', '1d'];\n      const checkDays = 7;\n      \n      const qualityPromises = [];\n      let allMissingData: MissingDataRecord[] = [];\n      \n      for (const symbol of symbols) {\n        for (const timeframe of timeframes) {\n          qualityPromises.push(\n            fetch(`/api/v1/data/quality/check/okx/${symbol}/${timeframe}?check_days=${checkDays}`, {\n              headers: { 'Authorization': `Bearer ${token}` }\n            }).then(res => res.json()).then(result => {\n              if (result.success && result.data) {\n                // 收集缺失数据\n                if (result.data.missing_periods && result.data.missing_periods.length > 0) {\n                  result.data.missing_periods.forEach((period: any) => {\n                    allMissingData.push({\n                      symbol,\n                      data_type: 'K线',\n                      timeframe,\n                      missing_period: period.period || period,\n                      missing_count: period.count || 0,\n                      severity: period.count > 100 ? 'critical' : 'warning'\n                    });\n                  });\n                }\n                return result.data;\n              }\n              return null;\n            }).catch(() => null)\n          );\n        }\n      }\n      \n      const results = await Promise.all(qualityPromises);\n      const validResults = results.filter(r => r !== null);\n      \n      if (validResults.length > 0) {\n        // 计算总体完整性\n        const totalChecked = validResults.length;\n        const completeResults = validResults.filter(r => r.completeness_percent >= 95).length;\n        const overallCompleteness = totalChecked > 0 ? (completeResults / totalChecked) * 100 : 0;\n        \n        setQualityMetrics({\n          completeness: {\n            kline_completeness: overallCompleteness,\n            tick_completeness: 0, // Tick数据需要单独检查\n            missing_dates: []\n          },\n          accuracy: {\n            price_anomalies: validResults.reduce((sum, r) => sum + (r.anomalies?.price_anomalies || 0), 0),\n            volume_anomalies: validResults.reduce((sum, r) => sum + (r.anomalies?.volume_anomalies || 0), 0)\n          }\n        });\n      } else {\n        // 如果没有返回数据，使用默认值\n        setQualityMetrics({\n          completeness: {\n            kline_completeness: 0,\n            tick_completeness: 0,\n            missing_dates: []\n          },\n          accuracy: {\n            price_anomalies: 0,\n            volume_anomalies: 0\n          }\n        });\n      }\n      \n      setMissingData(allMissingData);\n      \n    } catch (error) {\n      console.error('质量检查失败:', error);\n      alert('质量检查失败: ' + (error instanceof Error ? error.message : '未知错误'));\n    } finally {\n      setCheckingQuality(false);\n    }\n  };\n\n  // 当进入概览页面时自动加载数据\n  useEffect(() => {\n    if (activeTab === 'overview' && token) {\n      fetchOKXStatistics();\n      fetchDataAvailability();\n    }\n  }, [activeTab, token]);\n\n  // 组件挂载时获取数据\n  useEffect(() => {\n    if (token && user) {\n      fetchDataStats();\n      fetchOkxTasks();\n    }\n  }, [token, user]);\n\n  // 定期刷新OKX任务状态\n  useEffect(() => {\n    if (activeTab === 'okx-download') {\n      const interval = setInterval(fetchOkxTasks, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [activeTab, token]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 text-lg mb-4\">⚠️ {error}</div>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            重新加载\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 顶部导航栏 */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-r from-blue-600 to-blue-700 flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">数据管理中心</h1>\n                <p className=\"text-sm text-gray-600\">完全集成后端API的数据管理系统</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3 px-4 py-2 bg-blue-50 rounded-lg border border-blue-200\">\n                <div className=\"w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center\">\n                  <span className=\"text-blue-700 text-sm font-semibold\">{user?.username?.charAt(0).toUpperCase()}</span>\n                </div>\n                <span className=\"text-sm font-medium text-blue-700\">管理员: {user?.username}</span>\n              </div>\n              <button\n                onClick={() => navigate('/admin')}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-all duration-200 flex items-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <span>返回控制台</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 标签导航 */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"px-6\">\n          <nav className=\"flex space-x-8\">\n            {[\n              { id: 'overview', name: '数据概览', icon: '📊' },\n              { id: 'okx-download', name: 'OKX数据下载', icon: '🚀' },\n              { id: 'quality', name: '质量监控', icon: '🔍' },\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors duration-200 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <span className=\"mr-2\">{tab.icon}</span>\n                {tab.name}\n              </button>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* 主要内容 */}\n      <div className=\"p-6\">\n        {/* 数据概览 - 使用真实API */}\n        {activeTab === 'overview' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">真实API数据统计概览</h2>\n              <button\n                onClick={() => {\n                  fetchDataStats();\n                  fetchOKXStatistics();\n                  fetchDataAvailability();\n                }}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 flex items-center space-x-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n                <span>刷新数据</span>\n              </button>\n            </div>\n\n            {/* 数据库现有数据概览 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">数据库真实数据概览</h3>\n              <p className=\"text-sm text-gray-600 mb-6\">显示我们后台现有的所有数据，按交易所、数据类型、市场类型分组</p>\n              \n              {/* 加载状态 */}\n              {loadingOverview ? (\n                <div className=\"flex justify-center items-center py-8\">\n                  <svg className=\"animate-spin h-8 w-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  <span className=\"ml-2 text-gray-600\">加载数据中...</span>\n                </div>\n              ) : (\n                <div className=\"space-y-6\">\n                  {/* OKX 统计信息 */}\n                  {okxStatistics && (\n                    <div className=\"border border-gray-200 rounded-lg p-4\">\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n                          <span className=\"text-blue-600 font-bold text-sm\">OKX</span>\n                        </div>\n                        <h4 className=\"text-lg font-semibold text-gray-900\">OKX 交易所数据统计</h4>\n                      </div>\n\n                      {/* 下载统计 */}\n                      <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 mb-4\">\n                        <h5 className=\"font-semibold text-gray-800 mb-3\">📊 下载统计</h5>\n                        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-blue-600\">{okxStatistics.download_statistics.total_downloads}</div>\n                            <div className=\"text-sm text-gray-600\">总下载次数</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-green-600\">{okxStatistics.download_statistics.successful_downloads}</div>\n                            <div className=\"text-sm text-gray-600\">成功下载</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-red-600\">{okxStatistics.download_statistics.failed_downloads}</div>\n                            <div className=\"text-sm text-gray-600\">失败次数</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-purple-600\">{okxStatistics.download_statistics.total_files_processed}</div>\n                            <div className=\"text-sm text-gray-600\">处理文件数</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-orange-600\">{(okxStatistics.download_statistics.total_records_downloaded / 1000000).toFixed(1)}M</div>\n                            <div className=\"text-sm text-gray-600\">下载记录数</div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* 支持的交易对 */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                          <h5 className=\"font-semibold text-blue-800 mb-2\">📈 K线数据支持的交易对</h5>\n                          <div className=\"text-sm\">\n                            <div className=\"mb-1\">总计: <span className=\"font-medium text-blue-700\">{okxStatistics.supported_symbols.kline_data.length}个</span></div>\n                            <div className=\"text-gray-600 max-h-20 overflow-y-auto\">\n                              {okxStatistics.supported_symbols.kline_data.slice(0, 10).join(', ')}\n                              {okxStatistics.supported_symbols.kline_data.length > 10 && '...'}\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                          <h5 className=\"font-semibold text-green-800 mb-2\">⚡ Tick数据支持的交易对</h5>\n                          <div className=\"text-sm\">\n                            <div className=\"mb-1\">总计: <span className=\"font-medium text-green-700\">{okxStatistics.supported_symbols.tick_data.length}个</span></div>\n                            <div className=\"text-gray-600 max-h-20 overflow-y-auto\">\n                              {okxStatistics.supported_symbols.tick_data.slice(0, 10).join(', ')}\n                              {okxStatistics.supported_symbols.tick_data.length > 10 && '...'}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* 支持的时间框架 */}\n                      <div className=\"mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                        <h5 className=\"font-semibold text-yellow-800 mb-2\">⏰ 支持的时间框架</h5>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {okxStatistics.supported_timeframes.map(tf => (\n                            <span key={tf} className=\"px-2 py-1 bg-yellow-200 text-yellow-800 rounded text-sm font-medium\">\n                              {tf}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n\n                  {/* 数据加载提示 */}\n                  {!okxStatistics && !loadingOverview && (\n                    <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-8 text-center\">\n                      <div className=\"text-4xl mb-4\">📊</div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">数据统计信息</h3>\n                      <p className=\"text-gray-600 mb-4\">请点击上方\"刷新数据\"按钮加载最新数据</p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* 数据查询面板 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">🔍 数据查询工具</h3>\n              <p className=\"text-sm text-gray-600 mb-6\">查询数据库中的真实数据情况，了解具体的数据日期范围</p>\n              \n              {/* 查询选择器 */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">数据类型</label>\n                  <select \n                    value={okxDownloadType}\n                    onChange={(e) => setOkxDownloadType(e.target.value as 'tick' | 'kline')}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"kline\">K线数据</option>\n                    <option value=\"tick\">Tick数据</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">市场类型</label>\n                  <select \n                    value={marketType}\n                    onChange={(e) => setMarketType(e.target.value as 'spot' | 'futures')}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"spot\">现货市场</option>\n                    <option value=\"futures\">合约市场</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">交易对</label>\n                  <select \n                    value={selectedSymbols[0] || ''}\n                    onChange={(e) => setSelectedSymbols(e.target.value ? [e.target.value] : [])}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">全部</option>\n                    {getSymbolsByMarketType(marketType, okxDownloadType).map(symbol => (\n                      <option key={symbol} value={symbol}>{symbol}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <button\n                  onClick={async () => {\n                    setLoadingOverview(true);\n                    try {\n                      const symbol = selectedSymbols[0] || null;\n                      const apiUrl = symbol \n                        ? `/api/v1/data/query?data_type=${okxDownloadType}&exchange=okx&symbol=${encodeURIComponent(symbol)}`\n                        : `/api/v1/data/query?data_type=${okxDownloadType}&exchange=okx`;\n                      \n                      // 正确获取token\n                      const authData = localStorage.getItem('auth-storage');\n                      const token = authData ? JSON.parse(authData).state.token : null;\n                      \n                      if (!token) {\n                        throw new Error('未找到认证令牌，请重新登录');\n                      }\n                      \n                      const response = await fetch(apiUrl, {\n                        headers: {\n                          'Authorization': `Bearer ${token}`,\n                          'Content-Type': 'application/json'\n                        }\n                      });\n\n                      if (!response.ok) {\n                        throw new Error(`HTTP错误: ${response.status}`);\n                      }\n\n                      const result = await response.json();\n                      if (result.success) {\n                        setDataAvailability(result.data.query_result || []);\n                        setDataSummary(result.data.summary || null);\n                      } else {\n                        console.error('查询失败:', result);\n                      }\n                    } catch (error) {\n                      console.error('查询数据失败:', error);\n                    } finally {\n                      setLoadingOverview(false);\n                    }\n                  }}\n                  disabled={loadingOverview}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 transition-colors duration-200 flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                  <span>查询数据</span>\n                </button>\n\n                <button\n                  onClick={() => {\n                    setDataAvailability([]);\n                  }}\n                  className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200\"\n                >\n                  清除结果\n                </button>\n              </div>\n\n              {/* 查询结果 */}\n              {loadingOverview && (\n                <div className=\"flex justify-center items-center py-8\">\n                  <svg className=\"animate-spin h-8 w-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  <span className=\"ml-2 text-gray-600\">查询中...</span>\n                </div>\n              )}\n\n              {dataAvailability.length > 0 && !loadingOverview && (\n                <div className=\"border border-gray-200 rounded-lg p-4\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">📊 查询结果</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {dataAvailability.map((data, index) => (\n                      <div key={index} className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <h5 className=\"font-semibold text-gray-800\">{data.symbol}</h5>\n                          {data.timeframe && (\n                            <span className=\"text-sm text-blue-600 bg-blue-100 px-2 py-1 rounded\">{data.timeframe}</span>\n                          )}\n                        </div>\n                        <div className=\"space-y-1 text-sm\">\n                          {data.start_date && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">开始日期:</span>\n                              <span className=\"font-medium\">{new Date(data.start_date).toLocaleDateString()}</span>\n                            </div>\n                          )}\n                          {data.end_date && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">结束日期:</span>\n                              <span className=\"font-medium\">{new Date(data.end_date).toLocaleDateString()}</span>\n                            </div>\n                          )}\n                          {data.record_count && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">记录数:</span>\n                              <span className=\"font-medium text-blue-600\">{data.record_count.toLocaleString()}</span>\n                            </div>\n                          )}\n                          {data.total_records && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">总记录:</span>\n                              <span className=\"font-medium text-green-600\">{data.total_records.toLocaleString()}</span>\n                            </div>\n                          )}\n                          {data.timeframes_count && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">时间框架数:</span>\n                              <span className=\"font-medium text-purple-600\">{data.timeframes_count}</span>\n                            </div>\n                          )}\n                          {data.earliest_date && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">最早数据:</span>\n                              <span className=\"font-medium\">{new Date(data.earliest_date).toLocaleDateString()}</span>\n                            </div>\n                          )}\n                          {data.latest_date && (\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600\">最新数据:</span>\n                              <span className=\"font-medium\">{new Date(data.latest_date).toLocaleDateString()}</span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* 统计摘要显示 */}\n              {dataSummary && !loadingOverview && (\n                <div className=\"bg-gradient-to-r from-blue-50 to-green-50 border border-blue-200 rounded-lg p-6 mt-4\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">📈 数据统计摘要</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n                    {dataSummary.total_records && (\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-blue-600\">{dataSummary.total_records.toLocaleString()}</div>\n                        <div className=\"text-sm text-gray-600\">总记录数</div>\n                      </div>\n                    )}\n                    {dataSummary.data_completeness_percent !== undefined && (\n                      <div className=\"text-center\">\n                        <div className={`text-2xl font-bold ${dataSummary.data_completeness_percent >= 95 ? 'text-green-600' : 'text-yellow-600'}`}>\n                          {dataSummary.data_completeness_percent}%\n                        </div>\n                        <div className=\"text-sm text-gray-600\">数据完整度</div>\n                      </div>\n                    )}\n                    {dataSummary.timeframes_available && (\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-purple-600\">{dataSummary.timeframes_available}</div>\n                        <div className=\"text-sm text-gray-600\">时间框架</div>\n                      </div>\n                    )}\n                    {dataSummary.days_span && (\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-orange-600\">{dataSummary.days_span}</div>\n                        <div className=\"text-sm text-gray-600\">天数跨度</div>\n                      </div>\n                    )}\n                    {dataSummary.earliest_date && (\n                      <div className=\"text-center\">\n                        <div className=\"text-sm font-medium text-gray-800\">{new Date(dataSummary.earliest_date).toLocaleDateString()}</div>\n                        <div className=\"text-sm text-gray-600\">最早日期</div>\n                      </div>\n                    )}\n                    {dataSummary.latest_date && (\n                      <div className=\"text-center\">\n                        <div className=\"text-sm font-medium text-gray-800\">{new Date(dataSummary.latest_date).toLocaleDateString()}</div>\n                        <div className=\"text-sm text-gray-600\">最新日期</div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {!loadingOverview && dataAvailability.length === 0 && (\n                <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-8 text-center\">\n                  <div className=\"text-4xl mb-4\">📊</div>\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">暂无查询结果</h4>\n                  <p className=\"text-gray-600\">请点击\"查询数据\"按钮来查看数据库中的真实数据情况</p>\n                </div>\n              )}\n            </div>\n\n          </div>\n        )}\n\n        {/* OKX数据下载保持原样 */}\n        {activeTab === 'okx-download' && (\n          <div className=\"space-y-6\">\n            {/* 数据类型选择 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">OKX 数据下载中心</h2>\n              \n              <div className=\"space-y-6\">\n                {/* 数据类型选择 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-3\">数据类型</label>\n                  <div className=\"flex space-x-4\">\n                    <button \n                      onClick={() => setOkxDownloadType('kline')}\n                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                        okxDownloadType === 'kline' \n                          ? 'bg-blue-600 text-white shadow-md' \n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      📈 K线数据\n                    </button>\n                    <button \n                      onClick={() => setOkxDownloadType('tick')}\n                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                        okxDownloadType === 'tick' \n                          ? 'bg-blue-600 text-white shadow-md' \n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      ⚡ Tick数据\n                    </button>\n                  </div>\n                </div>\n\n                {/* 市场类型选择 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-3\">市场类型</label>\n                  <div className=\"flex space-x-4\">\n                    <button \n                      onClick={() => setMarketType('spot')}\n                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                        marketType === 'spot' \n                          ? 'bg-green-600 text-white shadow-md' \n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      💰 现货市场\n                    </button>\n                    <button \n                      onClick={() => setMarketType('futures')}\n                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                        marketType === 'futures' \n                          ? 'bg-orange-600 text-white shadow-md' \n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      📈 合约市场 (永续)\n                    </button>\n                  </div>\n                </div>\n\n                {/* 交易对选择 */}\n                <div>\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <label className=\"text-sm font-medium text-gray-700\">交易对选择</label>\n                    <button \n                      onClick={() => {\n                        try {\n                          const symbols = getSymbolsByMarketType(marketType, okxDownloadType);\n                          if (Array.isArray(symbols)) {\n                            setSelectedSymbols(symbols);\n                          }\n                        } catch (error) {\n                          console.error('Error selecting all symbols:', error);\n                          setSelectedSymbols([]);\n                        }\n                      }}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                    >\n                      全选所有\n                    </button>\n                  </div>\n                  \n                  {/* 交易对网格 */}\n                  <div className=\"grid grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-2 mb-4\">\n                    {getSymbolsByMarketType(marketType, okxDownloadType).map(symbol => (\n                      <label key={symbol} className=\"flex items-center space-x-2 p-2 border rounded cursor-pointer hover:bg-gray-50\">\n                        <input \n                          type=\"checkbox\" \n                          checked={Array.isArray(selectedSymbols) && selectedSymbols.includes(symbol)}\n                          onChange={(e) => {\n                            if (!Array.isArray(selectedSymbols)) {\n                              setSelectedSymbols([]);\n                              return;\n                            }\n                            if (e.target.checked) {\n                              setSelectedSymbols([...selectedSymbols, symbol]);\n                            } else {\n                              setSelectedSymbols(selectedSymbols.filter(s => s !== symbol));\n                            }\n                          }}\n                          className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                        />\n                        <span className=\"text-sm font-medium text-gray-700\">{symbol}</span>\n                      </label>\n                    ))}\n                  </div>\n\n                  {/* 自定义交易对输入 */}\n                  <div className=\"flex items-center space-x-2\">\n                    <input \n                      type=\"text\" \n                      value={customSymbol}\n                      onChange={(e) => setCustomSymbol(e.target.value)}\n                      placeholder={marketType === 'spot' \n                        ? (okxDownloadType === 'tick' ? \"输入现货Tick交易对 (如: DOGE)\" : \"输入现货K线交易对 (如: DOGE/USDT)\") \n                        : (okxDownloadType === 'tick' ? \"输入合约Tick交易对 (如: DOGE)\" : \"输入合约K线交易对 (如: DOGE-USDT-SWAP)\")}\n                      className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <button \n                      onClick={() => {\n                        if (customSymbol && customSymbol.trim() && Array.isArray(selectedSymbols) && !selectedSymbols.includes(customSymbol.trim())) {\n                          setSelectedSymbols([...selectedSymbols, customSymbol.trim()]);\n                          setCustomSymbol('');\n                        }\n                      }}\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n                    >\n                      添加\n                    </button>\n                  </div>\n\n                  {/* 已选交易对显示 */}\n                  <div className=\"mt-3\">\n                    <div className=\"text-sm text-gray-600 mb-2\">已选择 {Array.isArray(selectedSymbols) ? selectedSymbols.length : 0} 个交易对：</div>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {Array.isArray(selectedSymbols) && selectedSymbols.map(symbol => (\n                        <span key={symbol} className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm flex items-center space-x-1\">\n                          <span>{symbol}</span>\n                          <button \n                            onClick={() => {\n                              if (Array.isArray(selectedSymbols)) {\n                                setSelectedSymbols(selectedSymbols.filter(s => s !== symbol));\n                              }\n                            }}\n                            className=\"text-blue-600 hover:text-blue-800\"\n                          >\n                            ×\n                          </button>\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                {/* 时间范围选择 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-3\">时间范围选择</label>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-600 mb-1\">开始日期</label>\n                      <input \n                        type=\"date\" \n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-600 mb-1\">结束日期</label>\n                      <input \n                        type=\"date\" \n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between mt-3\">\n                    <div className=\"text-sm text-gray-600\">\n                      选择的时间范围: {startDate} 到 {endDate}\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <button \n                        onClick={() => {\n                          const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().substring(0, 10);\n                          const today = new Date().toISOString().substring(0, 10);\n                          setStartDate(sevenDaysAgo);\n                          setEndDate(today);\n                        }}\n                        className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded text-sm hover:bg-gray-200 transition-colors\"\n                      >\n                        最近7天\n                      </button>\n                      <button \n                        onClick={() => {\n                          const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().substring(0, 10);\n                          const today = new Date().toISOString().substring(0, 10);\n                          setStartDate(thirtyDaysAgo);\n                          setEndDate(today);\n                        }}\n                        className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded text-sm hover:bg-gray-200 transition-colors\"\n                      >\n                        最近30天\n                      </button>\n                      <button \n                        onClick={() => {\n                          const threeMonthsAgo = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString().substring(0, 10);\n                          const today = new Date().toISOString().substring(0, 10);\n                          setStartDate(threeMonthsAgo);\n                          setEndDate(today);\n                        }}\n                        className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded text-sm hover:bg-gray-200 transition-colors\"\n                      >\n                        最近3个月\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 时间框架 - 默认全选 */}\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"font-semibold mb-2 text-gray-900\">时间框架 (自动全选)</h3>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {okxTimeframes.map(tf => (\n                      <span key={tf} className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium\">\n                        ✓ {tf}\n                      </span>\n                    ))}\n                  </div>\n                  <p className=\"text-sm text-gray-600 mt-2\">所有时间框架将自动下载，无需手动选择</p>\n                </div>\n\n                {/* 下载按钮 */}\n                <div className=\"flex justify-center pt-4\">\n                  <button\n                    onClick={startOkxDownload}\n                    disabled={okxDownloading || !Array.isArray(selectedSymbols) || selectedSymbols.length === 0}\n                    className={`px-8 py-3 rounded-lg font-semibold transition-all duration-200 ${\n                      okxDownloading || !Array.isArray(selectedSymbols) || selectedSymbols.length === 0\n                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                        : 'bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800 shadow-lg hover:shadow-xl'\n                    }`}\n                  >\n                    {okxDownloading ? (\n                      <>\n                        <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                        正在启动下载...\n                      </>\n                    ) : (\n                      <>\n                        🚀 开始下载 {okxDownloadType === 'tick' ? 'Tick' : 'K线'}数据 \n                        ({Array.isArray(selectedSymbols) ? selectedSymbols.length : 0} 个交易对)\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* OKX任务列表 */}\n            <div className=\"bg-white rounded-xl shadow-sm border\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h3 className=\"text-lg font-semibold\">下载任务列表</h3>\n              </div>\n              <div className=\"p-6\">\n                {!Array.isArray(okxTasks) || okxTasks.length === 0 ? (\n                  <div className=\"text-center py-8 text-gray-500\">\n                    暂无下载任务\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {Array.isArray(okxTasks) && okxTasks.slice(0, 5).map((task) => (\n                      <div key={task.task_id} className=\"border rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className={`w-3 h-3 rounded-full ${\n                              task.status === 'completed' ? 'bg-green-500' :\n                              task.status === 'running' ? 'bg-blue-500' :\n                              task.status === 'failed' ? 'bg-red-500' : 'bg-gray-400'\n                            }`}></div>\n                            <span className=\"font-medium\">{task.data_type.toUpperCase()} - {task.symbols.join(', ')}</span>\n                          </div>\n                          <span className={`px-3 py-1 rounded-full text-sm ${\n                            task.status === 'completed' ? 'bg-green-100 text-green-800' :\n                            task.status === 'running' ? 'bg-blue-100 text-blue-800' :\n                            task.status === 'failed' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'\n                          }`}>\n                            {task.status}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                          <div \n                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\" \n                            style={{ width: `${task.progress}%` }}\n                          ></div>\n                        </div>\n                        <div className=\"text-sm text-gray-600 mt-1\">\n                          {task.progress}% - {task.processed_files}/{task.total_files} 文件\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 质量监控 - 使用真实API */}\n        {activeTab === 'quality' && (\n          <div className=\"space-y-6\">\n            {/* 检测控制面板 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-xl font-semibold\">数据完整性检测 (真实API)</h2>\n                <div className=\"flex space-x-3\">\n                  <button \n                    onClick={runQualityCheck}\n                    disabled={checkingQuality}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400\"\n                  >\n                    🔍 开始检测\n                  </button>\n                  <button className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200\">\n                    📊 生成报告\n                  </button>\n                </div>\n              </div>\n\n              <p className=\"text-sm text-gray-600\">使用真实API检测数据完整性，精确定位每个缺失时段</p>\n            </div>\n\n            {/* 完整性概览仪表板 */}\n            {qualityMetrics && (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {/* K线数据完整性 */}\n                <div className=\"bg-white rounded-xl p-6 shadow-sm border\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"font-semibold text-gray-900\">K线数据完整性</h3>\n                    <div className=\"w-16 h-16 rounded-full bg-green-100 flex items-center justify-center\">\n                      <span className=\"text-lg font-bold text-green-600\">{qualityMetrics.completeness.kline_completeness.toFixed(1)}%</span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">检查结果:</span>\n                      <span className=\"font-medium\">真实API数据</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">完整性:</span>\n                      <span className=\"font-medium\">{qualityMetrics.completeness.kline_completeness.toFixed(1)}%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-red-600\">异常数据:</span>\n                      <span className=\"font-medium text-red-600\">{qualityMetrics.accuracy.price_anomalies} 处</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Tick数据完整性 */}  \n                <div className=\"bg-white rounded-xl p-6 shadow-sm border\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"font-semibold text-gray-900\">Tick数据完整性</h3>\n                    <div className=\"w-16 h-16 rounded-full bg-blue-100 flex items-center justify-center\">\n                      <span className=\"text-lg font-bold text-blue-600\">{qualityMetrics.completeness.tick_completeness.toFixed(1)}%</span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">检查结果:</span>\n                      <span className=\"font-medium\">待实现</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">完整性:</span>\n                      <span className=\"font-medium\">{qualityMetrics.completeness.tick_completeness.toFixed(1)}%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-red-600\">成交量异常:</span>\n                      <span className=\"font-medium text-red-600\">{qualityMetrics.accuracy.volume_anomalies} 处</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 数据异常检测 */}\n                <div className=\"bg-white rounded-xl p-6 shadow-sm border\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"font-semibold text-gray-900\">数据异常检测</h3>\n                    <div className=\"w-16 h-16 rounded-full bg-yellow-100 flex items-center justify-center\">\n                      <span className=\"text-2xl\">⚠️</span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">价格异常:</span>\n                      <span className=\"font-medium text-yellow-600\">{qualityMetrics.accuracy.price_anomalies} 处</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">成交量异常:</span>\n                      <span className=\"font-medium text-yellow-600\">{qualityMetrics.accuracy.volume_anomalies} 处</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 详细缺失分析表 */}\n            {missingData.length > 0 && (\n              <div className=\"bg-white rounded-xl shadow-sm border\">\n                <div className=\"px-6 py-4 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-semibold\">详细缺失分析 (真实API数据)</h3>\n                  <p className=\"text-sm text-gray-600\">基于真实API检测结果，精确定位每个缺失时段</p>\n                </div>\n                <div className=\"p-6\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">交易对</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">数据类型</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">时间框架</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">缺失时段</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">缺失数量</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">严重程度</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">操作</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200\">\n                        {missingData.map((record, index) => (\n                          <tr key={index} className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-3 text-sm font-medium\">{record.symbol}</td>\n                            <td className=\"px-4 py-3 text-sm\">{record.data_type}</td>\n                            <td className=\"px-4 py-3 text-sm\">{record.timeframe}</td>\n                            <td className=\"px-4 py-3 text-sm\">{record.missing_period}</td>\n                            <td className=\"px-4 py-3 text-sm text-red-600\">{record.missing_count === 0 ? '全时段' : `${record.missing_count}条`}</td>\n                            <td className=\"px-4 py-3\">\n                              <span className={`px-2 py-1 text-xs rounded ${\n                                record.severity === 'critical' \n                                  ? 'bg-red-100 text-red-800' \n                                  : 'bg-yellow-100 text-yellow-800'\n                              }`}>\n                                {record.severity === 'critical' ? 'Critical' : 'Warning'}\n                              </span>\n                            </td>\n                            <td className=\"px-4 py-3\">\n                              <button className=\"text-blue-600 hover:text-blue-800 text-sm\">补全下载</button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {!qualityMetrics && !checkingQuality && (\n              <div className=\"bg-white rounded-xl p-12 shadow-sm border text-center\">\n                <div className=\"text-6xl mb-4\">🔍</div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">数据质量检测 (真实API)</h3>\n                <p className=\"text-gray-600 mb-4\">点击\"开始检测\"按钮运行真实API数据完整性分析</p>\n                <button \n                  onClick={runQualityCheck}\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                >\n                  🚀 开始质量检测\n                </button>\n              </div>\n            )}\n\n            {checkingQuality && (\n              <div className=\"bg-white rounded-xl p-12 shadow-sm border text-center\">\n                <div className=\"flex justify-center items-center mb-4\">\n                  <svg className=\"animate-spin h-12 w-12 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">正在执行质量检测...</h3>\n                <p className=\"text-gray-600\">调用真实API检测数据完整性，请稍候</p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataManagementPageReal;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from '../components/common'\n\nconst NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"mb-8\">\n          <div className=\"w-24 h-24 mx-auto bg-gray-200 rounded-full flex items-center justify-center mb-4\">\n            <span className=\"text-4xl\">🔍</span>\n          </div>\n          <h1 className=\"text-6xl font-bold text-gray-900 mb-4\">404</h1>\n          <h2 className=\"text-2xl font-semibold text-gray-700 mb-2\">页面未找到</h2>\n          <p className=\"text-gray-500 mb-8\">\n            抱歉，您访问的页面不存在或已被移动\n          </p>\n        </div>\n        \n        <div className=\"space-x-4\">\n          <Link to=\"/\">\n            <Button>\n              返回首页\n            </Button>\n          </Link>\n          <Link to=\"/overview\">\n            <Button variant=\"outline\">\n              前往概览页\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NotFoundPage","import React, { ReactNode } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { useAuthStore } from '../../store/authStore'\nimport { useThemeStore } from '../../store/themeStore'\nimport { useLanguageStore } from '../../store/languageStore'\n\ninterface MainLayoutProps {\n  children: ReactNode\n}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  const location = useLocation()\n  const { user, logout } = useAuthStore()\n  const { theme, toggleTheme } = useThemeStore()\n  const { language, setLanguage, t } = useLanguageStore()\n\n  const navItems = [\n    { path: '/ai-chat', label: 'AI助手', key: 'ai-chat' },\n    // 仪表盘功能暂时隐藏\n    // { path: '/overview', label: t('dashboard'), key: 'home' },\n    { path: '/strategies', label: t('liveTrading'), key: 'strategies' },\n    // 策略模板功能暂时隐藏 - 项目初期未考虑此功能\n    // { path: '/strategy-templates', label: '策略模板', key: 'strategy-templates' },\n    { path: '/backtest', label: t('backtest'), key: 'backtest' },\n    // 移除图表交易和交易心得 - 不作为生产环境1.0功能\n    // { path: '/trading', label: t('chartTrading'), key: 'trading' },\n    // { path: '/trading-notes', label: t('tradingNotes'), key: 'trading-notes' },\n    // API管理已移至账户中心入口 - 从导航栏删除\n    // { path: '/api-keys', label: t('apiManagement'), key: 'api' },\n    { path: '/profile', label: t('accountCenter'), key: 'profile' },\n  ]\n\n  const isActiveRoute = (path: string) => {\n    if (path === '/ai-chat') {\n      return location.pathname === '/ai-chat'\n    }\n    // 精确匹配，避免 /trading-notes 激活 /trading\n    if (path === '/trading') {\n      return location.pathname === '/trading'\n    }\n    return location.pathname.startsWith(path)\n  }\n\n  const handleLogout = () => {\n    logout()\n    window.location.href = '/login'\n  }\n\n  const handleLanguageChange = (lang: 'zh' | 'en') => {\n    setLanguage(lang)\n  }\n\n  const handleThemeToggle = () => {\n    toggleTheme()\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors\">\n      {/* 页面容器 */}\n      <div className=\"max-w-[1440px] mx-auto bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden relative transition-colors\">\n        {/* Header */}\n        <header className=\"py-4 px-8 flex justify-between border-b border-gray-200 dark:border-gray-700\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <div className=\"w-7 h-7 rounded-full bg-brand-500 flex items-center justify-center mr-3\">\n              <span className=\"text-white font-bold text-sm\">T</span>\n            </div>\n            <h1 className=\"text-xl font-bold text-brand-500 dark:text-brand-400\">Trademe</h1>\n          </div>\n          \n          {/* Navigation */}\n          <nav className=\"flex gap-2\">\n            {navItems.map((item) => (\n              <Link\n                key={item.key}\n                to={item.path}\n                className={`nav-item ${\n                  isActiveRoute(item.path) ? 'active' : ''\n                }`}\n              >\n                {item.label}\n              </Link>\n            ))}\n          </nav>\n          \n          {/* User Profile */}\n          <div className=\"flex items-center relative group\">\n            <div className=\"w-9 h-9 rounded-full bg-gray-200 overflow-hidden cursor-pointer\">\n              {user?.avatar_url ? (\n                <img \n                  src={user.avatar_url} \n                  alt=\"User avatar\" \n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <div className=\"w-full h-full flex items-center justify-center bg-brand-100 text-brand-600 font-medium\">\n                  {user?.username?.charAt(0).toUpperCase() || 'U'}\n                </div>\n              )}\n            </div>\n            \n            {/* 用户下拉菜单 */}\n            <div className=\"absolute top-full right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-2 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50\">\n              <div className=\"px-4 py-2 border-b border-gray-100 dark:border-gray-700\">\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{user?.username}</p>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">{user?.email}</p>\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800 dark:bg-blue-800 dark:text-blue-200 mt-1\">\n                  {user?.membership_level === 'basic' && '基础版'}\n                  {user?.membership_level === 'premium' && '高级版'}\n                  {user?.membership_level === 'professional' && '专业版'}\n                </span>\n              </div>\n              <Link\n                to=\"/profile\"\n                className=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n              >\n                {t('settings')}\n              </Link>\n              <Link\n                to=\"/profile/membership\"\n                className=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n              >\n                {t('membershipManagement')}\n              </Link>\n              <button\n                onClick={handleLogout}\n                className=\"block w-full text-left px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n              >\n                {t('logout')}\n              </button>\n            </div>\n          </div>\n        </header>\n        \n        {/* 语言和主题切换按钮 */}\n        <div className=\"absolute top-4 right-8 flex items-center space-x-4 z-40\">\n          <div className=\"flex items-center space-x-2\">\n            <button \n              onClick={() => handleLanguageChange('zh')}\n              className={`px-2 py-1 text-sm rounded-md transition-colors ${\n                language === 'zh' \n                  ? 'bg-blue-100 text-blue-700 dark:bg-blue-800 dark:text-blue-200' \n                  : 'bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-300'\n              }`}\n            >\n              中\n            </button>\n            <button \n              onClick={() => handleLanguageChange('en')}\n              className={`px-2 py-1 text-sm rounded-md transition-colors ${\n                language === 'en' \n                  ? 'bg-blue-100 text-blue-700 dark:bg-blue-800 dark:text-blue-200' \n                  : 'bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-300'\n              }`}\n            >\n              EN\n            </button>\n          </div>\n          <div className=\"border-l border-gray-300 dark:border-gray-600 h-6\"></div>\n          <button \n            onClick={handleThemeToggle}\n            className=\"p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            title={theme === 'light' ? t('darkMode') : t('lightMode')}\n          >\n            {theme === 'light' ? (\n              // Sun icon for light mode\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"5\"/>\n                <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"/>\n              </svg>\n            ) : (\n              // Moon icon for dark mode\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"/>\n              </svg>\n            )}\n          </button>\n        </div>\n        \n        {/* Main Content */}\n        <main className=\"p-8\">\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default MainLayout","import React, { ReactNode } from 'react'\n\ninterface AuthLayoutProps {\n  children: ReactNode\n}\n\nconst AuthLayout: React.FC<AuthLayoutProps> = ({ children }) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4\">\n      {/* 页面容器 */}\n      <div className=\"max-w-md w-full bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden\">\n        {/* Header */}\n        <header className=\"py-6 px-8 flex justify-center border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-9 h-9 rounded-full bg-brand-500 flex items-center justify-center mr-3\">\n              <span className=\"text-white font-bold\">T</span>\n            </div>\n            <h1 className=\"text-2xl font-bold text-brand-500\">Trademe</h1>\n          </div>\n        </header>\n        \n        {/* 语言和主题切换按钮 */}\n        <div className=\"absolute top-4 right-4 flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <button \n              className=\"lang-toggle px-2 py-1 text-sm rounded-md bg-gray-100 hover:bg-gray-200\"\n              data-lang=\"zh\"\n            >\n              中\n            </button>\n            <button \n              className=\"lang-toggle px-2 py-1 text-sm rounded-md hover:bg-gray-200\"\n              data-lang=\"en\"\n            >\n              EN\n            </button>\n          </div>\n          <div className=\"border-l border-gray-300 h-6\"></div>\n          <button \n            id=\"theme-toggle\" \n            className=\"p-2 rounded-full hover:bg-gray-200\"\n            title=\"切换主题\"\n          >\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n              <path \n                fill=\"currentColor\" \n                d=\"M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z\"\n              />\n            </svg>\n          </button>\n        </div>\n        \n        {/* Main Content */}\n        <main className=\"p-8\">\n          {children}\n        </main>\n        \n        {/* Footer */}\n        <footer className=\"px-8 pb-6 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            © 2024 Trademe. 专业的数字货币策略交易平台\n          </p>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthLayout","import { Routes, Route } from 'react-router-dom'\nimport { useAuthStore } from '@/store/authStore'\nimport { useThemeStore } from '@/store/themeStore'\nimport { useEffect } from 'react'\nimport { GoogleOAuthProvider } from '@react-oauth/google'\n\n// 页面组件\nimport HomePage from './pages/HomePage'\nimport LoginPageNew from './pages/LoginPageNew'\nimport VerificationPage from './pages/VerificationPage'\nimport OverviewPage from './pages/OverviewPage'\nimport StrategiesPage from './pages/StrategiesPage'\n// 策略模板功能暂时隐藏 - 项目初期未考虑此功能\n// import StrategyTemplatesPage from './pages/StrategyTemplatesPage'\nimport StrategyLiveDetailsPage from './pages/StrategyLiveDetailsPage'\nimport LiveStrategiesPage from './pages/LiveStrategiesPage'\nimport BacktestPage from './pages/BacktestPage'\nimport BacktestDetailsPage from './pages/BacktestDetailsPage'\nimport AIChatPage from './pages/AIChatPage'\nimport APIManagementPage from './pages/APIManagementPage'\n// 移除TradingPage和TradingNotesPage - 不作为生产环境1.0功能\n// import TradingPage from './pages/TradingPage'\n// import TradingNotesPage from './pages/TradingNotesPage'\nimport ProfilePage from './pages/ProfilePage'\nimport AdminDashboardPage from './pages/AdminDashboardPage'\nimport UserManagementPage from './pages/UserManagementPage'\nimport ClaudeManagementPage from './pages/ClaudeManagementPage'\nimport WalletManagementPage from './pages/WalletManagementPage'\nimport DataManagementPageReal from './pages/DataManagementPageReal'\nimport NotFoundPage from './pages/NotFoundPage'\n\n// 布局组件\nimport MainLayout from './components/layout/MainLayout'\nimport AuthLayout from './components/layout/AuthLayout'\n\n// 路由保护组件\nimport ProtectedRoute from './components/common/ProtectedRoute'\nimport LoadingSpinner from './components/common/LoadingSpinner'\n\nfunction App() {\n  const { isLoading, checkAuth, token, isAuthenticated } = useAuthStore()\n  const { theme } = useThemeStore()\n\n  // 应用启动时检查认证状态\n  useEffect(() => {\n    // 只有在有token但未认证的情况下才调用checkAuth\n    // 这样可以避免每次热更新都重新验证token\n    if (token && !isAuthenticated) {\n      checkAuth()\n    }\n  }, [checkAuth, token, isAuthenticated])\n\n  // 全局应用主题效果\n  useEffect(() => {\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }, [theme])\n\n  // 显示加载状态\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 transition-colors\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    )\n  }\n\n  return (\n    <GoogleOAuthProvider clientId={import.meta.env.VITE_GOOGLE_CLIENT_ID || \"temp_client_id_for_development\"}>\n      <Routes>\n        {/* 公开路由 - 登录页面不使用AuthLayout */}\n        <Route path=\"/login\" element={<LoginPageNew />} />\n      \n      <Route path=\"/verification\" element={\n        <AuthLayout>\n          <VerificationPage />\n        </AuthLayout>\n      } />\n\n      {/* 主页 - 已登录用户重定向到AI助手，未登录显示欢迎页 */}\n      <Route path=\"/\" element={<HomePage />} />\n\n      {/* 受保护路由 - 使用主布局 */}\n      <Route path=\"/overview\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <OverviewPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      <Route path=\"/strategies\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <StrategiesPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      {/* 策略模板功能暂时隐藏 - 项目初期未考虑此功能 */}\n      {/* <Route path=\"/strategy-templates\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <StrategyTemplatesPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } /> */}\n\n      <Route path=\"/strategy/:strategyId/live\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <StrategyLiveDetailsPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      <Route path=\"/live-strategies\" element={\n        <ProtectedRoute>\n          <LiveStrategiesPage />\n        </ProtectedRoute>\n      } />\n\n      <Route path=\"/backtest\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <BacktestPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      <Route path=\"/backtest/:id/details\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <BacktestDetailsPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      {/* 移除TradingPage路由 - 不作为生产环境1.0功能 */}\n      {/* <Route path=\"/trading\" element={\n        <ProtectedRoute>\n          <TradingPage />\n        </ProtectedRoute>\n      } /> */}\n\n      <Route path=\"/ai-chat\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <AIChatPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      <Route path=\"/api-keys\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <APIManagementPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      {/* 兼容旧路径 */}\n      <Route path=\"/api-management\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <APIManagementPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      {/* 移除TradingNotesPage路由 - 不作为生产环境1.0功能 */}\n      {/* <Route path=\"/trading-notes\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <TradingNotesPage />\n          </MainLayout>\n        </ProtectedRoute>\n      } /> */}\n\n      <Route path=\"/profile\" element={\n        <ProtectedRoute>\n          <MainLayout>\n            <ProfilePage />\n          </MainLayout>\n        </ProtectedRoute>\n      } />\n\n      {/* 管理员后台 - 不使用MainLayout */}\n      <Route path=\"/admin\" element={\n        <ProtectedRoute>\n          <AdminDashboardPage />\n        </ProtectedRoute>\n      } />\n\n      {/* 用户管理页面 */}\n      <Route path=\"/admin/users\" element={\n        <ProtectedRoute>\n          <UserManagementPage />\n        </ProtectedRoute>\n      } />\n\n      {/* Claude AI服务管理页面 */}\n      <Route path=\"/admin/claude\" element={\n        <ProtectedRoute>\n          <ClaudeManagementPage />\n        </ProtectedRoute>\n      } />\n\n      {/* USDT钱包池管理页面 */}\n      <Route path=\"/admin/wallets\" element={\n        <ProtectedRoute>\n          <WalletManagementPage />\n        </ProtectedRoute>\n      } />\n      \n      {/* 数据管理页面 */}\n      <Route path=\"/admin/data\" element={\n        <ProtectedRoute>\n          <DataManagementPageReal />\n        </ProtectedRoute>\n      } />\n\n      {/* 404页面 */}\n      <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </GoogleOAuthProvider>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\nimport { Toaster } from 'react-hot-toast'\n\nimport App from './App'\nimport './index.css'\n\n// 创建React Query客户端\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 5 * 60 * 1000, // 5分钟\n      retry: (failureCount, error: any) => {\n        // 4xx错误不重试\n        if (error?.response?.status >= 400 && error?.response?.status < 500) {\n          return false\n        }\n        return failureCount < 3\n      },\n    },\n    mutations: {\n      retry: 1,\n    },\n  },\n})\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n        <Toaster\n          position=\"top-right\"\n          toastOptions={{\n            duration: 4000,\n            style: {\n              background: '#363636',\n              color: '#fff',\n            },\n            success: {\n              iconTheme: {\n                primary: '#22c55e',\n                secondary: '#fff',\n              },\n            },\n            error: {\n              iconTheme: {\n                primary: '#ef4444',\n                secondary: '#fff',\n              },\n            },\n          }}\n        />\n      </BrowserRouter>\n      {/* 开发环境显示React Query开发工具 */}\n      {import.meta.env.DEV && <ReactQueryDevtools initialIsOpen={false} />}\n    </QueryClientProvider>\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","Subscribable","listener","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","key","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","aItemsSet","equalItems","i","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","FocusManager","_a","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","__privateGet","setup","focused","isFocused","focusManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","createRetryer","config","isRetryCancelled","continueFn","isResolved","cancel","cancelOptions","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","error","retry","retryDelay","delay","shouldRetry","defaultScheduler","cb","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","fn","notifyManager","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","_b","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","queryFnContext2","context","context2","_c","_d","_f","_e","_h","_g","_j","_i","_l","_k","action","reducer","fetchState","newState","hasData","initialDataUpdatedAt","QueryCache","_queries","queryHash","queryInMap","defaultedFilters","queries","event","Mutation","_Mutation_instances","_observers","_mutationCache","variables","onContinue","restored","isPaused","_n","_m","_p","_o","_r","_q","_t","_s","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","scope","scopeFor","scopedMutations","index","mutationsWithSameScope","firstPendingMutation","foundMutation","pausedMutations","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","defaultedOptions","cachedData","queryCache","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","React.createContext","QueryClientProvider","children","React.useEffect","jsx","t","s","u","r","j","Z","W","E","re","H","v","Y","Q","S","se","V","te","oe","ee","T","ie","P","ce","w","ne","A","X","R","z","O","K","B","I","de","M","me","le","C","pe","Te","fe","F","ue","ge","he","L","ye","be","U","Se","Ae","xe","Pe","$","b.createElement","Re","Ee","ve","De","Oe","J","Ie","ke","G","N","y.memo","y.createElement","y.Fragment","Ve","x.createElement","we","x.useCallback","Me","Ce","D","Fe","zt","createStoreImpl","createState","listeners","setState","partial","replace","nextState","previousState","getState","api","initialState","__vite_import_meta_env__","createStore","React","is","y","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","useSyncExternalStore$2","subscribe","getSnapshot","_useState","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useRef","useMemo","withSelector_production","getServerSnapshot","selector","isEqual","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","useStore","equalityFn","slice","createImpl","useBoundStore","create","createJSONStorage","getStorage","storage","name","parse","str2","str","newValue","toThenable","onFulfilled","_onRejected","_onFulfilled","onRejected","oldImpl","baseOptions","set","get","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","thenableSerialize","setItem","errorInSync","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","postRehydrationCallback","storageValue","deserializedStorageValue","migratedState","_a2","newOptions","newImpl","migrationResult","migrated","persistImpl","persist","bind","thisArg","toString","getPrototypeOf","iterator","toStringTag","kindOf","cache","thing","kindOfTest","typeOfTest","isArray","isUndefined","isBuffer","isFunction","isArrayBuffer","isArrayBufferView","isString","isNumber","isObject","isBoolean","prototype","isEmptyObject","isDate","isFile","isBlob","isFileList","isStream","isFormData","kind","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","trim","forEach","obj","allOwnKeys","keys","len","findKey","_key","_global","isContextDefined","merge","caseless","assignValue","targetKey","extend","stripBOM","content","inherits","constructor","superConstructor","props","descriptors","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","toArray","arr","isTypedArray","TypedArray","forEachEntry","_iterator","pair","matchAll","regExp","matches","isHTMLForm","toCamelCase","p1","p2","hasOwnProperty","isRegExp","reduceDescriptors","reducedDescriptors","descriptor","ret","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toFiniteNumber","defaultValue","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","_setImmediate","setImmediateSupported","postMessageSupported","token","callbacks","asap","isIterable","utils$1","AxiosError","message","code","request","response","utils","customProps","axiosError","httpAdapter","isVisitable","removeBrackets","renderKey","path","dots","isFlatArray","predicates","toFormData","formData","option","metaTokens","visitor","defaultVisitor","indexes","useBlob","convertValue","el","exposedHelpers","build","encode","charMap","match","AxiosURLSearchParams","params","encoder","_encode","buildURL","url","serializeFn","serializedParams","hashmarkIndex","InterceptorManager","fulfilled","rejected","id","transitionalDefaults","URLSearchParams$1","FormData$1","Blob$1","platform$1","URLSearchParams","FormData","Blob","hasBrowserEnv","_navigator","hasStandardBrowserEnv","hasStandardBrowserWebWorkerEnv","origin","platform","toURLEncodedForm","helpers","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","stringifySafely","rawValue","parser","headers","contentType","hasJSONContentType","isObjectPayload","_FormData","transitional","forcedJSONParsing","JSONRequested","strictJSONParsing","method","ignoreDuplicateOf","parseHeaders","rawHeaders","parsed","line","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders$1","valueOrRewrite","rewrite","self","setHeader","_value","_header","_rewrite","lHeader","setHeaders","dest","entry","matcher","deleted","deleteHeader","format","normalized","targets","asStrings","first","computed","accessors","defineAccessor","AxiosHeaders","mapped","headerValue","transformData","fns","isCancel","CanceledError","settle","validateStatus","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","now","startedAt","bytesCount","passed","throttle","freq","timestamp","threshold","lastArgs","timer","invoke","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","loaded","total","progressBytes","rate","inRange","progressEventDecorator","throttled","lengthComputable","asyncDecorator","isURLSameOrigin","isMSIE","cookies","expires","domain","secure","cookie","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","allowAbsoluteUrls","isRelativeUrl","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","resolveConfig","newConfig","withXSRFToken","xsrfHeaderName","xsrfCookieName","auth","xsrfValue","isXHRAdapterSupported","xhrAdapter","_config","requestData","requestHeaders","responseType","onUploadProgress","onDownloadProgress","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","done","onloadend","responseHeaders","err","timeoutErrorMessage","protocol","composeSignals","signals","length","controller","aborted","onabort","unsubscribe","signal","streamChunk","chunk","chunkSize","pos","end","readBytes","iterable","readStream","stream","reader","trackStream","onProgress","onFinish","_onFinish","loadedBytes","isFetchSupported","isReadableStreamSupported","encodeText","test","supportsRequestStream","duplexAccessed","hasContentType","DEFAULT_CHUNK_SIZE","supportsResponseStream","resolvers","res","getBodyLength","body","resolveBodyLength","fetchAdapter","cancelToken","withCredentials","composedSignal","requestContentLength","_request","contentTypeHeader","isCredentialsSupported","isStreamResponse","responseContentLength","responseData","knownAdapters","renderReason","isResolvedHandle","adapter","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","correctSpelling","assertOptions","schema","allowUnknown","Axios$1","instanceConfig","configOrUrl","dummy","paramsSerializer","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","fullPath","Axios","generateHTTPMethod","isForm","CancelToken$1","CancelToken","executor","resolvePromise","onfulfilled","abort","spread","isAxiosError","payload","HttpStatusCode","createInstance","defaultConfig","instance","axios","all","Cancel","formToJSON","getAdapter","ErrorType","_ErrorHandler","__publicField","showToast","appError","toast","logMessage","errorType","maxRetries","operation","lastError","attempt","ErrorHandler","errorHandler","handleError","createRetryHandler","createApiClient","serviceName","authData","parsedData","originalRequest","currentToken","newToken","updatedState","updatedData","refreshError","apiBaseUrl","tradingApiUrl","userServiceClient","tradingServiceClient","handleApiResponse","handleApiError","authApi","credentials","googleToken","email","password","currentPassword","newPassword","useAuthStore","detailedMessage","credential","isAuthenticated","user","userProfile","updatedUser","useThemeStore","theme","useLoadGsiScript","nonce","onScriptLoadSuccess","onScriptLoadError","scriptLoadedSuccessfully","setScriptLoadedSuccessfully","onScriptLoadSuccessRef","onScriptLoadErrorRef","scriptTag","GoogleOAuthContext","createContext","GoogleOAuthProvider","clientId","contextValue","useGoogleOAuth","useContext","extractClientId","credentialResponse","containerHeightMap","GoogleLogin","onSuccess","onError","useOneTap","promptMomentNotification","size","text","shape","logo_alignment","width","locale","click_listener","containerProps","btnContainerRef","onSuccessRef","onErrorRef","promptMomentNotificationRef","select_by","translations","useLanguageStore","lang","ProfitCurveChart","title","height","className","showBenchmark","benchmarkName","loading","chartRef","chartInstance","echarts.init","times","values","benchmarkValues","cumulativeReturns","cumulativeBenchmark","base","benchmarkBase","series","echarts.graphic.LinearGradient","dataIndex","originalReturn","cumulativeReturn","benchmarkCumulative","handleResize","jsxs","AdvancedBacktestChart","metrics","equityCurve","monthlyReturns","equityChartRef","heatmapChartRef","metricsChartRef","equityChart","heatmapChart","metricsChart","point","equity","drawdown","rollingMax","timeIndex","years","months","month","yearIndex","returnValue","year","monthName","color","echarts.graphic.RadialGradient","HomePage","navigate","useNavigate","dashboardStats","setDashboardStats","profitCurveData","setProfitCurveData","isLoadingStats","setIsLoadingStats","isLoadingProfitCurve","setIsLoadingProfitCurve","selectedTimeframe","setSelectedTimeframe","Link","Fragment","isCheckBoxInput","element","isDateObject","isNullOrUndefined","isObjectType","getEventValue","getNodeParentName","isNameInFieldArray","names","tempObject","prototypeCopy","isWeb","cloneObject","isFileListInstance","isKey","compact","stringToPath","tempPath","objValue","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","HookFormContext","getProxyFormState","formState","control","localProxyFormState","isRoot","useIsomorphicLayoutEffect","generateWatchOutput","_names","formValues","isGlobal","fieldName","isPrimitive","deepEqual","object1","object2","_internal_visited","keys1","keys2","val1","val2","appendErrors","validateAllFieldCriteria","errors","convertToArrayPayload","createSubject","isFileInput","isHTMLElement","owner","isMultipleSelect","isRadioInput","isRadioOrCheckbox","ref","live","baseGet","updatePath","isEmptyArray","unset","paths","childObject","objectHasFunction","markFieldsDirty","fields","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","defaultValues","defaultResult","validResult","getCheckboxValue","getFieldValueAs","valueAsNumber","valueAsDate","setValueAs","defaultReturn","getRadioValue","getFieldValue","getResolverOptions","fieldsNames","_fields","criteriaMode","shouldUseNativeValidation","field","isRegex","getRuleValue","rule","getValidationModes","mode","ASYNC_FUNCTION","hasPromiseValidation","fieldReference","validateFunction","hasValidation","isWatched","isBlurEvent","watchName","iterateFieldsByAction","abortEarly","currentField","schemaErrorLookup","foundError","shouldRenderFormState","formStateData","_proxyFormState","updateFormState","shouldSubscribeByName","signalName","currentName","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","updateFieldArrayRootError","fieldArrayErrors","isMessage","getValidateError","getValueAndMessage","validationData","validateField","disabledFieldNames","isFieldArray","refs","required","maxLength","minLength","pattern","validate","mount","inputValue","inputRef","setCustomValidity","isRadio","isCheckBox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","time","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","defaultOptions","createFormControl","_options","_formState","_defaultValues","_formValues","_state","delayErrorCallback","_proxySubscribeFormState","_subjects","shouldDisplayAllAssociatedErrors","debounce","wait","_setValid","shouldUpdateValid","isValid","_runSchema","executeBuiltInValidation","_updateIsValidating","isValidating","_setFieldArray","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","touchedFields","_getDirty","updateErrors","_setErrors","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","updatedFormState","executeSchemaAndUpdateState","shouldOnlyCheckValid","isFieldArrayRoot","isPromiseFunction","fieldError","_removeUnmounted","unregister","getValues","_getWatch","_getFieldArray","optionRef","checkboxRef","radioRef","trigger","setValues","fieldKey","setValue","cloneValue","onChange","isFieldValueUpdated","_updateIsFieldValueUpdated","validationModeBeforeSubmit","validationModeAfterSubmit","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","getFieldState","clearErrors","inputName","setError","currentError","currentRef","restOfErrorTree","watch","_subscribe","_setFormState","_setDisabledField","disabled","register","disabledIsDefined","fieldRef","radioOrCheckbox","_focusError","_disableForm","handleSubmit","onValid","onInvalid","onValidError","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","fieldsToCheck","form","reset","setFocus","methods","useForm","_formControl","_values","formControl","rest","sub","isDirty","util","assertIs","_arg","assertNever","_x","validKeys","filtered","checker","joinValues","separator","objectUtil","second","ZodParsedType","getParsedType","ZodIssueCode","ZodError","issues","subs","actualProto","_mapper","mapper","issue","fieldErrors","processError","curr","formErrors","firstEl","errorMap","_ctx","overrideErrorMap","defaultErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullIssue","errorMessage","maps","map","addIssueToContext","ctx","overrideMap","ParseStatus","results","arrayValue","INVALID","pairs","syncPairs","finalObject","DIRTY","OK","isAborted","isAsync","errorUtil","ParseInputLazyPath","parent","handleResult","processCreateParams","invalid_type_error","required_error","description","iss","ZodType","maybeAsyncResult","check","getIssueProperties","refinementData","refinement","ZodEffects","ZodFirstPartyTypeKind","def","ZodOptional","ZodNullable","ZodArray","ZodPromise","ZodUnion","incoming","ZodIntersection","transform","defaultValueFunc","ZodDefault","ZodBranded","catchValueFunc","ZodCatch","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","_emojiRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","timeRegexSource","secondsRegexSource","secondsQuantifier","timeRegex","datetimeRegex","regex","isValidIP","ip","isValidJWT","jwt","alg","base64","decoded","isValidCidr","ZodString","tooBig","tooSmall","validation","ch","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","valInt","stepInt","ZodNumber","inclusive","ZodBigInt","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","ZodUnknown","ZodNever","ZodVoid","deepPartialify","ZodObject","newShape","fieldSchema","ZodTuple","shapeKeys","extraKeys","keyValidator","unknownKeys","catchall","defaultError","augmentation","merging","mask","newField","createZodEnum","handleResults","unionErrors","childCtx","dirty","types","mergeValues","aType","bType","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","left","right","itemIndex","schemas","ZodMap","keyType","valueType","finalMap","ZodSet","finalizeSet","elements","parsedSet","minSize","maxSize","ZodLazy","getter","ZodLiteral","ZodEnum","expectedValues","enumValues","newDef","ZodNativeEnum","nativeEnumValues","promisified","effect","checkCtx","processed","executeRefinement","acc","inner","preprocess","newCtx","ZodNaN","inResult","freeze","stringType","objectType","loginSchema","z.object","z.string","LoginPageNew","isRegisterMode","setIsRegisterMode","location","useLocation","login","registerUser","isLoading","toggleTheme","language","setLanguage","zodResolver","from","handleGoogleSuccess","handleGoogleError","onSubmit","success","toggleMode","LoadingSpinner","sizeClasses","colorClasses","Button","variant","baseClasses","variantClasses","isDisabled","VerificationPage","marketApi","symbol","timeframe","exchange","limit","kline","symbols","depth","startDate","endDate","indicators","period","WebSocketManager","endpoint","handlers","authToken","connection","ws","authMessage","newWs","connectionDetails","conn","wsManager","useMarketStore","selectedExchange","fetchKlineData","selectedSymbol","newSubscribed","stats","strategyApi","strategyId","backtestId","useStrategyStore","strategy","updatedStrategy","aiApi","aiMode","sessionId","progress","sessionType","days","taskId","WebSocketAIClient","events","authTimeout","originalHandler","errorMsg","requestId","errorInfo","_v","_u","WebSocketAIService","baseUrl","wsUrl","successData","errorData","wsAIService","getWebSocketAIService","useAIStore","newSession","sendMessage","session","orderedHistoryMessages","msg","useWebSocket","currentSession","currentAIMode","retryCount","defaultSessionName","userMessage","retryHandler","aiResponse","timeoutPromise","messagePromise","assistantMessage","resetUIState","userFriendlyMessage","shouldShowRetryOption","updatedSessions","costUsd","tokensUsed","apiResponse","objectives","prompt","analysis","timeframes","strategyCode","portfolio","assessment","authStore","wsService","wsConnected","safeUserMessage","responseContent","responseObj","safeMessage","streamingMessage","updatedMessages","newAccumulatedContent","currentMessage","newMessage","safeStringifyError","processedErrorData","friendlyMessage","errorMessage_content","safeErrorMessage","timeoutId","errorCode","jsonStr","cleanErrorMessage","monitorInterval","generatedStrategy","fullConfig","show","tradingApi","orderData","orderId","currentPrice","sessionData","defaultTradingForm","useTradingStore","exchanges","account","order","orders","activeOrders","orderHistory","positions","totalPortfolioValue","sum","totalUnrealizedPnL","totalRealizedPnL","positionPnL","summary","dailyPnL","trades","sessions","activeSessions","tradingForm","price","quantity","amount","backtestApi","backtestIds","defaultConfigForm","useBacktestStore","per_page","backtestsArray","bt","poll","statusInfo","selectedId","selectedForComparison","blob","link","useBacktestList","useBacktestCreation","useBacktestComparison","useGlobalLoading","authLoading","marketLoading","strategyLoading","aiLoading","aiGenerating","aiAnalyzing","tradingLoading","placingOrder","backtestLoading","creatingBacktest","useWebSocketStatus","isConnected","subscribedTickers","connectionStats","useUserInfo","membershipLevel","OverviewPage","isPremium","setStats","strategies","setStrategies","setLoading","loadOverviewData","strategiesList","aiStrategies","quickActions","getIcon","iconName","icons","getColorClasses","colorMap","colors","liveTradingApi","actionRequest","strategyData","parameters","liveStrategyId","StrategiesPage","selectedStrategy","setSelectedStrategy","searchQuery","setSearchQuery","statusFilter","setStatusFilter","loadStrategies","processedStrategies","liveStrategy","profitPercent","filteredStrategies","matchesSearch","matchesStatus","handleStartStrategy","prev","handleStopStrategy","handlePauseStrategy","handleDeleteStrategy","getStatusText","handleViewLiveDetails","StrategyLiveDetailsPage","useParams","liveDetails","setLiveDetails","allTrades","setAllTrades","tradesLoading","setTradesLoading","setCurrentPage","hasMoreTrades","setHasMoreTrades","pageSize","loadLiveDetails","loadTrades","append","hasMore","handleLoadMoreTrades","nextPage","formatNumber","num","decimals","formatTime","dateString","getTradeSideStyle","side","getProfitStyle","profit","live_stats","performance","trade","LiveStrategiesPage","showParametersModal","setShowParametersModal","liveStrategies","setLiveStrategies","strategyStats","setStrategyStats","strategiesResponse","statsResponse","handleStrategyAction","getStatusBadge","styles","labels","ProtectedRoute","requireMembership","checkAuth","Navigate","membershipLevels","userLevel","requiredLevel","Input","forwardRef","label","helperText","icon","iconPosition","hasIcon","inputClasses","formatCurrency","currency","formatted","formatPercent","isAlreadyPercent","formatDateTime","date","day","hours","minutes","seconds","BacktestPage","activeTab","setActiveTab","backtests","fetchBacktests","deleteBacktest","downloadReport","configForm","isCreatingBacktest","createBacktest","updateBacktestForm","resetBacktestForm","toggleComparisonSelection","compareBacktests","clearComparison","strategiesLoading","setStrategiesLoading","fetchStrategies","handleCreateBacktest","handleDeleteBacktest","getStatusStyle","backtest","BacktestDetailsPage","setBacktest","setAiAnalyzing","aiAnalysisResult","setAiAnalysisResult","showSendToAiConfirm","setShowSendToAiConfirm","mockBacktest","generateMockEquityCurve","generateMockMonthlyReturns","generateMockTrades","dailyReturn","pnl","handleSendToAiAnalysis","analysisResult","handleOptimizeStrategy","optimizationContext","strength","suggestion","ErrorBoundary","ChevronDownIcon","titleId","svgRef","React.createElement","ForwardRef","React.forwardRef","ChevronUpIcon","BacktestResultCard","isExpanded","setIsExpanded","totalReturn","isProfit","getRiskColor","risk","getReturnColor","returnRate","StrategyCodeAnalyzer","codeBlock","codeHash","structureScore","indicatorScore","tradingScore","syntaxScore","score","indicator","patterns","syntaxChecks","structure","trading","syntax","hash","strategyAnalyzer","analyzeStrategyMessage","getStrategyStateKey","saveStrategyState","loadStrategyState","saved","extractBacktestResult","keyword","backtestData","returnMatch","sharpeMatch","drawdownMatch","winRateMatch","suggestionMatches","filterMessageContent","role","codeBlockRegex","analyzeMessageForStrategy","startTime","analysisTime","messageState","detectSuccessMessage","extractPythonCode","extractCodeFromMessage","codeMatch","extractStrategyVersionFromMessage","messageIndex","existingVersions","strategyNameMatch","strategyName","extractStrategyDescription","features","CreateSessionModal","isOpen","onClose","onCreateSession","sessionName","setSessionName","setSessionType","setDescription","isCreating","setIsCreating","AIChatPage","chatSessions","messages","messagesLoading","messagesLoaded","isTyping","clearError","createChatSession","loadChatSessions","selectChatSession","loadUsageStats","usageStats","deleteChatSession","networkStatus","checkNetworkStatus","initializeWebSocket","isCreateModalOpen","setIsCreateModalOpen","isBacktestModalOpen","setIsBacktestModalOpen","isStrategyCodeModalOpen","setIsStrategyCodeModalOpen","messageInput","setMessageInput","pastedImages","setPastedImages","isUploadingImages","setIsUploadingImages","strategyDevState","setStrategyDevState","isOptimizationMode","setIsOptimizationMode","optimizationData","setOptimizationData","backtestProgress","setBacktestProgress","strategyVersions","setStrategyVersions","strategyCodeModal","setStrategyCodeModal","lastAIMessage","lastMessage","latestMessage","hasStrategySuccess","isStreamCompleted","newVersions","strategyVersion","checkStrategyState","ma5StrategyState","hasCodeInSession","hasStrategySuccessInSession","smartAnalysis","newStrategyState","sessionRequest","initialMessage","savedState","currentModeSessions","handleCreateSession","handlePaste","imageFiles","file","removePastedImage","handleSendMessage","finalMessage","finalContent","isStrategySuccess","backtestResult","part","parts","codeMatches","hasCode","tempStrategyVersion","log","analysisMessage","optimizationMessage","isIndicatorSession","itemType","libraryType","nameMatch","BacktestConfigModal","versionId","startMockProgressUpdate","progressSteps","currentIndex","progressInterval","currentStep","finalResults","backtestConfig","host","isValidationError","StrategyCodeModal","onOpenStrategyModal","isSubmitting","setIsSubmitting","setConfig","productTypes","feeRateOptions","getCurrentFeeRates","defaultFeeRates","popularSymbols","handleSymbolToggle","handleTimeframeToggle","getTickBacktestLimit","isTickDisabled","ex","newProductType","newFeeRate","startDateObj","endDateObj","diffDays","tf","handleCopyCode","getAuthToken","APIManagementPage","setFormData","apiKeys","setApiKeys","submitting","setSubmitting","showSecrets","setShowSecrets","loadAPIKeys","handleDelete","handleTest","toggleShowSecret","getStatusIndicator","fillTestData","apiKey","membershipPlans","ProfilePage","logout","loadingApiKeys","setLoadingApiKeys","showPayment","setShowPayment","selectedPlan","setSelectedPlan","loadUserStats","errorText","enrichedApiKeys","getPlanColorClass","getUsagePercentage","used","getCurrentPlan","plan","handleUpgrade","planLevel","handlePayment","handleLogout","handleAddAPIKey","handleDeleteAPIKey","getExchangeIcon","currentPlan","selectedPlanInfo","feature","AdminDashboardPage","recentUsers","setRecentUsers","fetchSystemStats","fetchRecentUsers","formatDate","getMembershipBadgeColor","level","getMembershipText","UserManagementPage","users","setUsers","selectedUser","setSelectedUser","membershipStats","setMembershipStats","analytics","setAnalytics","systemStats","setSystemStats","selectedUsers","setSelectedUsers","showUserDetail","setShowUserDetail","searchTerm","setSearchTerm","filterStatus","setFilterStatus","fetchUsers","fetchAnalytics","fetchUserDetails","userId","batchUpdateUsers","getDaysRemaining","expiresAt","filteredUsers","matchesFilter","dist","percentage","ClaudeManagementPage","accounts","setAccounts","proxies","setProxies","setUsageStats","schedulerConfig","setSchedulerConfig","anomalies","setAnomalies","selectedAccounts","setSelectedAccounts","showAddAccount","setShowAddAccount","showAccountDetail","setShowAccountDetail","selectedAccount","setSelectedAccount","userUsageStats","setUserUsageStats","showSchedulerConfig","setShowSchedulerConfig","anthropicAccounts","setAnthropicAccounts","showAnthropicForm","setShowAnthropicForm","setupTokenFlow","setSetupTokenFlow","newAccount","setNewAccount","fetchClaudeAccounts","fetchProxies","fetchUsageStats","fetchAnomalyDetection","fetchAnthropicAccounts","generateSetupTokenUrl","exchangeSetupToken","resetSetupTokenFlow","testAnthropicAccount","accountId","deleteAnthropicAccount","accountName","fetchUserUsageStats","addClaudeAccount","accountData","testAccount","deleteAccount","getStatusColor","filteredAccounts","usagePercent","usageColor","anomaly","rec","proxy","usage","recommendation","WalletManagementPage","consolidationStats","setConsolidationStats","consolidationForm","setConsolidationForm","consolidating","setConsolidating","walletsPerPage","totalWallets","setTotalWallets","fetchUserWalletStats","fetchConsolidationStats","fetchUserWallets","userWallets","usersToFetch","handleStartConsolidation","tasksToExecute","task","executeResponse","executeResult","handleAllocateWalletsForUser","handleConsolidateUserFunds","totalPages","tab","network","wallet","DataManagementPageReal","okxDownloadType","setOkxDownloadType","marketType","setMarketType","customSymbol","setCustomSymbol","selectedSymbols","setSelectedSymbols","okxTasks","setOkxTasks","okxDownloading","setOkxDownloading","setStartDate","setEndDate","dataAvailability","setDataAvailability","dataSummary","setDataSummary","okxStatistics","setOKXStatistics","loadingOverview","setLoadingOverview","qualityMetrics","setQualityMetrics","missingData","setMissingData","checkingQuality","setCheckingQuality","getSymbolsByMarketType","dataType","okxTimeframes","fetchDataStats","fetchOKXStatistics","fetchDataAvailability","converted","fetchOkxTasks","startOkxDownload","requestBody","runQualityCheck","qualityPromises","allMissingData","validResults","totalChecked","completeResults","overallCompleteness","interval","apiUrl","sevenDaysAgo","today","thirtyDaysAgo","threeMonthsAgo","record","NotFoundPage","MainLayout","navItems","isActiveRoute","handleLanguageChange","handleThemeToggle","AuthLayout","App","Routes","Route","queryClient","ReactDOM","BrowserRouter","Toaster"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,87,88,89,90,91,92,93,94,95,96,126,127]}