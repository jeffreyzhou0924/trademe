version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: '%(asctime)s | %(name)s | %(levelname)s | %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  detailed:
    format: '%(asctime)s | %(name)s | %(levelname)s | %(filename)s:%(lineno)d | %(funcName)s | %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  security:
    format: '%(asctime)s | SECURITY | %(levelname)s | USER:%(user_id)s | IP:%(client_ip)s | %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
    defaults:
      user_id: 'unknown'
      client_ip: 'unknown'
  
  performance:
    format: '%(asctime)s | PERF | %(levelname)s | %(duration)sms | %(endpoint)s | %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  json:
    format: '{"timestamp":"%(asctime)s","level":"%(levelname)s","logger":"%(name)s","message":"%(message)s","filename":"%(filename)s","lineno":%(lineno)d}'
    datefmt: '%Y-%m-%dT%H:%M:%S'

filters:
  rate_limit:
    (): app.utils.log_filters.RateLimitFilter
    max_per_minute: 1000
  
  sensitive_data:
    (): app.utils.log_filters.SensitiveDataFilter

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
    filters: [rate_limit, sensitive_data]
  
  main_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/trading-service.log
    maxBytes: 20971520  # 20MB (减小文件大小)
    backupCount: 10     # 增加备份文件数
    encoding: utf-8
    delay: true
    filters: [rate_limit, sensitive_data]
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/trading-service.error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf-8
    delay: true
    filters: [sensitive_data]
  
  security_file:
    class: logging.handlers.RotatingFileHandler
    level: WARNING
    formatter: security
    filename: logs/security.log
    maxBytes: 5242880   # 5MB
    backupCount: 10
    encoding: utf-8
    delay: true
  
  performance_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: performance
    filename: logs/performance.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf-8
    delay: true
  
  json_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/trading-service.json.log
    maxBytes: 20971520  # 20MB
    backupCount: 5
    encoding: utf-8
    delay: true
    filters: [sensitive_data]

loggers:
  # 应用程序日志
  app:
    level: INFO
    handlers: [console, main_file, error_file]
    propagate: false
  
  # 安全相关日志
  app.security:
    level: INFO
    handlers: [security_file, error_file]
    propagate: false
  
  app.auth:
    level: INFO
    handlers: [security_file, error_file]
    propagate: false
  
  # 性能日志
  app.performance:
    level: INFO
    handlers: [performance_file]
    propagate: false
  
  # 业务日志
  app.trading:
    level: INFO
    handlers: [main_file, error_file]
    propagate: false
  
  app.ai:
    level: INFO
    handlers: [main_file, error_file]
    propagate: false
  
  app.payment:
    level: INFO
    handlers: [main_file, security_file, error_file]
    propagate: false
  
  # Uvicorn日志
  uvicorn:
    level: INFO
    handlers: [console, main_file]
    propagate: false
  
  uvicorn.error:
    level: INFO
    handlers: [console, main_file, error_file]
    propagate: false
  
  uvicorn.access:
    level: INFO
    handlers: [performance_file]
    propagate: false
  
  # FastAPI日志
  fastapi:
    level: INFO
    handlers: [main_file]
    propagate: false
  
  # 数据库日志
  sqlalchemy:
    level: WARNING
    handlers: [main_file, error_file]
    propagate: false
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [main_file]
    propagate: false
  
  # 过滤噪音日志
  multipart:
    level: ERROR
    handlers: [error_file]
    propagate: false
  
  httpx:
    level: WARNING
    handlers: [main_file]
    propagate: false
  
  httpcore:
    level: WARNING
    handlers: [main_file]
    propagate: false
  
  urllib3:
    level: WARNING
    handlers: [main_file]
    propagate: false
  
  # 外部库日志控制
  asyncio:
    level: WARNING
    handlers: [error_file]
    propagate: false

root:
  level: INFO
  handlers: [console, main_file, error_file]
  filters: [rate_limit, sensitive_data]